{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///coreapps.dashboardwidgets.js","webpack:///./omod/src/main/web/dashboardwidgets/bahmniappointments/index.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/index.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/index.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/index.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/index.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/index.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/index.js","webpack:///./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.component.js","webpack:///./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/dashboardwidgetscommons.service.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.component.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/datepicker.component.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/datepicker.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/index.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/locales/bootstrap-datepicker.ht.js","webpack:///./omod/src/main/web/dashboardwidgets/index.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.component.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.component.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.component.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/programs.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/programs.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/programstatus.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/programstatus.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/relationships.component.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/relationships.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.component.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.controller.js","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.html","webpack:///./omod/src/main/web/dashboardwidgets/dashboardwidgets.services.js"],"names":["root","factory","exports","module","define","amd","this","webpackJsonpcoreapps__name_","137","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_angular","_angular2","_angularjsOpenmrsApi","_angularjsOpenmrsApi2","_dashboardwidgets","_dashboardwidgets2","_bahmniappointments","angular","openmrsApi","commons","openmrsTranslate","component","BahmniAppointmentsComponent","selector","name","138","_dataintegrityviolations","DatatIntegrityViolationsComponent","139","_latestobsforconceptlist","LatestObsForConceptListComponent","140","_obsacrossencounters","ObsAcrossEncountersComponent","141","_angularChart","_angularChart2","_obsgraph","chartjs","ObsGraphComponent","config","ChartJsProvider","setOptions","chartColors","spanGaps","elements","line","tension","142","_programs","ProgramsComponent","143","_programstatistics","ProgramStatisticsComponent","144","_datepicker","_datepicker2","_programstatus","datepicker","ProgramStatusComponent","145","_typeahead","_typeahead2","_relationships","typeahead","RelationshipsComponent","146","_visitbyencountertype","VisitByEncounterTypeComponent","159","undefined","_bahmniappointments2","_bahmniappointments3","_bahmniappointments4","template","controller","BahmniAppointmentsController","bindings","160","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","openmrsRest","widgetsCommons","assign","$inject","_this","serverUrl","startDate","setBaseAppPath","getServerUrl","then","result","url","actions","save","method","isArray","patientUuid","create","limit","response","getAppointments","appointments","_this2","forEach","appointmentDetails","appointment","date","startTime","endTime","endDateTime","ServiceType","service","push","161","_moment","_moment2","WidgetsCommons","days","dateToDaysAgo","givenDate","today","Date","setHours","seconds","Math","floor","getTime","interval","time","maxAge","values","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","Symbol","iterator","_iterator","next","done","parseInt","replace","err","return","indexOf","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","filter","nameType","locale","names","n","voided","fsn","conceptNameType","short","shortEn","preferred","localePreferred","resultName","concept","display","datatype","includes","uuid","Boolean","format","moment","user","p","some","162","_dataintegrityviolations2","_dataintegrityviolations3","_dataintegrityviolations4","DataIntegrityViolationsController","163","dataViolations","isUndefined","maxResults","patient","v","resp","index","results","164","DatepickerComponent","_datepicker3","_datepicker4","ngModel","language","endDate","clearBtn","165","$","DatepickerController","$document","$element","$scope","$filter","$timeout","autoclose","getLanguage","container","on","e","stripTime","$apply","updateDates","dateFormat","mappings","MMMM","MMM","MM","M","yyyy","yy","EEEE","regex","substring","mapping","RegExp","match","call","166","167","jQuery","daysShort","daysMin","dates","months","monthsShort","suffix","meridiem","weekStart","168","_latestobsforconceptlist2","_obsacrossencounters2","_obsgraph2","_programs2","_programstatistics2","_programstatus2","_relationships2","_visitbyencountertype2","element","document","ready","bootstrap","dashboardwidget","169","_latestobsforconceptlist3","_latestobsforconceptlist4","scope","170","LatestObsForConceptListController","maxAgeToDays","list","nLatestObs","concepts","map","c","trim","join","obs","displayObs","inputObs","groupMembers","maxAgeInDays","obsDatetime","conceptName","getConceptName","obsGroupLabels","member","prefix","getObsValue","hasDatatypeDateOrSimilar","hasDatatypeCoded","171","ObsAcrossEncountersController","_obsacrossencounters3","172","Array","arr","arr2","from","$q","sessionLocale","conceptsMap","simpleEncs","output","headers","rows","Promise","all","fetchSessionInfo","fetchConcepts","fetchEncounters","formatOutput","console","get","session","error","_this3","CONCEPT_CUSTOM_REP","conceptKeys","legacyEncounterTypes","encounterTypes","encounterQueryParams","encounterType","apply","maxRecords","_toConsumableArray","encounterPromises","fromdate","maxAgeToDate","encounterSets","addToSimpleEncs","encounterSet","_this4","_this5","showEncounterProviderName","showEncounterTypeName","encounterDateToDisplay","providersNameToDisplay","sort","a","b","encounterDatetime","sortedEncs","row","encounter","encounterProviders","provider","translate","showDateWithTime","formatDate","JSDateFormat","_iteratorNormalCompletion2","keys","_didIteratorError2","_iteratorError2","_step2","_iterator2","obsArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","className","_step3","isRetired","_iterator3","retired","isDrug","useConceptNameForDrugValues","encounters","_this6","resultPromises","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","foundObsByUuid","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","foundMembers","_iterator5","foundMembersByUuid","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","m","useConceptShortName","updateWithConceptShortNames","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_encounter","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","updateWithShortName","conceptRes","_this7","catch","conceptUuid","173","_obsgraph3","_obsgraph4","174","_typeof","constructor","ObsGraphController","conceptRep","self","xAxis","labels","data","legend","series","dataset","FunctionManager","bmi","foundValue","_arguments","conceptArray","arguments","type","find","function","calculateBmi","height","weight","heightDataset","weightDataset","xAxisKeys","getXAxisKeys","weightValue","yValue","heightValue","k","tempData","toFixed","execute","orderXAxis","slice","updateChartData","isDefined","j","hideConcepts","splice","_FunctionManager","promises","promisedObs","getAllObs","_i","serverConcept","conceptObject","isEncounterTypeNotAllowed","getEncounterType","observation","daysSinceDate","xValue","obsDate","getConfig","getConceptNamesPromise","getConceptNames","getAllObsPromise","showLegend","position","yAxes","id","scales","ticks","callback","autoSkip","maxTicksLimit","Number","toLocaleString","tempArray","conceptId","parseFunctionConfig","fns","fnsArray","paramsArray","params","_FunctionManager2","175","_programs3","_programs4","176","ProgramsController","dashboardPage","programs","unenrolledPrograms","program","showAddProgram","supportedPrograms","activate","fetchPrivileges","fetchPatientPrograms","bind","determineUnenrolledPrograms","canEnrollInProgram","privileges","isSystemDeveloper","log","getPrograms","getMaxRecords","getPatientPrograms","patientPrograms","patientProgram","activeProgramsUuids","dateCompleted","programUuid","dashboard","input","destinationPage","metaKey","event","ctrlKey","window","location","shiftKey","open","href","177","ProgramStatisticsController","_programstatistics3","_programstatistics4","178","getCurrentlyEnrolledInProgram","getEverEnrolledInProgram","everEnrolled","count","onDate","currentlyEnrolled","179","_programstatus3","_programstatus4","180","$window","ProgramStatusController","deleted","programLocations","programOutcomes","loaded","expandedWorkflows","minEnrollmentDate","maxCompletionDate","canDeleteProgram","sortedStatesByWorkflow","markPatientDeadPage","canMarkPatientDead","requestInProgress","statesByWorkflow","statesByUuid","markPatientDeadOutcome","dateEnrolled","enrollmentLocation","changeToStateByWorkflow","resetWindowStates","ctrl","outcome","initialWorkflowStateByWorkflow","fetchSessionLocation","fetchLocations","fetchOutcomes","fetchPatientProgram","canEditProgram","sessionLocation","defaultLoc","toUTCDate","currentStatus","edit","workflow","cancelAllEditModes","setInputsToStartingValues","enrollment","workflowUuid","expanded","workflows","states","state","getPatientProgramFromPatientProgramList","groupAndSortPatientStates","initExpandedWorkflows","vPatientProgram","convertDateEnrolledAndDateCompletedStringsToDates","locationsPromise","sessionContext","tag","locationTag","outcomesConcept","_this8","answers","_this9","displayActiveProgram","patientProgramComparator","_this10","reloadPage","disableReloadPage","_this11","needToReloadPage","compile","confirmDelete","_this12","voidPatientState","dateWithoutTime","_this13","update","terminal","voidReason","workflowState","patientStateUuid","_this14","remove","createPatientState","stateUuid","currentState","_this15","initial","_this16","state1","state2","patientState","dateCreated","getWorkflowForState","dayAfterStartDate","getNextDay","newEntry","unshift","mostRecentStateChangeDate","updatePatientProgram","add","toDate","isSame","isMostRecentProgram","dateString","utcDate","dateEnrolled1","dateEnrolled2","setTime","getTimezoneOffset","patientProgram1","patientProgram2","dateCompleted1","dateCompleted2","dateCreated2","dateCreated1","181","_relationships3","_relationships4","182","RelationshipsController","allowedTypes","showFindOtherPerson","showSaveButton","otherPerson","relatedPersons","hasEditPrivileges","removeFlag","searchPerson","providerPage","baseAppPath","includeRelationshipTypes","person","getPrivileges","getRelationships","getRelationshipTypes","checkForProviders","rel","isPatient","relationship","personB","isProvider","relationships","personA","toPerson","relationshipType","displayAIsToB","aIsToB","personUuid","displayBIsToA","bIsToA","editPrivilege","privilege","personName","q","searchString","filterSearchedPersons","relationshipsContain","searchedPersons","relTypeA","types","findRelTypeByName","relTypeB","item","Handlebars","$onInit","relUuid","tempRelationships","navigateTo","minSearchLength","getPersons","$item","$model","$label","183","VisitByEncounterTypeController","_visitbyencountertype4","_visitbyencountertype3","184","fromStartDate","getVisits","visits","getCombineEncounterTypes","startDatetime","vis","visit","showEncounterDate","_vis","combineEncounterTypes","250","webpackContext","req","webpackContextResolve","Error","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","resolve","251","252","253","254","255","256","257","258","259","260","261","4","_dashboardwidgetscommons","_dashboardwidgetscommons2","services"],"mappings":"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,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IrC4lIAjQ,GAAe3X,KAAO,WsCr2ItB,MAAAjW,QAAAiW,KAAA/E,ItCw2IA0c,EAAekQ,QAAUhQ,EACzBzuB,EAAOD,QAAUwuB,EACjBA,EAAe7P,GAAK,KAIdggB,IACA,SAAU1+B,EAAQD,GAExBC,EAAOD,QAAU,0eAIX4+B,IACA,SAAU3+B,EAAQD,GAExBC,EAAOD,QAAU,4uBAIX6+B,IACA,SAAU5+B,EAAQD,GAExBC,EAAOD,QAAU,qUAIX8+B,IACA,SAAU7+B,EAAQD,GAExBC,EAAOD,QAAU,muCAIX++B,IACA,SAAU9+B,EAAQD,GAExBC,EAAOD,QAAU,u0DAIXg/B,IACA,SAAU/+B,EAAQD,GAExBC,EAAOD,QAAU,kjBAIXi/B,IACA,SAAUh/B,EAAQD,GAExBC,EAAOD,QAAU,uhFAIXk/B,IACA,SAAUj/B,EAAQD,GAExBC,EAAOD,QAAU,0cAIXm/B,IACA,SAAUl/B,EAAQD,GAExBC,EAAOD,QAAU,isbAIXo/B,IACA,SAAUn/B,EAAQD,GAExBC,EAAOD,QAAU,66HAIXq/B,IACA,SAAUp/B,EAAQD,GAExBC,EAAOD,QAAU,4lBAIXs/B,EACA,SAAUr/B,EAAQD,EAASO,GuC37IjC,YvC48IA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFG,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIC,GAAWR,EAAoB,GAE/BS,EAAYR,EAAuBO,GAEnCw+B,EAA2Bh/B,EAAoB,KAE/Ci/B,EAA4Bh/B,EAAuB++B,GAInDE,EAAWz+B,EAAUL,QAAQV,OAAO,+BAExCw/B,GAASp3B,QAAQ,iBAAkBm3B,EAA0B7+B,SAE7DX,EAAQW,QAAU8+B,EAAS59B,QAIxB","file":"coreapps.dashboardwidgets.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashboardwidgets\"] = factory();\n\telse\n\t\troot[\"coreapps\"] = root[\"coreapps\"] || {}, root[\"coreapps\"][\"dashboardwidgets\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashboardwidgets\"] = factory();\n\telse\n\t\troot[\"coreapps\"] = root[\"coreapps\"] || {}, root[\"coreapps\"][\"dashboardwidgets\"] = factory();\n})(this, function() {\nreturn webpackJsonpcoreapps__name_([0],{\n\n/***/ 137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _bahmniappointments = __webpack_require__(159);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.appointments\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default, _angularjsOpenmrsApi2.default]).component(_bahmniappointments.BahmniAppointmentsComponent.selector, _bahmniappointments.BahmniAppointmentsComponent).name;\n\n/***/ }),\n\n/***/ 138:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dataintegrityviolations = __webpack_require__(162);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.dataintegrityviolations\", [_angularjsOpenmrsApi2.default]).component(_dataintegrityviolations.DatatIntegrityViolationsComponent.selector, _dataintegrityviolations.DatatIntegrityViolationsComponent).name;\n\n/***/ }),\n\n/***/ 139:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _latestobsforconceptlist = __webpack_require__(169);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.latestobsforconceptlist\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_latestobsforconceptlist.LatestObsForConceptListComponent.selector, _latestobsforconceptlist.LatestObsForConceptListComponent).name;\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _obsacrossencounters = __webpack_require__(171);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.obsacrossencounters\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_obsacrossencounters.ObsAcrossEncountersComponent.selector, _obsacrossencounters.ObsAcrossEncountersComponent).name;\n\n/***/ }),\n\n/***/ 141:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _angularChart = __webpack_require__(147);\n\nvar _angularChart2 = _interopRequireDefault(_angularChart);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _obsgraph = __webpack_require__(173);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.obsgraph\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default, _dashboardwidgets2.default, _angularChart2.default]).component(_obsgraph.ObsGraphComponent.selector, _obsgraph.ObsGraphComponent).config(['ChartJsProvider', function (ChartJsProvider) {\n\tChartJsProvider.setOptions({\n\t\tchartColors: ['#00463f', '#bf4f44', \"#567fad\"],\n\t\tspanGaps: true,\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0\n\t\t\t}\n\t\t}\n\t});\n}]).name;\n\n/***/ }),\n\n/***/ 142:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _programs = __webpack_require__(175);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programs\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_programs.ProgramsComponent.selector, _programs.ProgramsComponent).name;\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _programstatistics = __webpack_require__(177);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programstatistics\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default]).component(_programstatistics.ProgramStatisticsComponent.selector, _programstatistics.ProgramStatisticsComponent).name;\n\n/***/ }),\n\n/***/ 144:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _datepicker = __webpack_require__(166);\n\nvar _datepicker2 = _interopRequireDefault(_datepicker);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _programstatus = __webpack_require__(179);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programstatus\", [_angularjsOpenmrsApi2.default, _datepicker2.default, _angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_programstatus.ProgramStatusComponent.selector, _programstatus.ProgramStatusComponent).name;\n\n/***/ }),\n\n/***/ 145:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _typeahead = __webpack_require__(154);\n\nvar _typeahead2 = _interopRequireDefault(_typeahead);\n\nvar _relationships = __webpack_require__(181);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.relationships\", [_angularjsOpenmrsApi2.default, _typeahead2.default, _angularjsOpenmrsApi2.default]).component(_relationships.RelationshipsComponent.selector, _relationships.RelationshipsComponent).name;\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _visitbyencountertype = __webpack_require__(183);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.visitbyencountertype\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default, _angularjsOpenmrsApi2.default]).component(_visitbyencountertype.VisitByEncounterTypeComponent.selector, _visitbyencountertype.VisitByEncounterTypeComponent).name;\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BahmniAppointmentsComponent = undefined;\n\nvar _bahmniappointments = __webpack_require__(160);\n\nvar _bahmniappointments2 = _interopRequireDefault(_bahmniappointments);\n\nvar _bahmniappointments3 = __webpack_require__(251);\n\nvar _bahmniappointments4 = _interopRequireDefault(_bahmniappointments3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BahmniAppointmentsComponent = exports.BahmniAppointmentsComponent = {\n    template: _bahmniappointments4.default,\n    controller: _bahmniappointments2.default,\n    selector: 'bahmniappointments',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 160:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BahmniAppointmentsController = function () {\n    BahmniAppointmentsController.$inject = [\"openmrsRest\", \"widgetsCommons\", \"openmrsTranslate\"];\n    function BahmniAppointmentsController(openmrsRest, widgetsCommons, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, BahmniAppointmentsController);\n\n        Object.assign(this, { openmrsRest: openmrsRest, widgetsCommons: widgetsCommons, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(BahmniAppointmentsController, [{\n        key: \"$onInit\",\n        value: function $onInit() {\n            var _this = this;\n\n            //innitialise\n            this.appointments = [];\n            this.serverUrl = \"\";\n            this.startDate = new Date();\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.openmrsRest.getServerUrl().then(function (result) {\n                _this.serverUrl = result;\n            });\n            //overiding default 'POST method' configurations\n            var methodConfig = {\n                url: '/appointments/search',\n                actions: { save: { method: 'POST', isArray: true } }\n            };\n\n            this.openmrsRest.create(methodConfig, {\n                patientUuid: this.config.patientUuid,\n                startDate: this.startDate,\n                limit: this.config.maxRecords\n            }).then(function (response) {\n                _this.getAppointments(response);\n            });\n        }\n    }, {\n        key: \"getAppointments\",\n        value: function getAppointments(appointments) {\n            var _this2 = this;\n\n            if (appointments.length > 0) {\n                angular.forEach(appointments, function (appointment) {\n                    var appointmentDetails = {\n                        date: appointment.startDateTime,\n                        startTime: appointment.startDateTime,\n                        endTime: appointment.endDateTime,\n                        ServiceType: appointment.service.name\n                    };\n                    _this2.appointments.push(appointmentDetails);\n                });\n            }\n        }\n    }]);\n\n    return BahmniAppointmentsController;\n}();\n\nexports.default = BahmniAppointmentsController;\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _moment = __webpack_require__(0);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WidgetsCommons = function () {\n    function WidgetsCommons() {\n        _classCallCheck(this, WidgetsCommons);\n    }\n\n    _createClass(WidgetsCommons, [{\n        key: \"dateToDaysAgoMessage\",\n\n\n        // Method used to define days since given date and return it as message\n        value: function dateToDaysAgoMessage(date) {\n            var days = this.dateToDaysAgo(date);\n\n            if (days == 0) {\n                return \"today\";\n            } else if (days == 1) {\n                return days + \" day ago\";\n            } else {\n                return days + \" days ago\";\n            }\n        }\n    }, {\n        key: \"daysSinceDate\",\n\n\n        //Number of days since the given date\n        value: function daysSinceDate(date) {\n            var days = 0;\n            if (date !== null) {\n                var givenDate = new Date(date).setHours(0, 0, 0, 0);\n                var today = new Date().setHours(0, 0, 0, 0);\n                var seconds = Math.floor((today - givenDate) / 1000);\n                days = Math.floor(seconds / 86400);\n            }\n\n            return days;\n        }\n    }, {\n        key: \"dateToDaysAgo\",\n\n\n        // Method used to define days since given date\n        value: function dateToDaysAgo(date) {\n            var time = new Date(date).getTime();\n            var seconds = Math.floor((new Date().getTime() - time) / 1000);\n            var interval = Math.floor(seconds / 86400);\n            var days = 0;\n            if (interval > 0) {\n                days = interval;\n            }\n            return days;\n        }\n    }, {\n        key: \"maxAgeToDays\",\n\n\n        // Method used to parse maxAge to day count\n        value: function maxAgeToDays(maxAge) {\n            if (typeof maxAge === 'undefined') {\n                return undefined;\n            } else {\n                var days = 0;\n                var values = maxAge.split(\" \");\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var value = _step.value;\n\n                        if (value.includes(\"d\")) {\n                            days += parseInt(value.replace(\"d\", \"\"));\n                        }\n                        if (value.includes(\"w\")) {\n                            days += parseInt(value.replace(\"w\", \"\")) * 7;\n                        }\n                        if (value.includes(\"m\")) {\n                            days += parseInt(value.replace(\"m\", \"\")) * 30;\n                        }\n                        if (value.includes(\"y\")) {\n                            days += parseInt(value.replace(\"y\", \"\")) * 365;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return days;\n            }\n        }\n    }, {\n        key: \"maxAgeToDate\",\n        value: function maxAgeToDate(maxAge) {\n            if (typeof maxAge === 'undefined') return null;\n\n            var today = new Date();\n            if (maxAge.indexOf('d') !== -1) {\n                maxAge = maxAge.replace('d', '');\n                today.setDate(today.getDate() - parseInt(maxAge));\n            } else if (maxAge.indexOf('w') !== -1) {\n                maxAge = maxAge.replace('w', '');\n                today.setDate(today.getDate() - parseInt(maxAge) * 7);\n            } else if (maxAge.indexOf('m') !== -1) {\n                maxAge = maxAge.replace('m', '');\n                today.setMonth(today.getMonth() - parseInt(maxAge));\n            } else if (maxAge.indexOf('y') !== -1) {\n                maxAge = maxAge.replace('y', '');\n                today.setFullYear(today.getFullYear() - parseInt(maxAge));\n            } else {\n                return null;\n            }\n            return today;\n        }\n    }, {\n        key: \"getConceptName\",\n\n\n        /**\n         * Returns the most appropriate name given a concept and a name type preference\n         *\n         * @param {object} concept Must have rep including `display,names:(voided,locale,conceptNameType,localePreferred,name)`\n         * @param {string} nameType One of \"FSN\", \"shortName\", \"preferred\"\n         * @param {string} locale The preferred locale\n         */\n        value: function getConceptName(concept, nameType, locale) {\n            var names = concept.names.filter(function (n) {\n                return !n.voided && n.locale === locale;\n            });\n            var fsn = names.filter(function (n) {\n                return n.conceptNameType === \"FULLY_SPECIFIED\";\n            })[0];\n            var short = names.filter(function (n) {\n                return n.conceptNameType === \"SHORT\";\n            })[0];\n            var shortEn = concept.names.filter(function (n) {\n                return !n.voided && n.locale === 'en' && n.conceptNameType === \"SHORT\";\n            })[0];\n            var preferred = names.filter(function (n) {\n                return n.localePreferred;\n            })[0];\n            var resultName = void 0;\n            if (nameType === \"FSN\") {\n                resultName = fsn || preferred;\n            } else if (nameType === \"shortName\") {\n                resultName = short || shortEn;\n            } else if (nameType === \"preferred\") {\n                resultName = preferred;\n            }\n            return resultName ? resultName.name : concept.display;\n        }\n    }, {\n        key: \"hasDatatypeDateOrSimilar\",\n        value: function hasDatatypeDateOrSimilar(concept) {\n            return concept.datatype && ['8d4a505e-c2cc-11de-8d13-0010c6dffd0f', '8d4a591e-c2cc-11de-8d13-0010c6dffd0f', '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].includes(concept.datatype.uuid);\n        }\n    }, {\n        key: \"hasDatatypeCoded\",\n        value: function hasDatatypeCoded(concept) {\n            return concept.datatype && concept.datatype.uuid === \"8d4a48b6-c2cc-11de-8d13-0010c6dffd0f\";\n        }\n\n        // use as `isDrug(obs.value)`\n\n    }, {\n        key: \"isDrug\",\n        value: function isDrug(obj) {\n            return Boolean(obj.concept);\n        }\n\n        /**\n         * Returns date translated according to preferred locale when Date Format displays the month as an abbreviation (MMM).\n         * Ex: Date: 02-Jan-2021 Format: DD-MMM-YYYY Locale: fr --> Return: 02-janv.-2021\n         *\n         * @param {object} date Input Date\n         * @param {string} format Date Format\n         * @param {string} locale The preferred locale\n         */\n\n    }, {\n        key: \"formatDate\",\n        value: function formatDate(date, format, locale) {\n            try {\n                _moment2.default.locale(locale);\n                return (0, _moment2.default)(date).format(format);\n            } catch (err) {\n                return (0, _moment2.default)(date).format(\"DD.MMM.YYYY\");\n            }\n        }\n\n        /**\n         * Returns date and time translated according to preferred locale.\n         * Ex: Date: 02-Jan-2021 15:10 Format: DD.MMM.YYYY HH:mm Locale: fr --> Return: 02-janv.-2021 15:10\n         *\n         * @param {object} date Input Datetime\n         * @param {string} format Date Format\n         * @param {string} locale The preferred locale\n         */\n\n    }, {\n        key: \"formatDateTime\",\n        value: function formatDateTime(date, format, locale) {\n            try {\n                _moment2.default.locale(locale);\n                return (0, _moment2.default)(date).format(format);\n            } catch (err) {\n                return (0, _moment2.default)(date).format(\"DD.MMM.YYYY HH:mm\");\n            }\n        }\n\n        /**\n         * Return true if the user has the System Developer role\n         *\n         * @param user\n         * @returns {*}\n         */\n\n    }, {\n        key: \"isSystemDeveloper\",\n        value: function isSystemDeveloper(user) {\n            return user.roles.some(function (p) {\n                return p.name === 'System Developer';\n            });\n        }\n    }]);\n\n    return WidgetsCommons;\n}();\n\nexports.default = WidgetsCommons;\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DatatIntegrityViolationsComponent = undefined;\n\nvar _dataintegrityviolations = __webpack_require__(163);\n\nvar _dataintegrityviolations2 = _interopRequireDefault(_dataintegrityviolations);\n\nvar _dataintegrityviolations3 = __webpack_require__(252);\n\nvar _dataintegrityviolations4 = _interopRequireDefault(_dataintegrityviolations3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatatIntegrityViolationsComponent = exports.DatatIntegrityViolationsComponent = {\n    template: _dataintegrityviolations4.default,\n    controller: _dataintegrityviolations2.default,\n    selector: 'dataintegrityviolations',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DataIntegrityViolationsController = function () {\n    DataIntegrityViolationsController.$inject = [\"openmrsRest\"];\n    function DataIntegrityViolationsController(openmrsRest) {\n        'ngInject';\n\n        _classCallCheck(this, DataIntegrityViolationsController);\n\n        Object.assign(this, { openmrsRest: openmrsRest });\n    }\n\n    _createClass(DataIntegrityViolationsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.dataViolations = [];\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.openmrsRest.getServerUrl().then(function (result) {\n                _this.serverUrl = result;\n            });\n\n            // Set default maxResults if not defined\n            if (angular.isUndefined(this.config.maxResults)) {\n                this.config.maxResults = 6;\n            }\n\n            this.openmrsRest.list('dataintegrity/integrityresults', { patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults }).then(function (resp) {\n                for (var index = 0; index < resp.results.length; index++) {\n                    _this.dataViolations.push(resp.results[index]);\n                }\n            });\n        }\n    }]);\n\n    return DataIntegrityViolationsController;\n}();\n\nexports.default = DataIntegrityViolationsController;\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DatepickerComponent = undefined;\n\nvar _datepicker = __webpack_require__(165);\n\nvar _datepicker2 = _interopRequireDefault(_datepicker);\n\nvar _datepicker3 = __webpack_require__(253);\n\nvar _datepicker4 = _interopRequireDefault(_datepicker3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatepickerComponent = exports.DatepickerComponent = {\n    template: _datepicker4.default,\n    controller: _datepicker2.default,\n    selector: 'openmrsDatepicker',\n    bindings: {\n        ngModel: '=',\n        format: '@',\n        language: '@',\n        startDate: '<',\n        endDate: '<',\n        clearBtn: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DatepickerController = function () {\n    DatepickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"$filter\", \"$timeout\", \"openmrsTranslate\"];\n    function DatepickerController($document, $element, $scope, $filter, $timeout, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, DatepickerController);\n\n        Object.assign(this, { $document: $document, $element: $element, $scope: $scope, $filter: $filter, $timeout: $timeout, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(DatepickerController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.$document.ready(function () {\n                _this.openmrsTranslate.getLanguage().then(function (language) {\n                    $(_this.$element).datepicker({\n                        format: _this.convertDateFormat(_this.format),\n                        autoclose: true,\n                        container: \"html\",\n                        language: language,\n                        clearBtn: _this.clearBtn\n                    }).on(\"changeDate\", function (e) {\n                        if (e.date != null) {\n                            if (_this.ngModel == null || _this.stripTime(_this.ngModel).getTime() !== _this.stripTime(e.date).getTime()) {\n                                //apply changes if not triggered by the watch\n                                _this.$scope.$apply(function () {\n                                    _this.ngModel = _this.stripTime(e.date);\n                                });\n                            }\n                        }\n                        // clear out if necessary if set to null and model isn't null\n                        else if (_this.ngModel != null) {\n                                _this.$timeout(function () {\n                                    _this.ngModel = null;\n                                });\n                            }\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.ngModel;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.startDate;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.endDate;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'updateDates',\n        value: function updateDates() {\n            //I need to update all at once due to a bug in the datepicker, which resets the selected date.\n            $(this.$element).datepicker(\"setStartDate\", this.stripTime(this.startDate));\n            $(this.$element).datepicker(\"setEndDate\", this.stripTime(this.endDate));\n            $(this.$element).datepicker(\"setDate\", this.stripTime(this.ngModel));\n        }\n    }, {\n        key: 'stripTime',\n        value: function stripTime(date) {\n            if (date == null) {\n                return null;\n            } else {\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n            }\n        }\n    }, {\n        key: 'convertDateFormat',\n        value: function convertDateFormat(dateFormat) {\n            var mappings = {\n                \"MMMM\": \"MM\",\n                \"MMM\": \"M\",\n                \"MM\": \"mm\",\n                \"M\": \"m\",\n                \"yyyy\": \"yy\",\n                \"yy\": \"y\",\n                'EEEE': 'DD',\n                'EEE': 'D'\n            };\n\n            var regex = \"\";\n            for (var mapping in mappings) {\n                regex = regex + mapping + '|';\n            }\n            regex = regex.substring(0, regex.length - 1);\n\n            dateFormat = dateFormat.replace(new RegExp(regex, \"g\"), function (match) {\n                if (mappings[match]) {\n                    return mappings[match];\n                } else {\n                    return match;\n                }\n            });\n            return dateFormat;\n        }\n    }]);\n\n    return DatepickerController;\n}();\n\nexports.default = DatepickerController;\n;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\n__webpack_require__(185);\n\n__webpack_require__(264);\n\n__webpack_require__(186);\n\n__webpack_require__(187);\n\n__webpack_require__(188);\n\n__webpack_require__(189);\n\n__webpack_require__(190);\n\n__webpack_require__(191);\n\n__webpack_require__(192);\n\n__webpack_require__(193);\n\n__webpack_require__(194);\n\n__webpack_require__(195);\n\n__webpack_require__(196);\n\n__webpack_require__(197);\n\n__webpack_require__(198);\n\n__webpack_require__(199);\n\n__webpack_require__(200);\n\n__webpack_require__(201);\n\n__webpack_require__(202);\n\n__webpack_require__(203);\n\n__webpack_require__(204);\n\n__webpack_require__(205);\n\n__webpack_require__(206);\n\n__webpack_require__(207);\n\n__webpack_require__(208);\n\n__webpack_require__(209);\n\n__webpack_require__(210);\n\n__webpack_require__(211);\n\n__webpack_require__(212);\n\n__webpack_require__(213);\n\n__webpack_require__(214);\n\n__webpack_require__(215);\n\n__webpack_require__(216);\n\n__webpack_require__(217);\n\n__webpack_require__(218);\n\n__webpack_require__(219);\n\n__webpack_require__(220);\n\n__webpack_require__(221);\n\n__webpack_require__(222);\n\n__webpack_require__(223);\n\n__webpack_require__(224);\n\n__webpack_require__(225);\n\n__webpack_require__(226);\n\n__webpack_require__(227);\n\n__webpack_require__(228);\n\n__webpack_require__(229);\n\n__webpack_require__(230);\n\n__webpack_require__(231);\n\n__webpack_require__(232);\n\n__webpack_require__(233);\n\n__webpack_require__(234);\n\n__webpack_require__(235);\n\n__webpack_require__(236);\n\n__webpack_require__(237);\n\n__webpack_require__(238);\n\n__webpack_require__(239);\n\n__webpack_require__(240);\n\n__webpack_require__(241);\n\n__webpack_require__(242);\n\n__webpack_require__(243);\n\n__webpack_require__(244);\n\n__webpack_require__(245);\n\n__webpack_require__(167);\n\nvar _datepicker = __webpack_require__(164);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.datepicker\", [_angularjsOpenmrsApi2.default]).component(_datepicker.DatepickerComponent.selector, _datepicker.DatepickerComponent).name;\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\n/**\n * Creole translation for bootstrap-datetimepicker>\n * (Not provided by standard npm install of bootstrap-datepicker)\n */\n(function ($) {\n    $.fn.datepicker.dates['ht'] = {\n        days: [\"dimanch\", \"lendi\", \"madi\", \"mèkredi\", \"jedi\", \"vandredi\", \"samdi\"],\n        daysShort: [\"dim\", \"len\", \"mad\", \"mek\", \"jed\", \"van\", \"sam\"],\n        daysMin: [\"d\", \"l\", \"ma\", \"me\", \"j\", \"v\", \"s\", \"d\"],\n        months: [\"janvye\", \"fevriye\", \"mas\", \"avril\", \"me\", \"jen\", \"jiyè\", \"out\", \"septanm\", \"oktòb\", \"novanm\", \"desanm\"],\n        monthsShort: [\"jan\", \"fev\", \"mas\", \"avr\", \"me\", \"jen\", \"jiy\", \"out\", \"sep\", \"okt\", \"nov\", \"des\"],\n        today: \"Jodi a\",\n        suffix: [],\n        meridiem: [\"am\", \"pm\"],\n        weekStart: 1,\n        format: \"dd/mm/yyyy\"\n    };\n})(jQuery);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _dataintegrityviolations = __webpack_require__(138);\n\nvar _dataintegrityviolations2 = _interopRequireDefault(_dataintegrityviolations);\n\nvar _latestobsforconceptlist = __webpack_require__(139);\n\nvar _latestobsforconceptlist2 = _interopRequireDefault(_latestobsforconceptlist);\n\nvar _obsacrossencounters = __webpack_require__(140);\n\nvar _obsacrossencounters2 = _interopRequireDefault(_obsacrossencounters);\n\nvar _obsgraph = __webpack_require__(141);\n\nvar _obsgraph2 = _interopRequireDefault(_obsgraph);\n\nvar _programs = __webpack_require__(142);\n\nvar _programs2 = _interopRequireDefault(_programs);\n\nvar _programstatistics = __webpack_require__(143);\n\nvar _programstatistics2 = _interopRequireDefault(_programstatistics);\n\nvar _programstatus = __webpack_require__(144);\n\nvar _programstatus2 = _interopRequireDefault(_programstatus);\n\nvar _relationships = __webpack_require__(145);\n\nvar _relationships2 = _interopRequireDefault(_relationships);\n\nvar _visitbyencountertype = __webpack_require__(146);\n\nvar _visitbyencountertype2 = _interopRequireDefault(_visitbyencountertype);\n\nvar _bahmniappointments = __webpack_require__(137);\n\nvar _bahmniappointments2 = _interopRequireDefault(_bahmniappointments);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets\", [_dataintegrityviolations2.default, _latestobsforconceptlist2.default, _obsacrossencounters2.default, _obsgraph2.default, _programs2.default, _programstatistics2.default, _programstatus2.default, _relationships2.default, _visitbyencountertype2.default, _bahmniappointments2.default]).name;\n\n\n_angular2.default.element(document).ready(function () {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = document.getElementsByClassName('openmrs-contrib-dashboardwidgets')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var dashboardwidget = _step.value;\n\n            _angular2.default.bootstrap(dashboardwidget, ['openmrs-contrib-dashboardwidgets']);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 169:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LatestObsForConceptListComponent = undefined;\n\nvar _latestobsforconceptlist = __webpack_require__(170);\n\nvar _latestobsforconceptlist2 = _interopRequireDefault(_latestobsforconceptlist);\n\nvar _latestobsforconceptlist3 = __webpack_require__(254);\n\nvar _latestobsforconceptlist4 = _interopRequireDefault(_latestobsforconceptlist3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LatestObsForConceptListComponent = exports.LatestObsForConceptListComponent = {\n    template: _latestobsforconceptlist4.default,\n    controller: _latestobsforconceptlist2.default,\n    selector: 'latestobsforconceptlist',\n    scope: {},\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 170:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LatestObsForConceptListController = function () {\n    LatestObsForConceptListController.$inject = [\"$filter\", \"openmrsRest\", \"widgetsCommons\", \"openmrsTranslate\"];\n    function LatestObsForConceptListController($filter, openmrsRest, widgetsCommons, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, LatestObsForConceptListController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(LatestObsForConceptListController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n            // Fetch last obs or obsGroup for the list of concepts\n            return this.openmrsRest.list('latestobs', {\n                patient: this.config.patientUuid,\n                v: 'custom:(' + 'obsDatetime,' + 'concept:(uuid,display,datatype:(uuid),names:(name,locale,localePreferred,voided,conceptNameType)),' + 'value:(uuid,display,names:(name,locale,localePreferred,voided,conceptNameType)),' + 'groupMembers:(value,concept:(display,names:(name,locale,localePreferred,voided,conceptNameType))))',\n                concept: this.config.concepts.split(',').map(function (c) {\n                    return c.trim();\n                }).join(','),\n                nLatestObs: this.config.nLatestObs || 1\n            }).then(function (resp) {\n                // Process the results from the list of concepts as not all of them may have data\n                _this.obs = resp.results.filter(\n                // Don't add obs older than maxAge\n                function (obs) {\n                    return angular.isUndefined(_this.maxAgeInDays) || _this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= _this.maxAgeInDays;\n                }).map(function (inputObs) {\n                    var displayObs = { obsDaysAgo: _this.widgetsCommons.dateToDaysAgoMessage(inputObs.obsDatetime) };\n                    displayObs.conceptName = _this.widgetsCommons.getConceptName(inputObs.concept, _this.config.conceptNameType, _this.config.locale);\n                    if (inputObs.groupMembers) {\n                        // If obs is obs group\n                        displayObs.groupMembers = inputObs.groupMembers.map(function (member) {\n                            var prefix = [\"FSN\", \"shortName\", \"preferred\"].includes(_this.config.obsGroupLabels) ? \"(\" + _this.widgetsCommons.getConceptName(member.concept, _this.config.obsGroupLabels, _this.config.locale) + \") \" : \"\";\n                            var value = _this.getObsValue(member);\n                            return { \"prefix\": prefix, \"value\": value };\n                        });\n                    } else {\n                        displayObs.value = _this.getObsValue(inputObs);\n                    }\n                    return displayObs;\n                });\n            });\n        }\n    }, {\n        key: 'getObsValue',\n        value: function getObsValue(obs) {\n            if (this.widgetsCommons.hasDatatypeDateOrSimilar(obs.concept)) {\n                return this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n            } else if (this.widgetsCommons.hasDatatypeCoded(obs.concept)) {\n                return this.widgetsCommons.getConceptName(obs.value, this.config.conceptNameType, this.config.locale);\n            } else {\n                return obs.value.display || obs.value;\n            }\n        }\n    }]);\n\n    return LatestObsForConceptListController;\n}();\n\nexports.default = LatestObsForConceptListController;\n\n/***/ }),\n\n/***/ 171:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObsAcrossEncountersComponent = undefined;\n\nvar _obsacrossencounters = __webpack_require__(172);\n\nvar _obsacrossencounters2 = _interopRequireDefault(_obsacrossencounters);\n\nvar _obsacrossencounters3 = __webpack_require__(255);\n\nvar _obsacrossencounters4 = _interopRequireDefault(_obsacrossencounters3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ObsAcrossEncountersComponent = exports.ObsAcrossEncountersComponent = {\n    template: _obsacrossencounters4.default,\n    controller: _obsacrossencounters2.default,\n    selector: 'obsacrossencounters',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 172:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObsAcrossEncountersController = function () {\n  ObsAcrossEncountersController.$inject = [\"$q\", \"$filter\", \"openmrsRest\", \"openmrsTranslate\", \"widgetsCommons\"];\n  function ObsAcrossEncountersController($q, $filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n    'ngInject';\n\n    _classCallCheck(this, ObsAcrossEncountersController);\n\n    Object.assign(this, { $q: $q, $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate, widgetsCommons: widgetsCommons });\n  }\n\n  _createClass(ObsAcrossEncountersController, [{\n    key: '$onInit',\n    value: function $onInit() {\n      var _this = this;\n\n      this.sessionLocale = null;\n      this.CONCEPT_CUSTOM_REP = 'custom:(uuid,display,names:(voided,locale,conceptNameType,localePreferred,name)';\n      this.conceptsMap = {}; // a map of conceptUUID --> concept(REST response)\n      this.simpleEncs = [];\n      this.headers = [];\n      this.openmrsRest.setBaseAppPath(\"/coreapps\");\n      this.isArray = angular.isArray;\n\n      this.output = {\n        headers: [],\n        rows: [],\n        maxAgeInDays: this.widgetsCommons.maxAgeToDays(this.config.maxAge)\n      };\n\n      return Promise.all([this.fetchSessionInfo(), this.fetchConcepts(), this.fetchEncounters()]).then(function () {\n        return _this.formatOutput();\n      });\n    }\n  }, {\n    key: 'fetchSessionInfo',\n    value: function fetchSessionInfo() {\n      var _this2 = this;\n\n      this.openmrsRest.get(\"session?\", {\n        v: \"ref\"\n      }).then(function (session) {\n        _this2.sessionLocale = session.locale;\n      }, function (error) {\n        console.error('failed to retrieve session info, error: ' + error);\n      });\n    }\n  }, {\n    key: 'fetchConcepts',\n    value: function fetchConcepts() {\n      var _this3 = this;\n\n      var conceptKeys = this.config.concepts.split(\",\").map(function (c) {\n        return c.trim();\n      });\n      return Promise.all(conceptKeys.map(function (key) {\n        return _this3.openmrsRest.get(\"concept/\" + key, {\n          v: _this3.CONCEPT_CUSTOM_REP\n        }).then(function (concept) {\n          // update the concept map with the REST representation of the concept\n          concept.display = _this3.widgetsCommons.getConceptName(concept, \"shortName\", _this3.sessionLocale);\n          _this3.conceptsMap[concept.uuid] = concept;\n        });\n      }));\n    }\n  }, {\n    key: 'fetchEncounters',\n    value: function fetchEncounters() {\n      var _this4 = this;\n\n      var encounterTypes = this.config.encounterTypes ? this.config.encounterTypes.split(',').map(function (c) {\n        return c.trim();\n      }) : [];\n      var legacyEncounterTypes = this.config.encounterType ? this.config.encounterType.split(',').map(function (c) {\n        return c.trim();\n      }) : [];\n      encounterTypes.push.apply(encounterTypes, _toConsumableArray(legacyEncounterTypes));\n\n      var encounterQueryParams = {\n        patient: this.config.patientUuid,\n        v: 'custom:(uuid,encounterDatetime,encounterProviders:(uuid,provider:(uuid,name)),encounterType:(name,description),obs:(id,uuid,value,concept:(id,uuid,name:(display),datatype:(uuid)),groupMembers:(id,uuid,display,value,concept:(id,uuid,name:(display),datatype:(uuid))))',\n        limit: this.config.maxRecords || 4,\n        fromdate: this.widgetsCommons.maxAgeToDate(this.config.maxAge)\n      };\n      var encounterPromises = encounterTypes.length ? encounterTypes.map(function (e) {\n        return _this4.openmrsRest.get(\"encounter\", Object.assign({ encounterType: e }, encounterQueryParams)).then(function (response) {\n          return response.results;\n        });\n      }) : [this.openmrsRest.get(\"encounter\", Object.assign({ encounterType: '' }, encounterQueryParams) // `encounterType: ''` is required to prevent a 400 error\n      ).then(function (response) {\n        return response.results;\n      })];\n\n      return Promise.all(encounterPromises).then(function (encounterSets) {\n        return Promise.all(encounterSets.map(function (encounterSet) {\n          return _this4.addToSimpleEncs(encounterSet);\n        }));\n      });\n    }\n  }, {\n    key: 'formatOutput',\n    value: function formatOutput() {\n      var _this5 = this;\n\n      this.output.headers = this.config.headers ? this.config.headers.split(\",\") : [];\n      if (this.output.headers.length === 0) {\n        if (this.config.showEncounterTypeName) {\n          this.output.headers.push('coreapps.patientDashBoard.encounter');\n        }\n        if (this.config.showEncounterProviderName) {\n          this.output.headers.push('coreapps.patientDashBoard.provider');\n        }\n        this.output.headers.push('coreapps.date');\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = Object.values(this.conceptsMap)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var concept = _step.value;\n\n            this.output.headers.push(concept.display);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this.output.rows = [];\n      var encounterDateToDisplay = void 0;\n      var providersNameToDisplay = void 0;\n      var sortedEncs = this.simpleEncs.sort(function (a, b) {\n        return a.encounterDatetime - b.encounterDatetime;\n      });\n\n      var _loop = function _loop(i) {\n        encounterDateToDisplay = \"\";\n        providersNameToDisplay = \"\";\n        var encounter = sortedEncs[i];\n        var row = [];\n        _this5.output.rows.push(row);\n        if (_this5.config.showEncounterTypeName) {\n          row.push({ value: encounter.encounterType, translate: true });\n        }\n\n        if (_this5.config.showEncounterProviderName) {\n          encounter.encounterProviders.map(function (element, index) {\n            providersNameToDisplay += element.provider.name;\n            if (index != encounter.encounterProviders.length - 1) {\n              providersNameToDisplay += \", \";\n            }\n          });\n          row.push({ value: providersNameToDisplay, translate: false });\n        }\n        if (_this5.config.showDateWithTime) {\n          encounterDateToDisplay = _this5.widgetsCommons.formatDateTime(encounter.encounterDatetime, _this5.config.JSDateTimeFormat, _this5.config.language);\n        } else {\n          encounterDateToDisplay = _this5.widgetsCommons.formatDate(encounter.encounterDatetime, _this5.config.JSDateFormat, _this5.config.language);\n        }\n        row.push({\n          value: encounterDateToDisplay\n        });\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = Object.keys(_this5.conceptsMap)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var uuid = _step2.value;\n\n            var obsArray = [];\n            if (encounter.obs[uuid]) {\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = encounter.obs[uuid][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var obs = _step3.value;\n\n                  obsArray.push({\n                    value: (obs ? _this5.getObsValue(obs) : '') || '',\n                    className: _this5.isRetired(obs) ? 'retiredConcept' : ''\n                  });\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            } else {\n              obsArray.push({\n                value: ''\n              });\n            }\n            row.push(obsArray);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      };\n\n      for (var i = 0; i < sortedEncs.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: 'isRetired',\n    value: function isRetired(obs) {\n      return Boolean(obs && obs.value && obs.value.retired);\n    }\n\n    // `obs` must *not* be an obsGroup\n\n  }, {\n    key: 'getObsValue',\n    value: function getObsValue(obs) {\n      if (this.widgetsCommons.hasDatatypeDateOrSimilar(obs.concept)) {\n        return this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n      } else if (this.widgetsCommons.isDrug(obs.value)) {\n        return this.config.useConceptNameForDrugValues ? obs.value.concept.display : obs.value.display;\n      } else {\n        return obs.value.display || obs.value;\n      }\n    }\n  }, {\n    key: 'addToSimpleEncs',\n    value: function addToSimpleEncs(encounters) {\n      var _this6 = this;\n\n      var resultPromises = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        var _loop2 = function _loop2() {\n          var encounter = _step4.value;\n\n          var conceptKeys = Object.keys(_this6.conceptsMap);\n          // all normal concepts will go in one row\n          var foundObsByUuid = {};\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = encounter.obs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var obs = _step5.value;\n\n              // if it's a group, add a row for each member matching one of the concepts\n              if (obs.groupMembers) {\n                var foundMembers = obs.groupMembers.filter(function (member) {\n                  return conceptKeys.includes(member.concept.uuid);\n                });\n                if (foundMembers.length) {\n                  var foundMembersByUuid = {};\n                  var _iteratorNormalCompletion6 = true;\n                  var _didIteratorError6 = false;\n                  var _iteratorError6 = undefined;\n\n                  try {\n                    for (var _iterator6 = foundMembers[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                      var m = _step6.value;\n\n                      if (!foundMembersByUuid[m.concept.uuid]) {\n                        foundMembersByUuid[m.concept.uuid] = [];\n                      }\n                      foundMembersByUuid[m.concept.uuid].push(m);\n                    }\n                  } catch (err) {\n                    _didIteratorError6 = true;\n                    _iteratorError6 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                      }\n                    } finally {\n                      if (_didIteratorError6) {\n                        throw _iteratorError6;\n                      }\n                    }\n                  }\n\n                  _this6.simpleEncs.push({\n                    encounterType: encounter.encounterType.name,\n                    encounterDatetime: encounter.encounterDatetime,\n                    encounterProviders: encounter.encounterProviders,\n                    obs: foundMembersByUuid\n                  });\n                }\n              } else // otherwise, add the obs value (if it matches one of our concepts)\n                if (conceptKeys.includes(obs.concept.uuid)) {\n                  if (!foundObsByUuid[obs.concept.uuid]) {\n                    foundObsByUuid[obs.concept.uuid] = [];\n                  }\n                  foundObsByUuid[obs.concept.uuid].push(obs);\n                }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          if (Object.keys(foundObsByUuid).length > 0) {\n            _this6.simpleEncs.push({\n              encounterType: encounter.encounterType.name,\n              encounterDatetime: encounter.encounterDatetime,\n              encounterProviders: encounter.encounterProviders,\n              obs: foundObsByUuid\n            });\n          }\n          // if the widget was configured to display the obs concept SHORT name instead of the default obs.value.display value\n          // By default, the widget displays the obs.value.display property\n          if (_this6.config.useConceptShortName) {\n            resultPromises.push(_this6.updateWithConceptShortNames(_this6.simpleEncs));\n          }\n        };\n\n        for (var _iterator4 = encounters[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          _loop2();\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return Promise.all(resultPromises);\n    }\n\n    /**\n     * Sets all obs coded concept values and drug value concepts to use the short name\n     * @param encounters\n     */\n\n  }, {\n    key: 'updateWithConceptShortNames',\n    value: function updateWithConceptShortNames(encounters) {\n      var resultPromises = [];\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = encounters[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _encounter = _step7.value;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = Object.values(_encounter.obs)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var obsArray = _step8.value;\n              var _iteratorNormalCompletion9 = true;\n              var _didIteratorError9 = false;\n              var _iteratorError9 = undefined;\n\n              try {\n                for (var _iterator9 = obsArray[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  var obs = _step9.value;\n\n                  if (this.widgetsCommons.isDrug(obs.value)) {\n                    resultPromises.push(this.updateWithShortName(obs.value.concept));\n                  } else if (this.widgetsCommons.hasDatatypeCoded(obs.concept)) {\n                    resultPromises.push(this.updateWithShortName(obs.value));\n                  }\n                }\n              } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                    _iterator9.return();\n                  }\n                } finally {\n                  if (_didIteratorError9) {\n                    throw _iteratorError9;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      return resultPromises;\n    }\n  }, {\n    key: 'updateWithShortName',\n    value: function updateWithShortName(concept) {\n      var _this7 = this;\n\n      return this.openmrsRest.get(\"concept/\" + concept.uuid, {\n        v: this.CONCEPT_CUSTOM_REP\n      }).then(function (conceptRes) {\n        concept.display = _this7.widgetsCommons.getConceptName(conceptRes, \"shortName\", _this7.sessionLocale);\n      }).catch(function (err) {\n        return console.error('failed to retrieve concept ' + conceptUuid + ', ' + err);\n      });\n    }\n  }]);\n\n  return ObsAcrossEncountersController;\n}();\n\nexports.default = ObsAcrossEncountersController;\n\n/***/ }),\n\n/***/ 173:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObsGraphComponent = undefined;\n\nvar _obsgraph = __webpack_require__(174);\n\nvar _obsgraph2 = _interopRequireDefault(_obsgraph);\n\nvar _obsgraph3 = __webpack_require__(256);\n\nvar _obsgraph4 = _interopRequireDefault(_obsgraph3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ObsGraphComponent = exports.ObsGraphComponent = {\n    template: _obsgraph4.default,\n    controller: _obsgraph2.default,\n    selector: 'obsgraph',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObsGraphController = function () {\n  ObsGraphController.$inject = [\"$q\", \"$filter\", \"openmrsRest\", \"openmrsTranslate\", \"widgetsCommons\"];\n  function ObsGraphController($q, $filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n    'ngInject';\n\n    _classCallCheck(this, ObsGraphController);\n\n    Object.assign(this, { $q: $q, $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate, widgetsCommons: widgetsCommons });\n  }\n\n  _createClass(ObsGraphController, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n\n      var self = this;\n      self.xAxis = {};\n      // Max age of obs to display\n      this.maxAgeInDays = undefined;\n      this.conceptRep = \"custom:(uuid,display,name:(display),datatype:(uuid,display))\";\n      this.customRep = \"custom:(uuid,display,obsDatetime,value,encounter:(encounterType),concept:(uuid,display,name:(display),datatype:(uuid,display)))\";\n\n      // Chart data\n      this.series = [];\n      this.labels = [];\n      this.data = [];\n      this.legend = [];\n\n      this.dataset = [];\n      /* Here is an example of the structure of this array of objects\n        [\n          {\n            \"uuid\": \"3ce93b62-26fe-102b-80cb-0017a47871b2\",\n            \"display\": \"Weight (kg)\",\n            \"values\": {\n              \"9\": 70, // the key indicates how many days ago this obs value was recorded\n              \"10\": 70.5,\n              \"133\": 75,\n              \"235\": 63,\n              \"324\": 65.9,\n              \"996\": 100\n            }\n          },\n          {\n            \"uuid\": \"3ce93cf2-26fe-102b-80cb-0017a47871b2\",\n            \"display\": \"Height (cm)\",\n            \"values\": {\n              \"9\": 170.2,\n              \"10\": 165.1,\n              \"133\": 165.1,\n              \"235\": 110,\n              \"324\": 153.4\n            }\n          }\n        ]\n        */\n\n      this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n      this.FunctionManager = {\n        bmi: function bmi(height, weight) {\n          var _arguments = arguments;\n\n          //add height and weight to the list of concepts whose obs should be retrieved\n          if (arguments && arguments.length > 0) {\n            var _loop = function _loop(i) {\n              var foundValue = self.conceptArray.find(function (element) {\n                return element.uuid === _arguments[i];\n              });\n              if (self.conceptArray && typeof foundValue === 'undefined') {\n                self.conceptArray.push({\n                  uuid: _arguments[i],\n                  type: \"obs\",\n                  legend: false\n                });\n              }\n            };\n\n            for (var i = 0; i < arguments.length; i++) {\n              _loop(i);\n            }\n            self.conceptArray.push({\n              uuid: null,\n              type: \"function\",\n              legend: true,\n              function: [\"calculateBmi\", height, weight]\n            });\n          }\n          return true;\n        },\n        calculateBmi: function calculateBmi(height, weight) {\n          if (height && weight) {\n            var heightDataset = self.dataset.find(function (element) {\n              return element.uuid === height;\n            });\n            var weightDataset = self.dataset.find(function (element) {\n              return element.uuid === weight;\n            });\n            if (heightDataset && weightDataset) {\n              var xAxisKeys = self.getXAxisKeys();\n              if (xAxisKeys !== null && xAxisKeys.length > 0) {\n                var tempData = [];\n                for (var k = 0; k < xAxisKeys.length; k++) {\n                  var heightValue = parseInt(heightDataset.values[xAxisKeys[k]]);\n                  var weightValue = parseInt(weightDataset.values[xAxisKeys[k]]);\n                  var yValue = null;\n                  if ((typeof heightValue === \"undefined\" ? \"undefined\" : _typeof(heightValue)) !== undefined && heightValue !== null && (typeof weightValue === \"undefined\" ? \"undefined\" : _typeof(weightValue)) !== undefined && weightValue !== null) {\n                    yValue = (weightValue / heightValue / heightValue * 10000).toFixed(1);\n                  }\n                  tempData.push(yValue);\n                }\n                self.series.push(\"BMI\");\n                self.data.push(tempData);\n              }\n            }\n          }\n          return null;\n        },\n        execute: function execute(name) {\n          return self.FunctionManager[name] && self.FunctionManager[name].apply(self.FunctionManager, [].slice.call(arguments, 1));\n        }\n      };\n\n      // order the X Axis values from the oldest obs date the the most recent obs date\n      this.orderXAxis = function () {\n        var xAxisKeys = this.getXAxisKeys();\n        if (xAxisKeys !== null && xAxisKeys.length > 0) {\n          for (var k = 0; k < xAxisKeys.length; k++) {\n            this.labels.push(this.xAxis[xAxisKeys[k]]);\n          }\n        }\n      };\n\n      this.updateChartData = function () {\n        var _this = this;\n\n        if (angular.isDefined(this.dataset) && this.dataset.length > 0) {\n          var xAxisKeys = this.getXAxisKeys();\n          if (xAxisKeys !== null && xAxisKeys.length > 0) {\n            var _loop2 = function _loop2(j) {\n              var concept = _this.conceptArray[j];\n              if (_this.hideConcepts !== undefined && _this.hideConcepts.length && _this.hideConcepts.includes(concept.uuid)) {\n                //if it was indicated that this concept should not be plotted, than skip to the next concept\n                return \"continue\";\n              }\n              if (concept.legend === true) {\n                if (concept.uuid && concept.type === \"obs\") {\n                  var obj = _this.dataset.find(function (element) {\n                    return element.uuid === concept.uuid;\n                  });\n                  if (angular.isDefined(obj) && obj !== null && angular.isDefined(obj.values) && obj.values !== null && Object.keys(obj.values).length > 0) {\n                    // if this concept has any obs values\n                    var tempData = [];\n                    for (var k = 0; k < xAxisKeys.length; k++) {\n                      var yValue = obj.values[xAxisKeys[k]];\n                      // all Y arrays of data need to have the same number of values\n                      // fill with null the missing values\n                      if (angular.isUndefined(yValue) || yValue == null) {\n                        yValue = null;\n                      }\n                      tempData.push(yValue);\n                    }\n                    _this.data.push(tempData);\n                  } else {\n                    //Removing series without corresponding data points\n                    var index = _this.series.indexOf(concept.display);\n                    if (index >= 0) {\n                      _this.series.splice(index, 1);\n                    }\n                  }\n                } else if (concept.type === \"function\" && concept.function) {\n                  var _FunctionManager;\n\n                  (_FunctionManager = _this.FunctionManager).execute.apply(_FunctionManager, _toConsumableArray(concept.function));\n                }\n              }\n            };\n\n            for (var j = 0; j < this.conceptArray.length; j++) {\n              var _ret2 = _loop2(j);\n\n              if (_ret2 === \"continue\") continue;\n            }\n          }\n        }\n      };\n\n      this.getConceptNames = function () {\n        var promises = [];\n        if (this.conceptArray !== null && this.conceptArray.length > 0) {\n          for (var i = 0; i < this.conceptArray.length; i++) {\n            if (this.conceptArray[i].uuid) {\n              var promisedObs = this.openmrsRest.get('concept/' + this.conceptArray[i].uuid, {\n                v: this.conceptRep\n              }).then(function (concept) {\n                return concept;\n              });\n              promises.push(promisedObs);\n            }\n          }\n        }\n        return this.$q.all(promises).then(function (concepts) {\n          var _loop3 = function _loop3(_i) {\n            var concept = self.conceptArray[_i];\n            if (concept.legend === true) {\n              var serverConcept = concepts.find(function (element) {\n                return element.uuid === concept.uuid;\n              });\n              if (serverConcept && serverConcept.display) {\n                self.series.push(serverConcept.display);\n                self.conceptArray[_i].display = serverConcept.display;\n              }\n            }\n          };\n\n          for (var _i = 0; _i < self.conceptArray.length; _i++) {\n            _loop3(_i);\n          }\n        });\n      };\n\n      this.getAllObs = function () {\n        var promises = [];\n        if (this.conceptArray !== null && this.conceptArray.length > 0) {\n          for (var i = 0; i < this.conceptArray.length; i++) {\n            if (this.conceptArray[i].uuid) {\n              var promisedObs = this.openmrsRest.list('obs', {\n                patient: this.config.patientUuid,\n                v: this.customRep,\n                limit: this.config.maxResults,\n                concept: this.conceptArray[i].uuid\n              }).then(function (response) {\n                return response.results;\n              });\n              promises.push(promisedObs);\n            }\n          }\n        }\n        return this.$q.all(promises).then(function (data) {\n          var isEncounterTypeNotAllowed = function isEncounterTypeNotAllowed(encounterType) {\n            return angular.isDefined(self.encounterTypes) && self.encounterTypes.indexOf(encounterType) < 0;\n          };\n          var getEncounterType = function getEncounterType(observation) {\n            if (angular.isUndefined(observation)) {\n              return null;\n            }\n            return observation.encounter.encounterType.uuid;\n          };\n\n          for (var j = 0; j < data.length; j++) {\n            var conceptObject = {};\n\n            var obsArray = data[j];\n            if (obsArray.length > 0) {\n              //we have at least one observation\n              conceptObject.uuid = obsArray[0].concept.uuid;\n              conceptObject.display = obsArray[0].concept.display;\n              conceptObject.values = {};\n              for (var k = 0; k < obsArray.length; k++) {\n                var obs = obsArray[k];\n                //Skip obs if encounter type does not match (only when encounter type specified in config)\n                if (isEncounterTypeNotAllowed(getEncounterType(obs))) {\n                  continue;\n                }\n\n                if (obs.concept.datatype.display == 'Numeric') {\n                  // Don't add obs older than maxAge\n                  var xValue = self.widgetsCommons.daysSinceDate(obs.obsDatetime);\n                  if (angular.isUndefined(self.maxAgeInDays) || xValue <= self.maxAgeInDays) {\n                    // Add obs data for chart display\n                    var obsDate = self.widgetsCommons.formatDate(obs.obsDatetime, self.config.JSDateFormat, self.config.language);\n                    conceptObject.values[xValue] = obs.value;\n                    self.xAxis[xValue] = obsDate;\n                  }\n                }\n              }\n            }\n            self.dataset.push(conceptObject);\n          }\n          self.orderXAxis();\n        });\n      };\n\n      this.getConfig();\n\n      var getConceptNamesPromise = this.getConceptNames();\n      var getAllObsPromise = this.getAllObs();\n\n      this.$q.all([getConceptNamesPromise, getAllObsPromise]).then(function () {\n        self.updateChartData();\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      // Set default maxResults if not defined\n      if (angular.isUndefined(this.config.maxResults)) {\n        this.config.maxResults = 4;\n      }\n      // Parse maxAge to day count\n      this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n      if (angular.isDefined(this.config.encounterTypes)) {\n        this.encounterTypes = this.config.encounterTypes.replace(/ /gi, \"\").split(\",\");\n      }\n\n      // Set default showLegend to true if not defined\n      if (angular.isUndefined(this.config.showLegend)) {\n        this.config.showLegend = true;\n      }\n\n      if (angular.isDefined(this.config.hideConcepts)) {\n        this.hideConcepts = this.config.hideConcepts.replace(/ /gi, \"\").split(\",\");\n      }\n\n      this.options = {\n        legend: {\n          display: this.config.showLegend,\n          position: 'top'\n        },\n        scales: {\n          yAxes: [{\n            id: 'y-axis-1',\n            type: 'linear',\n            display: true,\n            position: 'left'\n          }]\n        }\n      };\n\n      if (this.config.type && this.config.type === 'logarithmic') {\n        this.options.scales.yAxes[0] = {\n          id: 'y-axis-1',\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n          ticks: {\n            callback: function callback(value, index, values) {\n              if (value.length) {\n                return Number(value).toLocaleString();\n              }\n              return value;\n            },\n            autoSkip: true,\n            maxTicksLimit: 5\n          }\n        };\n      }\n      // Parse the comma delimited concept UUIDs into an array\n      // First, remove all whitespaces from the input string\n      var tempArray = this.config.conceptId.replace(/ /gi, \"\").split(\",\");\n\n      this.conceptArray = tempArray.map(function (concept) {\n        return {\n          uuid: concept,\n          type: \"obs\",\n          legend: true,\n          display: ''\n        };\n      });\n\n      if (this.config.function && this.config.function.length > 0) {\n        this.parseFunctionConfig(this.config.function);\n      }\n    }\n  }, {\n    key: \"parseFunctionConfig\",\n    value: function parseFunctionConfig(fns) {\n      if (fns) {\n        // remove empty spaces\n        var fnsArray = fns.replace(/ /gi, \"\").split(\";\");\n        if (angular.isDefined(fnsArray) && fnsArray !== null && fnsArray.length > 0) {\n          for (var i = 0; i < fnsArray.length; i++) {\n            var params = fnsArray[i];\n            if (params && params.length > 0) {\n              var line = params.substring(params.indexOf(\"(\") + 1, params.indexOf(\")\"));\n              if (line && line.length > 0) {\n                var paramsArray = line.split(\",\");\n                if (paramsArray && paramsArray.length > 0) {\n                  var _FunctionManager2;\n\n                  (_FunctionManager2 = this.FunctionManager).execute.apply(_FunctionManager2, _toConsumableArray(paramsArray));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getXAxisKeys\",\n    value: function getXAxisKeys() {\n      var keys = null;\n      if (angular.isDefined(this.xAxis) && this.xAxis) {\n        keys = Object.keys(this.xAxis);\n        if (keys && keys.length > 0) {\n          keys.sort(function (a, b) {\n            return parseInt(b) - parseInt(a);\n          });\n        }\n      }\n      return keys;\n    }\n  }]);\n\n  return ObsGraphController;\n}();\n\nexports.default = ObsGraphController;\n\n/***/ }),\n\n/***/ 175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramsComponent = undefined;\n\nvar _programs = __webpack_require__(176);\n\nvar _programs2 = _interopRequireDefault(_programs);\n\nvar _programs3 = __webpack_require__(257);\n\nvar _programs4 = _interopRequireDefault(_programs3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nvar ProgramsComponent = exports.ProgramsComponent = {\n    template: _programs4.default,\n    controller: _programs2.default,\n    selector: 'programs',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramsController = function () {\n    ProgramsController.$inject = [\"$filter\", \"openmrsRest\", \"openmrsTranslate\", \"widgetsCommons\"];\n    function ProgramsController($filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramsController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(ProgramsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            // the default patient page is the clinician dashboard\n            this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}&dashboard={{dashboard}}\";\n\n            this.programs = [];\n\n            this.unenrolledPrograms = [];\n\n            this.patientPrograms = [];\n\n            this.showAddProgram = false;\n\n            this.canEnrollInProgram = false;\n\n            this.input = {\n                program: \"\"\n            };\n\n            // TODO did this work?\n            this.dateFormat = this.config.dateFormat == '' || _angular2.default.isUndefined(this.config.dateFormat) ? 'yyyy-MM-dd' : this.config.dateFormat;\n\n            this.supportedPrograms = [];\n\n            if (this.config.supportedPrograms) {\n                this.supportedPrograms = this.config.supportedPrograms.split(',');\n            }\n\n            this.activate();\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            if (this.config.dashboardPage) {\n                this.dashboardPage = this.config.dashboardPage;\n            }\n\n            this.fetchPrivileges();\n\n            this.fetchPrograms().then(this.fetchPatientPrograms.bind(this)).then(this.determineUnenrolledPrograms.bind(this));\n        }\n    }, {\n        key: 'fetchPrivileges',\n        value: function fetchPrivileges() {\n            var _this = this;\n\n            this.openmrsRest.get('session', {\n                v: 'custom:(privileges:(name))'\n            }).then(function (response) {\n                if (response && response.user && _angular2.default.isArray(response.user.privileges)) {\n                    if (_this.widgetsCommons.isSystemDeveloper(response.user)) {\n                        _this.canEnrollInProgram = true;\n                    } else if (response.user.privileges.some(function (p) {\n                        return p.name === 'Task: coreapps.enrollInProgram';\n                    })) {\n                        _this.canEnrollInProgram = true;\n                    };\n                }\n            }, function (error) {\n                console.log('failed to retrieve user privileges, error: ' + error);\n            });\n        }\n    }, {\n        key: 'fetchPrograms',\n        value: function fetchPrograms() {\n            var _this2 = this;\n\n            return this.openmrsRest.get('program', {\n                v: 'custom:display,uuid'\n            }).then(function (response) {\n                _this2.getPrograms(response.results);\n            });\n        }\n    }, {\n        key: 'fetchPatientPrograms',\n        value: function fetchPatientPrograms() {\n            var _this3 = this;\n\n            return this.openmrsRest.get('programenrollment', {\n                patient: this.config.patientUuid,\n                voided: false,\n                limit: this.getMaxRecords(),\n                v: 'custom:program:(uuid,display),dateEnrolled,dateCompleted'\n            }).then(function (response) {\n                _this3.getPatientPrograms(response.results);\n            });\n        }\n    }, {\n        key: 'getPrograms',\n        value: function getPrograms(programs) {\n            var _this4 = this;\n\n            _angular2.default.forEach(programs, function (program) {\n                // filter out any unsupported programs\n                if (_this4.supportedPrograms.length == 0 || _this4.supportedPrograms.indexOf(program.uuid) != -1) {\n                    _this4.programs.push(program);\n                }\n            });\n        }\n    }, {\n        key: 'getPatientPrograms',\n        value: function getPatientPrograms(patientPrograms) {\n            var _this5 = this;\n\n            this.patientPrograms = [];\n            _angular2.default.forEach(patientPrograms, function (patientProgram) {\n                // filter out any unsupported programs\n                if (_this5.supportedPrograms.length == 0 || _this5.supportedPrograms.indexOf(patientProgram.program.uuid) != -1) {\n                    _this5.patientPrograms.push(patientProgram);\n                }\n            });\n        }\n    }, {\n        key: 'getMaxRecords',\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || _angular2.default.isUndefined(this.config.maxRecords)) {\n                return 20;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }, {\n        key: 'determineUnenrolledPrograms',\n        value: function determineUnenrolledPrograms() {\n            var activeProgramsUuids = [];\n            _angular2.default.forEach(this.patientPrograms, function (patientProgram) {\n                if (!patientProgram.dateCompleted) {\n                    activeProgramsUuids.push(patientProgram.program.uuid);\n                }\n            });\n\n            this.unenrolledPrograms = this.$filter('filter')(this.programs, function (program) {\n                return activeProgramsUuids.indexOf(program.uuid) == -1;\n            });\n        }\n    }, {\n        key: 'addProgram',\n        value: function addProgram() {\n            this.showAddProgram = true;\n        }\n    }, {\n        key: 'cancelAddProgram',\n        value: function cancelAddProgram() {\n            this.showAddProgram = false;\n            this.input.program = \"\";\n        }\n    }, {\n        key: 'gotoProgramDashboard',\n        value: function gotoProgramDashboard(event, programUuid) {\n\n            programUuid = programUuid || this.input.program;\n            if (programUuid && this.config.enableProgramDashboards) {\n                var destinationPage = \"\";\n                destinationPage = Handlebars.compile(this.dashboardPage)({\n                    patientUuid: this.config.patientUuid,\n                    dashboard: programUuid\n                });\n                this.openmrsRest.getServerUrl().then(function (url) {\n                    var target = url + destinationPage;\n                    console.log(event);\n                    if (!event.metaKey && !event.ctrlKey && !event.shiftKey) {\n                        window.location.href = target;\n                    } else {\n                        window.open(target, '_blank');\n                    }\n                });\n            }\n        }\n    }]);\n\n    return ProgramsController;\n}();\n\nexports.default = ProgramsController;\n\n/***/ }),\n\n/***/ 177:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramStatisticsComponent = undefined;\n\nvar _programstatistics = __webpack_require__(178);\n\nvar _programstatistics2 = _interopRequireDefault(_programstatistics);\n\nvar _programstatistics3 = __webpack_require__(258);\n\nvar _programstatistics4 = _interopRequireDefault(_programstatistics3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nvar ProgramStatisticsComponent = exports.ProgramStatisticsComponent = {\n    template: _programstatistics4.default,\n    controller: _programstatistics2.default,\n    selector: 'programstatistics',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 178:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramStatisticsController = function () {\n    ProgramStatisticsController.$inject = [\"$filter\", \"openmrsRest\", \"openmrsTranslate\"];\n    function ProgramStatisticsController($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramStatisticsController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(ProgramStatisticsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.activate();\n            var ctrl = this;\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.getEverEnrolledInProgram();\n            this.getCurrentlyEnrolledInProgram();\n        }\n    }, {\n        key: 'getEverEnrolledInProgram',\n        value: function getEverEnrolledInProgram() {\n            var _this = this;\n\n            return this.openmrsRest.get('reportingrest/cohort', {\n                v: \"ref\",\n                uuid: 'reporting.library.cohortDefinition.builtIn.patientsWithEnrollment',\n                programs: [this.config.program]\n            }).then(function (response) {\n                _this.everEnrolled = response && 'count' in response ? response.count : _this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error');\n            });\n        }\n    }, {\n        key: 'getCurrentlyEnrolledInProgram',\n        value: function getCurrentlyEnrolledInProgram() {\n            var _this2 = this;\n\n            return this.openmrsRest.get('reportingrest/cohort', {\n                v: \"ref\",\n                uuid: 'reporting.library.cohortDefinition.builtIn.patientsInProgram',\n                programs: [this.config.program],\n                onDate: new Date()\n            }).then(function (response) {\n                _this2.currentlyEnrolled = response && 'count' in response ? response.count : _this2.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error');\n            });\n        }\n    }]);\n\n    return ProgramStatisticsController;\n}();\n\nexports.default = ProgramStatisticsController;\n\n/***/ }),\n\n/***/ 179:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramStatusComponent = undefined;\n\nvar _programstatus = __webpack_require__(180);\n\nvar _programstatus2 = _interopRequireDefault(_programstatus);\n\nvar _programstatus3 = __webpack_require__(259);\n\nvar _programstatus4 = _interopRequireDefault(_programstatus3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when complete\n\n\nvar ProgramStatusComponent = exports.ProgramStatusComponent = {\n    template: _programstatus4.default,\n    controller: _programstatus2.default,\n    selector: 'programstatus',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 180:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _moment = __webpack_require__(0);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramStatusController = function () {\n\n    // TODO add support for special logic around \"initial\" and \"terminal?\"\n\n    ProgramStatusController.$inject = [\"$filter\", \"$window\", \"$q\", \"openmrsRest\", \"openmrsTranslate\", \"widgetsCommons\"];\n    function ProgramStatusController($filter, $window, $q, openmrsRest, openmrsTranslate, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramStatusController);\n\n        Object.assign(this, { $filter: $filter, $window: $window, $q: $q, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(ProgramStatusController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.vPatientProgram = 'custom:uuid,program:(uuid),dateEnrolled,dateCompleted,dateCreated,outcome:(display),location:(display,uuid),dateCompleted,outcome,states:(uuid,startDate,endDate,dateCreated,voided,state:(uuid,concept:(display)))';\n\n            this.dateFormat = this.config.dateFormat == '' || _angular2.default.isUndefined(this.config.dateFormat) ? 'dd-MMM-yyyy' : this.config.dateFormat;\n            this.today = new Date();\n\n            this.loaded = false;\n            this.deleted = false;\n\n            this.program = null;\n            this.patientProgram = null;\n            this.patientPrograms = null;\n            this.programLocations = null;\n            this.programOutcomes = null;\n            this.sessionLocation = null;\n\n            this.expandedWorkflows = typeof this.config.expandedWorkflows === 'boolean' ? this.config.expandedWorkflows : false;\n\n            // we calculate these two values based on the completion date of the previous program and the enrollment date of any subsequent program\n            // we populate these on initial load\n            this.minEnrollmentDate = null;\n            this.maxCompletionDate = null;\n\n            this.canEnrollInProgram = false;\n            this.canEditProgram = false;\n            this.canDeleteProgram = false;\n\n            this.statesByWorkflow = {};\n            this.statesByUuid = {};\n            this.sortedStatesByWorkflow = {};\n\n            this.markPatientDeadOutcome = null;\n            this.markPatientDeadPage = \"/coreapps/markPatientDead.page?patientId={{patientUuid}}&returnDashboard={{dashboard}}&defaultDeathDate={{date}}&defaultDead=true\";\n            this.canMarkPatientDead = false;\n            this.requestInProgress = false;\n\n            // config parameter that can be passed in so the widget knows what dashboard it is being rendered on,\n            // currently only use is to pass on to Mark Patient Dead page to use as a return url\n            this.dashboard = null;\n\n            // backs the various input fields\n            this.input = {\n                dateEnrolled: null,\n                enrollmentLocation: null,\n                dateCompleted: null,\n                outcome: null,\n                initialWorkflowStateByWorkflow: {},\n                changeToStateByWorkflow: {}\n            };\n\n            this.resetWindowStates();\n\n            var ctrl = this;\n\n            return this.activate();\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            if (this.config.dashboard) {\n                this.dashboard = this.config.dashboard;\n            }\n\n            // if this concept is selected as an outcome, redirect to \"Mark Patient Dead\" page\n            if (this.config.markPatientDeadOutcome) {\n                this.markPatientDeadOutcome = this.config.markPatientDeadOutcome;\n            }\n\n            if (this.config.markPatientDeadPage) {\n                this.markPatientDeadPage = this.config.markPatientDeadPage;\n            }\n\n            this.fetchPrivileges();\n            this.fetchSessionLocation();\n\n            return this.fetchLocations().then(this.fetchProgram.bind(this)).then(this.fetchOutcomes.bind(this)).then(this.fetchPatientProgram.bind(this));\n        }\n    }, {\n        key: 'fetchPrivileges',\n        value: function fetchPrivileges() {\n            var _this = this;\n\n            this.openmrsRest.get('session').then(function (response) {\n                if (response && response.user && _angular2.default.isArray(response.user.privileges)) {\n                    if (_this.widgetsCommons.isSystemDeveloper(response.user)) {\n                        _this.canEnrollInProgram = true;\n                        _this.canEditProgram = true;\n                        _this.canDeleteProgram = true;\n                        _this.canMarkPatientDead = true;\n                    } else {\n                        if (response.user.privileges.some(function (p) {\n                            return p.name === 'Task: coreapps.enrollInProgram';\n                        })) {\n                            _this.canEnrollInProgram = true;\n                        };\n                        if (response.user.privileges.some(function (p) {\n                            return p.name === 'Task: coreapps.editPatientProgram';\n                        })) {\n                            _this.canEditProgram = true;\n                        };\n                        if (response.user.privileges.some(function (p) {\n                            return p.name === 'Task: coreapps.deletePatientProgram';\n                        })) {\n                            _this.canDeleteProgram = true;\n                        };\n                        if (response.user.privileges.some(function (p) {\n                            return p.name === 'Task: coreapps.markPatientDead';\n                        })) {\n                            _this.canMarkPatientDead = true;\n                        };\n                    }\n                }\n            }, function (error) {\n                console.log('failed to retrieve user privileges, error: ' + error);\n            });\n        }\n    }, {\n        key: 'setInputsToStartingValues',\n        value: function setInputsToStartingValues() {\n            var _this2 = this;\n\n            this.input.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : new Date();\n\n            this.input.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n            this.input.outcome = this.patientProgram && this.patientProgram.outcome ? this.patientProgram.outcome.uuid : null;\n\n            if (this.patientProgram && this.patientProgram.location) {\n                this.input.enrollmentLocation = this.patientProgram.location.uuid;\n            }\n            // if there is only possible location, set it as the default (this is why loading locations (in activate) needs to happen before patient programs)\n            else if (this.programLocations && this.programLocations.length == 1) {\n                    this.input.enrollmentLocation = this.programLocations[0].uuid;\n                }\n                // if we have more than one location, set the current session's location as the default\n                else if (this.programLocations) {\n                        if (this.sessionLocation) {\n                            var defaultLoc = this.$filter('filter')(this.programLocations, function (location) {\n                                return location.uuid == _this2.sessionLocation.uuid;\n                            })[0];\n                            if (defaultLoc) {\n                                this.input.enrollmentLocation = defaultLoc.uuid;\n                            }\n                        }\n                    }\n            this.input.initialWorkflowStateByWorkflow = {};\n            this.input.changeToStateByWorkflow = {};\n        }\n    }, {\n        key: 'convertDateEnrolledAndDateCompletedStringsToDates',\n        value: function convertDateEnrolledAndDateCompletedStringsToDates() {\n            if (this.patientProgram) {\n                this.patientProgram.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n                // The `dateCompleted` is set based on the `startDate` from patient program state because we\n                // had stored this date as the date without the time that's why now we don't want\n                // to add timezone offset to that value (and use toUTCDate)\n                this.patientProgram.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? this.toUTCDate(this.patientProgram.dateCompleted) : null;\n            }\n        }\n    }, {\n        key: 'toggleEditEnrollment',\n        value: function toggleEditEnrollment() {\n            var currentStatus = this.edit.enrollment;\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n\n            this.edit.enrollment = !currentStatus;\n        }\n    }, {\n        key: 'toggleEditWorkflow',\n        value: function toggleEditWorkflow(workflowUuid) {\n            var currentStatus = this.edit.workflow[workflowUuid];\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n\n            // the first time we hit this, we need to initialize the workflow\n            if (!workflowUuid in this.edit.workflow) {\n                this.edit.workflow[workflowUuid] = true;\n            } else {\n                this.edit.workflow[workflowUuid] = !currentStatus;\n            }\n        }\n    }, {\n        key: 'toggleExpandedWorkflow',\n        value: function toggleExpandedWorkflow(workflowUuid) {\n            this.expanded.workflow[workflowUuid] = !this.expanded.workflow[workflowUuid];\n        }\n\n        // Initializes workflows' states to expanded display mode based on boolean configuration value - this.config.expandedWorkflows\n\n    }, {\n        key: 'initExpandedWorkflows',\n        value: function initExpandedWorkflows() {\n            var _this3 = this;\n\n            _angular2.default.forEach(this.program.workflows, function (workflow) {\n                _this3.expanded.workflow[workflow.uuid] = _this3.expandedWorkflows;\n            });\n        }\n    }, {\n        key: 'fetchProgram',\n        value: function fetchProgram() {\n            var _this4 = this;\n\n            return this.openmrsRest.get('program', {\n                uuid: this.config.program,\n                v: 'custom:display,uuid,outcomesConcept:(uuid),workflows:(uuid,concept:(display),states:(uuid,initial,terminal,concept:(display))'\n            }).then(function (response) {\n                // TODO handle error cases, program doesn't exist\n                _this4.program = response;\n\n                _angular2.default.forEach(_this4.program.workflows, function (workflow) {\n                    _this4.statesByWorkflow[workflow.uuid] = workflow.states;\n                    _angular2.default.forEach(workflow.states, function (state) {\n                        _this4.statesByUuid[state.uuid] = state;\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'fetchPatientProgram',\n        value: function fetchPatientProgram() {\n            var _this5 = this;\n\n            this.loaded = false;\n            this.patientProgram = null;\n            this.resetWindowStates();\n\n            return this.openmrsRest.get('programenrollment', {\n                patient: this.config.patientUuid,\n                v: this.vPatientProgram\n            }).then(function (response) {\n                _this5.patientPrograms = response.results;\n                _this5.getPatientProgramFromPatientProgramList();\n                _this5.groupAndSortPatientStates();\n                _this5.setInputsToStartingValues();\n                _this5.convertDateEnrolledAndDateCompletedStringsToDates();\n                _this5.initExpandedWorkflows();\n                _this5.loaded = true;\n            });\n        }\n    }, {\n        key: 'fetchLocations',\n        value: function fetchLocations() {\n            var _this6 = this;\n\n            var locationsPromise = this.$window.sessionContext.locationsPromise;\n            if (!locationsPromise) {\n                locationsPromise = this.openmrsRest.get(\"location\", {\n                    v: \"custom:display,uuid\",\n                    tag: this.config.locationTag\n                });\n                // make the location promise available for other program widgets\n                // sessionContext is defined in appui - https://github.com/openmrs/openmrs-module-appui/blob/master/omod/src/main/webapp/fragments/decorator/standardEmrPage.gsp\n                this.$window.sessionContext.locationsPromise = locationsPromise;\n            }\n            return locationsPromise.then(function (e) {\n                _this6.programLocations = e.results;\n                return e;\n            });\n        }\n    }, {\n        key: 'fetchSessionLocation',\n        value: function fetchSessionLocation() {\n            var _this7 = this;\n\n            return this.openmrsRest.get('appui/session', {\n                v: 'custom:name,uuid'\n            }).then(function (response) {\n                _this7.sessionLocation = response.sessionLocation;\n            });\n        }\n    }, {\n        key: 'fetchOutcomes',\n        value: function fetchOutcomes() {\n            var _this8 = this;\n\n            if (this.program.outcomesConcept) {\n                return this.openmrsRest.get('concept', {\n                    v: 'custom:answers:(display,uuid)',\n                    uuid: this.program.outcomesConcept.uuid\n                }).then(function (response) {\n                    _this8.programOutcomes = response.answers;\n                });\n            }\n        }\n\n        // get the patient program that this widget will be displaying/manipulating\n\n    }, {\n        key: 'getPatientProgramFromPatientProgramList',\n        value: function getPatientProgramFromPatientProgramList() {\n            var _this9 = this;\n\n            // first, filter to only patient programs of the specified type\n            this.patientPrograms = this.$filter('filter')(this.patientPrograms, function (patientProgram) {\n                return patientProgram.program.uuid == _this9.config.program;\n            });\n\n            // if there's more than one enrollment for this patient, we need to figure out which one this widget is meant\n            // to display\n            if (this.patientPrograms.length > 0) {\n\n                // sort programs by date... this widget will only be displaying one of them, but we need them in order\n                // to properly calculate the max completion date and min enrollment date (which is based any programs chronologically\n                // before/after the program we are viewing)\n                this.patientPrograms = this.$filter('orderBy')(this.patientPrograms, null, false, this.patientProgramComparator);\n\n                // if widget has been configured to display a specific patient program (by the config.patientProgram parameter):\n                // find the matching program by uuid, and set the min/max for enroll/complete based on the surrounding programs\n                if (!this.displayActiveProgram()) {\n\n                    _angular2.default.forEach(this.patientPrograms, function (patientProgram, i) {\n                        if (patientProgram.uuid == _this9.config.patientProgram) {\n                            _this9.patientProgram = patientProgram;\n                            if (i > 0) {\n                                _this9.maxCompletionDate = new Date(_this9.patientPrograms[i - 1].dateEnrolled);\n                            }\n                            if (i + 1 < _this9.patientPrograms.length) {\n                                _this9.minEnrollmentDate = new Date(_this9.patientPrograms[i + 1].dateCompleted);\n                            }\n                        }\n                    });\n\n                    // TODO error case: no match found\n                }\n                // otherwise, this widget defaults to show the active program, or if no active program, will render a widget for enrolling in the program\n                else {\n                        // there's an active program (ie the most recent program does not have a completion date)\n                        if (!this.patientPrograms[0].dateCompleted) {\n                            this.patientProgram = this.patientPrograms[0];\n                            if (this.patientPrograms.length > 1) {\n                                // enrollment date cannot be shifted to before completion date of previous program\n                                this.minEnrollmentDate = new Date(this.patientPrograms[1].dateCompleted);\n                            }\n                        }\n                        // no active program\n                        else {\n                                // enrollment date for a new program can't be set before the completion date of any previous program\n                                this.minEnrollmentDate = new Date(this.patientPrograms[0].dateCompleted);\n                            }\n                    }\n            }\n        }\n    }, {\n        key: 'enrollInProgram',\n        value: function enrollInProgram() {\n            var _this10 = this;\n\n            if (this.input.dateEnrolled && this.input.enrollmentLocation) {\n                this.requestInProgress = true;\n\n                var states = [];\n                _angular2.default.forEach(this.input.initialWorkflowStateByWorkflow, function (state) {\n                    // program entity lost information about `startDate` time value (date database type) and it\n                    // causes an issue when the timezone is different than UTC, that's why we remove information\n                    // about a time before sending a request\n                    state.startDate = _this10.dateWithoutTime(_this10.input.dateEnrolled);\n                    states.push(state);\n                });\n\n                this.openmrsRest.create('programenrollment', {\n                    patient: this.config.patientUuid,\n                    program: this.config.program,\n                    dateEnrolled: this.input.dateEnrolled,\n                    location: this.input.enrollmentLocation,\n                    states: states\n                }).then(function (response) {\n                    if (_this10.config.disableReloadPage) {\n                        _this10.fetchPatientProgram(_this10.patientProgram.uuid); // refresh display\n                        _this10.requestInProgress = false;\n                    } else {\n                        _this10.reloadPage(); // closing a program affects other widgets, so we need to reload the entire page\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'updatePatientProgram',\n        value: function updatePatientProgram() {\n            var _this11 = this;\n\n            // we need to reload the entire page if date of enrollment or completion has changed, because may affect other program widget on the same page\n            // (reloading can be disabled by using the \"disable reload page\" config parameter\n            var needToReloadPage = !this.config.disableReloadPage && this.input.dateEnrolled.getTime() != this.patientProgram.dateEnrolled.getTime() || this.input.dateCompleted && !this.patientProgram.dateCompleted || !this.input.dateCompleted && this.patientProgram.dateCompleted || this.input.dateCompleted && this.patientProgram.dateCompleted && this.input.dateCompleted.getTime() != this.patientProgram.dateCompleted.getTime();\n\n            // (disabling this... keeping most recent state with no end date for consistency with current workflow)\n            // we need to make sure that the most recent state for each workflow has an end date = completion date\n            // (this should really be handled by the api?)\n            /*  let states = [];\n              angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n                  if (workflow.length > 0) {\n                      states.push({\n                          uuid: workflow[0].uuid,\n                          endDate: this.input.dateCompleted\n                      })\n                  }\n              })*/\n\n            this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n                dateEnrolled: this.input.dateEnrolled,\n                dateCompleted: this.input.dateCompleted,\n                location: this.input.enrollmentLocation,\n                outcome: this.input.outcome //,\n                //states: states\n            }).then(function (response) {\n                // redirect to Mark Patient Dead page if status is being set to \"dead\" or is currently \"dead\"\n                if (_this11.markPatientDeadOutcome && _this11.canMarkPatientDead && (response.outcome && response.outcome.uuid === _this11.markPatientDeadOutcome || _this11.patientProgram.outcome && _this11.patientProgram.outcome.uuid == _this11.markPatientDeadOutcome)) {\n                    var destinationPage = Handlebars.compile(_this11.markPatientDeadPage)({\n                        patientUuid: _this11.config.patientUuid,\n                        dashboard: _this11.config.dashboard,\n                        date: response.dateCompleted\n                    });\n                    _this11.openmrsRest.getServerUrl().then(function (url) {\n                        var target = url + destinationPage;\n                        window.location.href = target;\n                    });\n                } else if (!needToReloadPage) {\n                    _this11.fetchPatientProgram(_this11.patientProgram.uuid); // refresh display\n                } else {\n                    _this11.reloadPage(); // closing a program affects other widgets, so we need to reload the entire page\n                }\n            });\n        }\n    }, {\n        key: 'deletePatientProgram',\n        value: function deletePatientProgram() {\n            var _this12 = this;\n\n            if (!this.confirmDelete.enrollment) {\n                this.confirmDelete.enrollment = true;\n            } else {\n                this.confirmDelete.enrollment = false;\n                this.openmrsRest.remove('programenrollment/', {\n                    uuid: this.patientProgram.uuid\n                }).then(function (response) {\n                    _this12.patientProgram = null;\n\n                    // if this widget was set to display the \"active program\" (ie, no patient program uuid passed in)\n                    // then reload, otherwise render a \"patient program deleted\" message and reload entire page\n\n                    if (_this12.displayActiveProgram()) {\n                        _this12.fetchPatientProgram(); // refresh display\n                    } else {\n                        _this12.deleted = true;\n                        if (!_this12.config.disableReloadPage) {\n                            _this12.reloadPage();\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'deleteMostRecentPatientState',\n        value: function deleteMostRecentPatientState(workflowUuid) {\n            if (!this.confirmDelete.workflow[workflowUuid]) {\n                this.confirmDelete.workflow[workflowUuid] = true;\n            } else {\n                this.confirmDelete.workflow[workflowUuid] = false;\n                if (workflowUuid in this.sortedStatesByWorkflow && this.sortedStatesByWorkflow[workflowUuid].length > 0) {\n                    this.voidPatientState(this.sortedStatesByWorkflow[workflowUuid][0].uuid);\n                }\n            }\n        }\n    }, {\n        key: 'createPatientState',\n        value: function createPatientState(state) {\n            var _this13 = this;\n\n            // patient program entity lost information about `startDate` time value (date database type) and it\n            // causes an issue when the timezone is different than UTC, that's why we remove information\n            // about a time before sending a request\n            this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n                states: [{\n                    state: state.state,\n                    startDate: this.dateWithoutTime(state.date) // TODO is it okay that we set this date on the client-side? need to sync with\n                }]\n            }).then(function (response) {\n                // TODO: handle error cases\n                if (_this13.statesByUuid[state.state].terminal) {\n                    _this13.reloadPage();\n                } else {\n                    _this13.fetchPatientProgram(_this13.patientProgram.uuid); // refresh display\n                }\n            });\n        }\n    }, {\n        key: 'getWorkflowForState',\n        value: function getWorkflowForState(state) {\n            var result = void 0;\n\n            _angular2.default.forEach(this.program.workflows, function (workflow) {\n                _angular2.default.forEach(workflow.states, function (workflowState) {\n                    if (state.uuid == workflowState.uuid) {\n                        result = workflow;\n                    }\n                });\n            });\n            return result;\n        }\n    }, {\n        key: 'voidPatientState',\n        value: function voidPatientState(patientStateUuid) {\n            var _this14 = this;\n\n            return this.openmrsRest.remove('programenrollment/' + this.patientProgram.uuid + \"/state/\" + patientStateUuid, {\n                voided: \"true\",\n                voidReason: \"voided via UI\"\n            }).then(function (response) {\n                // TODO: handle error cases\n                _this14.fetchPatientProgram(_this14.patientProgram.uuid); // refresh display\n            });\n        }\n    }, {\n        key: 'updatePatientState',\n        value: function updatePatientState(workflowUuid, stateUuid) {\n            this.edit.workflow[workflowUuid] = false;\n            this.createPatientState(this.input.changeToStateByWorkflow[workflowUuid]);\n        }\n    }, {\n        key: 'isNotCurrentState',\n        value: function isNotCurrentState(workflow) {\n            var _this15 = this;\n\n            return function (state) {\n                var currentState = workflow.uuid in _this15.sortedStatesByWorkflow ? _this15.sortedStatesByWorkflow[workflow.uuid][0] : null;\n                return !currentState || currentState.state.uuid != state.uuid;\n            };\n        }\n    }, {\n        key: 'isInitialState',\n        value: function isInitialState() {\n            return function (state) {\n                return state.initial;\n            };\n        }\n    }, {\n        key: 'groupAndSortPatientStates',\n        value: function groupAndSortPatientStates() {\n            var _this16 = this;\n\n            this.sortedStatesByWorkflow = {};\n\n            if (this.patientProgram && this.patientProgram.states) {\n                // TODO remove this first filter once the bug with the REST request returning voided elements is fixed\n                this.patientProgram.states = this.$filter('filter')(this.patientProgram.states, function (state) {\n                    return !state.voided;\n                }, true);\n\n                //this custom comparator is detailed in the PR at https://github.com/openmrs/openmrs-module-coreapps/pull/299\n                //the orderBy docs are available at https://docs.angularjs.org/api/ng/filter/orderBy\n                this.patientProgram.states = this.$filter('orderBy')(this.patientProgram.states, null, false, function (state1, state2) {\n                    //From the orderBy documentation\n\n                    //In order to ensure that the sorting will be deterministic across platforms, if none of the specified predicates can\n                    //distinguish between two items, orderBy will automatically introduce a dummy predicate that returns the item's index\n                    //as value. (If you are using a custom comparator, make sure it can handle this predicate as well.)\n\n                    //i.e. orderBy falls back to index comparison when two states are indicated to be equal (return 0) in a previous comparison\n                    if (state1.type === \"number\" && state2.type === \"number\") {\n                        //if index of state1 is 7 and state2 is 8, 7-8 == -1 indicates state1 is first, 8-7 == 1 indicating state2 is first\n                        return state1.value - state2.value;\n                    }\n\n                    //this sort is done against ALL workflows within a program\n                    //in which case it is possible to have two states with null end dates,\n                    //and that is the exception to when endDate==null indicates sort order clearly\n                    if (!(state1.value.endDate == null && state2.value.endDate == null)) {\n\n                        //ordered so each criteria is evaluated in order (e.g. not all \"prev\" crit. before \"next\" crit. is ever evaluated)\n\n                        // TODO: ** this appears to be doing string comparisons of dates, which is bad **\n                        //null end date prioritized over any other sort criteria\n                        if (state2.value.endDate == null) {\n                            return -1;\n                        } else if (state1.value.endDate == null) {\n                            return 1;\n                            //sort by start date\n                        } else if (new Date(state1.value.startDate) < new Date(state2.value.startDate)) {\n                            return -1;\n                        } else if (new Date(state1.value.startDate) > new Date(state2.value.startDate)) {\n                            return 1;\n                            //sort by end date\n                        } else if (new Date(state1.value.endDate) < new Date(state2.value.endDate)) {\n                            return -1;\n                        } else if (new Date(state1.value.endDate) > new Date(state2.value.endDate)) {\n                            return 1;\n                            //sort by date created\n                        } else if (new Date(state1.value.dateCreated) < new Date(state2.value.dateCreated)) {\n                            return -1;\n                        } else if (new Date(state1.value.dateCreated) > new Date(state2.value.dateCreated)) {\n                            return 1;\n                        }\n                    }\n                    return 0;\n                });\n\n                _angular2.default.forEach(this.patientProgram.states, function (patientState) {\n                    var workflow = _this16.getWorkflowForState(patientState.state);\n\n                    if (workflow != null) {\n                        // TODO: better handle if state can't be matched to workflow, right now we just \"drop\" the state\n                        if (!(workflow.uuid in _this16.sortedStatesByWorkflow)) {\n                            _this16.sortedStatesByWorkflow[workflow.uuid] = [];\n                        }\n\n                        // patient program entity lost information about `startDate` time value (date database type) and it\n                        // causes an issue when the timezone is different than UTC\n                        // that's why we had store start date as the date without\n                        // the time and now we don't want to add timezone offset to that value (and use toUTCDate)\n                        var newEntry = {\n                            startDate: _this16.toUTCDate(patientState.startDate),\n                            dayAfterStartDate: _this16.getNextDay(patientState.startDate),\n                            endDate: _this16.toUTCDate(patientState.endDate),\n                            state: patientState.state,\n                            uuid: patientState.uuid\n                        };\n\n                        _this16.sortedStatesByWorkflow[workflow.uuid].unshift(newEntry); // add to front\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'getMostRecentStateChangeDate',\n        value: function getMostRecentStateChangeDate() {\n            var mostRecentStateChangeDate = null;\n\n            _angular2.default.forEach(this.sortedStatesByWorkflow, function (workflow) {\n                if (workflow.length > 0) {\n                    if (!mostRecentStateChangeDate || workflow[0].startDate > mostRecentStateChangeDate) {\n                        mostRecentStateChangeDate = workflow[0].startDate;\n                    }\n                }\n            });\n\n            return mostRecentStateChangeDate;\n        }\n    }, {\n        key: 'update',\n        value: function update() {\n            this.cancelAllEditModes();\n            this.updatePatientProgram();\n        }\n    }, {\n        key: 'cancelAllEditModes',\n        value: function cancelAllEditModes() {\n            this.edit.enrollment = false;\n            for (var uuid in this.edit.workflow) {\n                this.edit.workflow[uuid] = false;\n            }\n        }\n    }, {\n        key: 'cancelEdit',\n        value: function cancelEdit() {\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n        }\n    }, {\n        key: 'cancelEnrollment',\n        value: function cancelEnrollment() {\n            this.expanded.enrollment = false;\n            this.setInputsToStartingValues();\n        }\n    }, {\n        key: 'cancelDelete',\n        value: function cancelDelete() {\n            this.confirmDelete = {\n                enrollment: false,\n                workflow: {}\n            };\n        }\n    }, {\n        key: 'inConfirmDelete',\n        value: function inConfirmDelete() {\n            if (this.confirmDelete.enrollment === true) {\n                return true;\n            }\n            var result = false;\n            _angular2.default.forEach(this.confirmDelete.workflow, function (value, key) {\n                if (value === true) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'inEditMode',\n        value: function inEditMode() {\n            if (this.edit.enrollment === true) {\n                return true;\n            }\n            var result = false;\n            _angular2.default.forEach(this.edit.workflow, function (value, key) {\n                if (value === true) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'getNextDay',\n        value: function getNextDay(date) {\n            return (0, _moment2.default)(date).add(1, 'days').toDate();\n        }\n    }, {\n        key: 'getPreviousDay',\n        value: function getPreviousDay(date) {\n            return (0, _moment2.default)(date).add(-1, 'days').toDate();\n        }\n    }, {\n        key: 'isToday',\n        value: function isToday(date) {\n            if (!date) {\n                return false;\n            } else {\n                return (0, _moment2.default)(date).isSame((0, _moment2.default)(), 'day');\n            }\n        }\n    }, {\n        key: 'isMostRecentProgram',\n        value: function isMostRecentProgram() {\n            return !this.patientPrograms || this.patientPrograms.length == 0 || !this.patientProgram || this.patientPrograms[0].uuid === this.patientProgram.uuid;\n        }\n\n        // if no program uuid is passed in, this widget will display the active program, or an \"enroll in program\" option if no active program\n\n    }, {\n        key: 'displayActiveProgram',\n        value: function displayActiveProgram() {\n            return this.config.patientProgram ? false : true;\n        }\n    }, {\n        key: 'programIsCompleted',\n        value: function programIsCompleted() {\n            return this.patientProgram && this.patientProgram.dateCompleted ? true : false;\n        }\n    }, {\n        key: 'enrollmentValid',\n        value: function enrollmentValid() {\n            return this.input.enrollmentLocation && this.input.dateEnrolled && ( // must have enrollmentLocation and date enrolled\n            !this.input.dateCompleted || this.input.dateCompleted >= this.input.dateEnrolled) && ( // date completed must be after date enrolled\n            !this.input.dateCompleted && !this.input.outcome || this.input.dateCompleted && this.input.outcome) && ( // if there's a completion date, must specific an outcome (and vice versa)\n            this.isMostRecentProgram() || this.input.dateCompleted) && // must be the most recent program or have a date completed\n            !this.requestInProgress;\n        }\n    }, {\n        key: 'workflowTransitionValid',\n        value: function workflowTransitionValid(workflowUuid) {\n            return this.input.changeToStateByWorkflow[workflowUuid] && this.input.changeToStateByWorkflow[workflowUuid].date && this.input.changeToStateByWorkflow[workflowUuid].state;\n        }\n    }, {\n        key: 'resetWindowStates',\n        value: function resetWindowStates() {\n            // controls the state (open/closed) of the elements to edit enrollment & state information\n            this.edit = {\n                enrollment: false,\n                workflow: {}\n\n                // controls the state (opened/closed) of the expanded view of enrollment & workflows\n            };this.expanded = {\n                enrollment: false,\n                workflow: {}\n\n                // controls whether the \"confirm delete\" message is displayed\n            };this.confirmDelete = {\n                enrollment: false,\n                workflow: {}\n            };\n        }\n    }, {\n        key: 'reloadPage',\n        value: function reloadPage() {\n            this.$window.location.reload();\n        }\n    }, {\n        key: 'dateWithoutTime',\n        value: function dateWithoutTime(date) {\n            return (0, _moment2.default)(date).format('YYYY-MM-DD');\n        }\n    }, {\n        key: 'toUTCDate',\n        value: function toUTCDate(dateString) {\n            var utcDate = null;\n            if (dateString) {\n                utcDate = new Date(dateString);\n                utcDate.setTime(utcDate.getTime() + utcDate.getTimezoneOffset() * 60 * 1000);\n            }\n            return utcDate;\n        }\n    }, {\n        key: 'patientProgramComparator',\n        value: function patientProgramComparator(patientProgram1, patientProgram2) {\n            var dateEnrolled1 = new Date(patientProgram1.value.dateEnrolled);\n            var dateEnrolled2 = new Date(patientProgram2.value.dateEnrolled);\n\n            // first check enrollment dates\n            if (dateEnrolled1 > dateEnrolled2) {\n                return -1;\n            } else if (dateEnrolled1 < dateEnrolled2) {\n                return 1;\n            }\n\n            // if enrollment dates are equal, check completion dates\n            var dateCompleted1 = patientProgram1.value.dateCompleted ? new Date(patientProgram1.value.dateCompleted) : null;\n            var dateCompleted2 = patientProgram2.value.dateCompleted ? new Date(patientProgram2.value.dateCompleted) : null;\n\n            // \"active\" (no completion date) ranks higher\n            // assumption: never should be two active programs (ie both date completed should not be null)\n            if (dateCompleted1 === null) {\n                return -1;\n            } else if (dateCompleted2 === null) {\n                return 1;\n            }\n            // having two programs with the same start date but different end dates should be illegal, but just in case\n            else if (dateCompleted1 > dateCompleted2) {\n                    return -1;\n                } else if (dateCompleted1 < dateCompleted2) {\n                    return 1;\n                }\n\n            // if still equal, fall back to date created\n            // if enrollment dates are equal, check completion dates\n            var dateCreated1 = patientProgram1.value.dateCreated;\n            var dateCreated2 = patientProgram2.value.dateCreated;\n\n            if (dateCreated1 > dateCreated2) {\n                return -1;\n            } else if (dateCreated1 < dateCreated2) {\n                return 1;\n            }\n\n            // and finally, just use uuid, because we need to make sure the sort order is deterministic\n            if (patientProgram1.value.uuid < patientProgram2.value.uuid) {\n                return -1;\n            } else {\n                return 1;\n            }\n        }\n    }]);\n\n    return ProgramStatusController;\n}();\n\nexports.default = ProgramStatusController;\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RelationshipsComponent = undefined;\n\nvar _relationships = __webpack_require__(182);\n\nvar _relationships2 = _interopRequireDefault(_relationships);\n\nvar _relationships3 = __webpack_require__(260);\n\nvar _relationships4 = _interopRequireDefault(_relationships3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar RelationshipsComponent = exports.RelationshipsComponent = {\n    template: _relationships4.default,\n    controller: _relationships2.default,\n    selector: 'relationships',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RelationshipsController = function () {\n    RelationshipsController.$inject = [\"$q\", \"openmrsRest\", \"openmrsTranslate\"];\n    function RelationshipsController($q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, RelationshipsController);\n\n        Object.assign(this, { $q: $q, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(RelationshipsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.minSearchLength = 2;\n            // the default patient page is the clinician dashboard\n            this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}\";\n            this.providerPage = null;\n\n            this.relationships = [];\n            this.types = [];\n            this.allowedTypes = [];\n            this.relationshipType = [];\n            this.hasEditPrivileges = false;\n            this.edit = false;\n            this.removeFlag = false;\n            this.showFindOtherPerson = false;\n            this.showSaveButton = false;\n            this.searchPerson = null;\n            this.otherPerson = null;\n            this.relatedPersons = [];\n\n            this.activate();\n\n            var ctrl = this;\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            var _this = this;\n\n            if (this.config.baseAppPath) {\n                this.openmrsRest.setBaseAppPath(this.config.baseAppPath);\n            } else {\n                this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            }\n\n            if (this.config.dashboardPage) {\n                this.dashboardPage = this.config.dashboardPage;\n            }\n\n            if (this.config.providerPage) {\n                this.providerPage = this.config.providerPage;\n            }\n\n            if (this.config.includeRelationshipTypes) {\n                this.allowedTypes = this.config.includeRelationshipTypes.split(',');\n            }\n\n            //fetchPrivileges\n            this.openmrsRest.get('session', {\n                v: 'custom:(privileges:(name))'\n            }).then(function (response) {\n                _this.getPrivileges(response.user.privileges);\n            }, function (error) {\n                console.log('failed to retrieve user privileges, error: ' + error);\n            });\n\n            //fetchRelationships\n            this.openmrsRest.get('relationship', {\n                person: this.config.patientUuid,\n                limit: this.getMaxRecords(),\n                v: 'custom:(uuid,personA:(uuid,display,personName,birthdate,isPatient,personId),personB:(uuid,display,personName,birthdate,isPatient,personId),relationshipType)'\n            }).then(function (response) {\n                _this.getRelationships(response.results);\n                if (_this.providerPage) {\n                    // if a provider page has been configured then check if there are any providers listed as relationships\n                    _this.checkForProviders();\n                }\n            });\n\n            //fetchRelationshipTypes\n            this.openmrsRest.get('relationshiptype', {\n                v: 'default'\n            }).then(function (response) {\n                _this.getRelationshipTypes(response.results);\n            });\n        }\n    }, {\n        key: 'getRelationships',\n        value: function getRelationships(relationships) {\n            var _this2 = this;\n\n            _angular2.default.forEach(relationships, function (relationship) {\n                var rel = {};\n                rel.uuid = relationship.uuid;\n                rel.isProvider = false;\n                if (relationship.personA.uuid !== _this2.config.patientUuid) {\n                    rel.toPerson = relationship.personA;\n                    rel.isPatient = relationship.personA.isPatient;\n                    rel.type = _angular2.default.isDefined(relationship.relationshipType.displayAIsToB) ? relationship.relationshipType.displayAIsToB : relationship.relationshipType.aIsToB;\n                } else {\n                    rel.toPerson = relationship.personB;\n                    rel.isPatient = relationship.personB.isPatient;\n                    rel.type = _angular2.default.isDefined(relationship.relationshipType.displayBIsToA) ? relationship.relationshipType.displayBIsToA : relationship.relationshipType.bIsToA;\n                }\n                _this2.relationships.push(rel);\n            });\n        }\n    }, {\n        key: 'relationshipsContain',\n        value: function relationshipsContain(personUuid) {\n            var result = false;\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                if (relationship.toPerson.uuid == personUuid) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'getPrivileges',\n        value: function getPrivileges(privileges) {\n            var editPrivilege = this.config.editPrivilege;\n            if (_angular2.default.isDefined(editPrivilege)) {\n                if (_angular2.default.isArray(privileges)) {\n                    if (privileges.some(function (privilege) {\n                        return privilege.name === editPrivilege;\n                    })) {\n                        this.hasEditPrivileges = true;\n                    };\n                }\n            }\n        }\n    }, {\n        key: 'updateProviderInfo',\n        value: function updateProviderInfo(provider) {\n            if (provider) {\n                _angular2.default.forEach(this.relationships, function (relationship) {\n                    if (relationship.toPerson.uuid === provider.person.uuid) {\n                        relationship.isProvider = true;\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'isProvider',\n        value: function isProvider(personUuid, personName) {\n            return this.openmrsRest.get('provider', {\n                q: personName,\n                v: 'custom:(uuid,identifier,display,person:(uuid,personId,display,gender,age,birthdate,birthdateEstimated))'\n            }).then(function (resp) {\n                return resp.results;\n            });\n        }\n    }, {\n        key: 'checkForProviders',\n        value: function checkForProviders() {\n            var _this3 = this;\n\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                _this3.isProvider(relationship.toPerson.uuid, relationship.toPerson.display).then(function (response) {\n                    _angular2.default.forEach(response, function (provider) {\n                        _this3.updateProviderInfo(provider);\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'getPersons',\n        value: function getPersons(searchString) {\n            var _this4 = this;\n\n            this.openmrsRest.get('patient', {\n                q: searchString,\n                v: 'custom:(uuid,display,gender,age)'\n            }).then(function (response) {\n                _this4.relatedPersons = [];\n                _this4.filterSearchedPersons(response.results);\n            });\n        }\n    }, {\n        key: 'filterSearchedPersons',\n        value: function filterSearchedPersons(searchedPersons) {\n            var _this5 = this;\n\n            if (_angular2.default.isArray(searchedPersons) && searchedPersons.length > 0) {\n                _angular2.default.forEach(searchedPersons, function (person) {\n                    if (!_this5.relationshipsContain(person.uuid)) {\n                        // when searching for persons to create new relationships exclude the persons that already have a relationship with this person\n                        _this5.relatedPersons.push(person);\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'getRelationshipTypes',\n        value: function getRelationshipTypes(types) {\n            var _this6 = this;\n\n            _angular2.default.forEach(types, function (type) {\n                if (_this6.allowedTypes.length < 1 || _this6.allowedTypes.length > 0 && _this6.allowedTypes.indexOf(type.uuid) !== -1) {\n                    // if a relationship type filter was not specified then we display all types,\n                    // OR if a filter was defined then we only display the types included in the filter\n                    if (_this6.findRelTypeByName(_angular2.default.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB) == null) {\n                        var relTypeA = {};\n                        relTypeA.uuid = type.uuid;\n                        relTypeA.name = _angular2.default.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB;\n                        relTypeA.type = \"B\";\n                        _this6.types.push(relTypeA);\n                    }\n                    if (_this6.findRelTypeByName(_angular2.default.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA) == null) {\n                        var relTypeB = {};\n                        relTypeB.uuid = type.uuid;\n                        relTypeB.name = _angular2.default.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA;\n                        relTypeB.type = \"A\";\n                        _this6.types.push(relTypeB);\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'updateRelationshipType',\n        value: function updateRelationshipType() {\n            if (_angular2.default.isDefined(this.relationshipType)) {\n                this.showFindOtherPerson = true;\n            }\n        }\n    }, {\n        key: 'findRelTypeByName',\n        value: function findRelTypeByName(value) {\n            var item = null;\n            if (_angular2.default.isDefined(this.types) && this.types.length > 0) {\n                _angular2.default.forEach(this.types, function (type) {\n                    if (type.name == value) {\n                        item = type;\n                    }\n                });\n            }\n            return item;\n        }\n    }, {\n        key: 'getMaxRecords',\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || _angular2.default.isUndefined(this.config.maxRecords)) {\n                return 6;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }, {\n        key: 'navigateTo',\n        value: function navigateTo(personUuid) {\n            var _this7 = this;\n\n            var destinationPage = \"\";\n\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                if (relationship.toPerson.uuid === personUuid) {\n                    if (relationship.isPatient === true) {\n                        if (_this7.dashboardPage) {\n                            destinationPage = Handlebars.compile(_this7.dashboardPage)({\n                                patientUuid: personUuid\n                            });\n                        }\n                    } else if (relationship.isProvider === true) {\n                        if (_this7.providerPage) {\n                            destinationPage = Handlebars.compile(_this7.providerPage)({\n                                personUuid: personUuid\n                            });\n                        }\n                    }\n                }\n            });\n\n            this.openmrsRest.getServerUrl().then(function (url) {\n                window.location.href = url + destinationPage;\n            });\n        }\n    }, {\n        key: 'addRelationship',\n        value: function addRelationship() {\n            this.edit = true;\n        }\n    }, {\n        key: 'save',\n        value: function save() {\n            var _this8 = this;\n\n            if (_angular2.default.isDefined(this.relationshipType) && _angular2.default.isDefined(this.otherPerson)) {\n\n                var personA = null;\n                var personB = null;\n                if (this.relationshipType.type == \"A\") {\n                    personA = this.config.patientUuid;\n                    personB = this.otherPerson.uuid;\n                } else if (this.relationshipType.type == \"B\") {\n                    personA = this.otherPerson.uuid;\n                    personB = this.config.patientUuid;\n                }\n\n                this.openmrsRest.create('relationship', {\n                    relationshipType: this.relationshipType.uuid,\n                    personA: personA,\n                    personB: personB\n                }).then(function (response) {\n                    _this8.$onInit();\n                });\n            }\n        }\n    }, {\n        key: 'removeRelationship',\n        value: function removeRelationship(relUuid) {\n            if (_angular2.default.isDefined(relUuid)) {\n\n                this.removeFlag = true;\n                var tempRelationships = [];\n                _angular2.default.forEach(this.relationships, function (relationship) {\n                    if (relationship.uuid == relUuid) {\n                        tempRelationships.push(relationship);\n                    }\n                });\n                this.relationships = [];\n                this.relationships = tempRelationships;\n            }\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {\n            var _this9 = this;\n\n            if (_angular2.default.isDefined(this.relationships) && this.relationships.length == 1) {\n                //we only allow to delete one relationship at the time\n                this.openmrsRest.remove('relationship', {\n                    uuid: this.relationships[0].uuid\n                }).then(function (response) {\n                    _this9.$onInit();\n                });\n            }\n        }\n    }, {\n        key: 'goTo',\n        value: function goTo(personUuid) {\n            this.navigateTo(personUuid);\n        }\n    }, {\n        key: 'searchPersons',\n        value: function searchPersons() {\n            if (_angular2.default.isDefined(this.searchPerson) && this.searchPerson.length > this.minSearchLength) {\n                this.getPersons(this.searchPerson);\n            }\n        }\n    }, {\n        key: 'onSelect',\n        value: function onSelect($item, $model, $label) {\n            if (_angular2.default.isDefined($item) && _angular2.default.isDefined(this.relationshipType)) {\n                this.otherPerson = $item;\n                this.showSaveButton = true;\n            }\n        }\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            this.edit = false;\n            this.$onInit();\n        }\n    }]);\n\n    return RelationshipsController;\n}();\n\nexports.default = RelationshipsController;\n;\n\n/***/ }),\n\n/***/ 183:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.VisitByEncounterTypeComponent = undefined;\n\nvar _visitbyencountertype = __webpack_require__(184);\n\nvar _visitbyencountertype2 = _interopRequireDefault(_visitbyencountertype);\n\nvar _visitbyencountertype3 = __webpack_require__(261);\n\nvar _visitbyencountertype4 = _interopRequireDefault(_visitbyencountertype3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VisitByEncounterTypeComponent = exports.VisitByEncounterTypeComponent = {\n    template: _visitbyencountertype4.default,\n    controller: _visitbyencountertype2.default,\n    selector: 'visitbyencountertype',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisitByEncounterTypeController = function () {\n    VisitByEncounterTypeController.$inject = [\"openmrsRest\", \"widgetsCommons\", \"openmrsTranslate\"];\n    function VisitByEncounterTypeController(openmrsRest, widgetsCommons, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, VisitByEncounterTypeController);\n\n        Object.assign(this, { openmrsRest: openmrsRest, widgetsCommons: widgetsCommons, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(VisitByEncounterTypeController, [{\n        key: \"$onInit\",\n        value: function $onInit() {\n            var _this = this;\n\n            this.visits = [];\n            this.serverUrl = \"\";\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.openmrsRest.getServerUrl().then(function (result) {\n                _this.serverUrl = result;\n            });\n\n            //fetchVisits\n            this.openmrsRest.get('visit', {\n                patient: this.config.patientUuid,\n                limit: this.getMaxRecords(),\n                fromStartDate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n                v: 'custom:(uuid,startDatetime,stopDatetime,encounters:(uuid,encounterDatetime,encounterType:(uuid,display)))'\n            }).then(function (response) {\n                _this.getVisits(response.results);\n            });\n        }\n    }, {\n        key: \"getVisits\",\n        value: function getVisits(visits) {\n            var _this2 = this;\n\n            angular.forEach(visits, function (visit) {\n                var encounterTypes = [];\n                if (_this2.getCombineEncounterTypes()) {\n                    var vis = { startDatetime: visit.startDatetime, encounterType: '', uuid: visit.uuid };\n                    angular.forEach(visit.encounters, function (encounter) {\n                        if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                            if (vis.encounterType === '') {\n                                vis.encounterType = encounter.encounterType.display;\n                            } else {\n                                vis.encounterType += ', ' + encounter.encounterType.display;\n                            }\n                            encounterTypes.push(encounter.encounterType.display);\n                        }\n                    });\n                    _this2.visits.push(vis);\n                } else {\n                    angular.forEach(visit.encounters, function (encounter) {\n                        if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                            var _vis = { startDatetime: _this2.config.showEncounterDate === 'true' ? encounter.encounterDatetime : visit.startDatetime };\n                            _vis.encounterType = encounter.encounterType.display;\n                            encounterTypes.push(encounter.encounterType.display);\n                            _this2.visits.push(_vis);\n                        }\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"getCombineEncounterTypes\",\n        value: function getCombineEncounterTypes() {\n            if (this.config.combineEncounterTypes === 'false') {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }, {\n        key: \"getMaxRecords\",\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)) {\n                return 6;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }]);\n\n    return VisitByEncounterTypeController;\n}();\n\nexports.default = VisitByEncounterTypeController;\n\n/***/ }),\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./af\": 10,\n\t\"./af.js\": 10,\n\t\"./ar\": 17,\n\t\"./ar-dz\": 11,\n\t\"./ar-dz.js\": 11,\n\t\"./ar-kw\": 12,\n\t\"./ar-kw.js\": 12,\n\t\"./ar-ly\": 13,\n\t\"./ar-ly.js\": 13,\n\t\"./ar-ma\": 14,\n\t\"./ar-ma.js\": 14,\n\t\"./ar-sa\": 15,\n\t\"./ar-sa.js\": 15,\n\t\"./ar-tn\": 16,\n\t\"./ar-tn.js\": 16,\n\t\"./ar.js\": 17,\n\t\"./az\": 18,\n\t\"./az.js\": 18,\n\t\"./be\": 19,\n\t\"./be.js\": 19,\n\t\"./bg\": 20,\n\t\"./bg.js\": 20,\n\t\"./bm\": 21,\n\t\"./bm.js\": 21,\n\t\"./bn\": 22,\n\t\"./bn.js\": 22,\n\t\"./bo\": 23,\n\t\"./bo.js\": 23,\n\t\"./br\": 24,\n\t\"./br.js\": 24,\n\t\"./bs\": 25,\n\t\"./bs.js\": 25,\n\t\"./ca\": 26,\n\t\"./ca.js\": 26,\n\t\"./cs\": 27,\n\t\"./cs.js\": 27,\n\t\"./cv\": 28,\n\t\"./cv.js\": 28,\n\t\"./cy\": 29,\n\t\"./cy.js\": 29,\n\t\"./da\": 30,\n\t\"./da.js\": 30,\n\t\"./de\": 33,\n\t\"./de-at\": 31,\n\t\"./de-at.js\": 31,\n\t\"./de-ch\": 32,\n\t\"./de-ch.js\": 32,\n\t\"./de.js\": 33,\n\t\"./dv\": 34,\n\t\"./dv.js\": 34,\n\t\"./el\": 35,\n\t\"./el.js\": 35,\n\t\"./en-SG\": 36,\n\t\"./en-SG.js\": 36,\n\t\"./en-au\": 37,\n\t\"./en-au.js\": 37,\n\t\"./en-ca\": 38,\n\t\"./en-ca.js\": 38,\n\t\"./en-gb\": 39,\n\t\"./en-gb.js\": 39,\n\t\"./en-ie\": 40,\n\t\"./en-ie.js\": 40,\n\t\"./en-il\": 41,\n\t\"./en-il.js\": 41,\n\t\"./en-nz\": 42,\n\t\"./en-nz.js\": 42,\n\t\"./eo\": 43,\n\t\"./eo.js\": 43,\n\t\"./es\": 46,\n\t\"./es-do\": 44,\n\t\"./es-do.js\": 44,\n\t\"./es-us\": 45,\n\t\"./es-us.js\": 45,\n\t\"./es.js\": 46,\n\t\"./et\": 47,\n\t\"./et.js\": 47,\n\t\"./eu\": 48,\n\t\"./eu.js\": 48,\n\t\"./fa\": 49,\n\t\"./fa.js\": 49,\n\t\"./fi\": 50,\n\t\"./fi.js\": 50,\n\t\"./fo\": 51,\n\t\"./fo.js\": 51,\n\t\"./fr\": 54,\n\t\"./fr-ca\": 52,\n\t\"./fr-ca.js\": 52,\n\t\"./fr-ch\": 53,\n\t\"./fr-ch.js\": 53,\n\t\"./fr.js\": 54,\n\t\"./fy\": 55,\n\t\"./fy.js\": 55,\n\t\"./ga\": 56,\n\t\"./ga.js\": 56,\n\t\"./gd\": 57,\n\t\"./gd.js\": 57,\n\t\"./gl\": 58,\n\t\"./gl.js\": 58,\n\t\"./gom-latn\": 59,\n\t\"./gom-latn.js\": 59,\n\t\"./gu\": 60,\n\t\"./gu.js\": 60,\n\t\"./he\": 61,\n\t\"./he.js\": 61,\n\t\"./hi\": 62,\n\t\"./hi.js\": 62,\n\t\"./hr\": 63,\n\t\"./hr.js\": 63,\n\t\"./hu\": 64,\n\t\"./hu.js\": 64,\n\t\"./hy-am\": 65,\n\t\"./hy-am.js\": 65,\n\t\"./id\": 66,\n\t\"./id.js\": 66,\n\t\"./is\": 67,\n\t\"./is.js\": 67,\n\t\"./it\": 69,\n\t\"./it-ch\": 68,\n\t\"./it-ch.js\": 68,\n\t\"./it.js\": 69,\n\t\"./ja\": 70,\n\t\"./ja.js\": 70,\n\t\"./jv\": 71,\n\t\"./jv.js\": 71,\n\t\"./ka\": 72,\n\t\"./ka.js\": 72,\n\t\"./kk\": 73,\n\t\"./kk.js\": 73,\n\t\"./km\": 74,\n\t\"./km.js\": 74,\n\t\"./kn\": 75,\n\t\"./kn.js\": 75,\n\t\"./ko\": 76,\n\t\"./ko.js\": 76,\n\t\"./ku\": 77,\n\t\"./ku.js\": 77,\n\t\"./ky\": 78,\n\t\"./ky.js\": 78,\n\t\"./lb\": 79,\n\t\"./lb.js\": 79,\n\t\"./lo\": 80,\n\t\"./lo.js\": 80,\n\t\"./lt\": 81,\n\t\"./lt.js\": 81,\n\t\"./lv\": 82,\n\t\"./lv.js\": 82,\n\t\"./me\": 83,\n\t\"./me.js\": 83,\n\t\"./mi\": 84,\n\t\"./mi.js\": 84,\n\t\"./mk\": 85,\n\t\"./mk.js\": 85,\n\t\"./ml\": 86,\n\t\"./ml.js\": 86,\n\t\"./mn\": 87,\n\t\"./mn.js\": 87,\n\t\"./mr\": 88,\n\t\"./mr.js\": 88,\n\t\"./ms\": 90,\n\t\"./ms-my\": 89,\n\t\"./ms-my.js\": 89,\n\t\"./ms.js\": 90,\n\t\"./mt\": 91,\n\t\"./mt.js\": 91,\n\t\"./my\": 92,\n\t\"./my.js\": 92,\n\t\"./nb\": 93,\n\t\"./nb.js\": 93,\n\t\"./ne\": 94,\n\t\"./ne.js\": 94,\n\t\"./nl\": 96,\n\t\"./nl-be\": 95,\n\t\"./nl-be.js\": 95,\n\t\"./nl.js\": 96,\n\t\"./nn\": 97,\n\t\"./nn.js\": 97,\n\t\"./pa-in\": 98,\n\t\"./pa-in.js\": 98,\n\t\"./pl\": 99,\n\t\"./pl.js\": 99,\n\t\"./pt\": 101,\n\t\"./pt-br\": 100,\n\t\"./pt-br.js\": 100,\n\t\"./pt.js\": 101,\n\t\"./ro\": 102,\n\t\"./ro.js\": 102,\n\t\"./ru\": 103,\n\t\"./ru.js\": 103,\n\t\"./sd\": 104,\n\t\"./sd.js\": 104,\n\t\"./se\": 105,\n\t\"./se.js\": 105,\n\t\"./si\": 106,\n\t\"./si.js\": 106,\n\t\"./sk\": 107,\n\t\"./sk.js\": 107,\n\t\"./sl\": 108,\n\t\"./sl.js\": 108,\n\t\"./sq\": 109,\n\t\"./sq.js\": 109,\n\t\"./sr\": 111,\n\t\"./sr-cyrl\": 110,\n\t\"./sr-cyrl.js\": 110,\n\t\"./sr.js\": 111,\n\t\"./ss\": 112,\n\t\"./ss.js\": 112,\n\t\"./sv\": 113,\n\t\"./sv.js\": 113,\n\t\"./sw\": 114,\n\t\"./sw.js\": 114,\n\t\"./ta\": 115,\n\t\"./ta.js\": 115,\n\t\"./te\": 116,\n\t\"./te.js\": 116,\n\t\"./tet\": 117,\n\t\"./tet.js\": 117,\n\t\"./tg\": 118,\n\t\"./tg.js\": 118,\n\t\"./th\": 119,\n\t\"./th.js\": 119,\n\t\"./tl-ph\": 120,\n\t\"./tl-ph.js\": 120,\n\t\"./tlh\": 121,\n\t\"./tlh.js\": 121,\n\t\"./tr\": 122,\n\t\"./tr.js\": 122,\n\t\"./tzl\": 123,\n\t\"./tzl.js\": 123,\n\t\"./tzm\": 125,\n\t\"./tzm-latn\": 124,\n\t\"./tzm-latn.js\": 124,\n\t\"./tzm.js\": 125,\n\t\"./ug-cn\": 126,\n\t\"./ug-cn.js\": 126,\n\t\"./uk\": 127,\n\t\"./uk.js\": 127,\n\t\"./ur\": 128,\n\t\"./ur.js\": 128,\n\t\"./uz\": 130,\n\t\"./uz-latn\": 129,\n\t\"./uz-latn.js\": 129,\n\t\"./uz.js\": 130,\n\t\"./vi\": 131,\n\t\"./vi.js\": 131,\n\t\"./x-pseudo\": 132,\n\t\"./x-pseudo.js\": 132,\n\t\"./yo\": 133,\n\t\"./yo.js\": 133,\n\t\"./zh-cn\": 134,\n\t\"./zh-cn.js\": 134,\n\t\"./zh-hk\": 135,\n\t\"./zh-hk.js\": 135,\n\t\"./zh-tw\": 136,\n\t\"./zh-tw.js\": 136\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 250;\n\n/***/ }),\n\n/***/ 251:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li ng-if=\\\"$ctrl.appointments.length != 0\\\" ng-repeat=\\\"appointment in $ctrl.appointments track by $index\\\">\\n      <div >{{$ctrl.widgetsCommons.formatDate(appointment.date,$ctrl.config.JSDateFormat,$ctrl.config.language)}}   {{appointment.startTime | date:'h:mm a'}} - {{appointment.endTime | date:'h:mm a'}} {{appointment.ServiceType  | translate }}</div>\\n    </li>\\n    <p ng-if=\\\"$ctrl.appointments.length == 0\\\">\\n      {{'coreapps.none' | translate }}\\n    </p>\\n</ul>\"\n\n/***/ }),\n\n/***/ 252:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=\\\"$ctrl.dataViolations.length != 0\\\">\\n    <ul>\\n        <li ng-repeat=\\\"dataViolation in $ctrl.dataViolations\\\">\\n            <div style=\\\"margin: 5px\\\">\\n                <div class=\\\"tag\\\" ng-if=\\\"dataViolation.actionUrl\\\">\\n                    <a style=\\\"color: white\\\" href=\\\"{{$ctrl.serverUrl}}/{{dataViolation.actionUrl}}\\\">\\n                        <strong>\\n                            Fix\\n                        </strong>\\n                    </a>\\n                </div>\\n                <div>\\n                    {{ dataViolation.notes ? dataViolation.notes : dataViolation.rule.ruleName}}\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div ng-if=\\\"$ctrl.dataViolations.length == 0\\\">\\n    None\\n</div>\"\n\n/***/ }),\n\n/***/ 253:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"input-group date\\\">\\n    <!-- TODO: make whether or not form-control-sm class is applied to the input configurable -->\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" readonly=\\\"readonly\\\">\\n    <div class=\\\"input-group-addon\\\">\\n        <span class=\\\"icon-calendar\\\"></span>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 254:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li ng-repeat=\\\"obs in $ctrl.obs\\\">\\n        <div style=\\\"display: block; overflow: hidden; padding-right: 5px; padding-bottom: 2px\\\">\\n            <span style=\\\"float: left\\\">\\n                {{obs.conceptName}}:&nbsp;\\n            </span>\\n            <div ng-if=\\\"obs.groupMembers != null && obs.groupMembers.length > 0\\\">\\n                <span ng-repeat=\\\"member in obs.groupMembers\\\" style=\\\"float: left\\\">\\n                    {{member.prefix}}&nbsp;<strong>{{member.value}}</strong>\\n                    <span ng-if=\\\"$index != (obs.groupMembers.length - 1)\\\">&comma;</span>\\n                </span> \\n            </div>\\n            <span ng-else style=\\\"float: left\\\">\\n                <strong>{{obs.value}}</strong>\\n            </span>\\n            <span style=\\\"float: right; font-size: small; color: #939393\\\">\\n                {{obs.obsDaysAgo}}\\n            </span>\\n        </div>\\n    </li>\\n\\n     <p ng-show=\\\"$ctrl.obs.length == 0\\\">\\n         <span ng-if=\\\"$ctrl.maxAgeInDays != null\\\">\\n             {{ 'coreapps.none.inLastTime' | translate }}  {{$ctrl.maxAgeInDays}}  {{ 'coreapps.days' | translate }}\\n         </span>\\n         <span ng-else>\\n             {{ 'coreapps.none' | translate }}\\n         </span>\\n    </p>\\n</ul>\"\n\n/***/ }),\n\n/***/ 255:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<style>\\n    #obsTable {\\n        table-layout: auto;\\n        display: block;\\n        overflow-x: auto;\\n    }\\n\\n    .column-header {\\n        text-align: center;\\n        font-size: small;\\n        word-wrap: break-word;\\n    }\\n\\n    .retiredConcept {\\n        color: gray;\\n        font-style: italic;\\n    }\\n\\n    ::-webkit-scrollbar {\\n        -webkit-appearance: none;\\n        height: 5px;\\n    }\\n\\n    ::-webkit-scrollbar-thumb {\\n        border-radius: 4px;\\n        background-color: rgba(0, 0, 0, .5);\\n        -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n    }\\n\\n</style>\\n\\n<table id=\\\"obsTable\\\" ng-if=\\\"$ctrl.simpleEncs.length != 0\\\">\\n    <thead>\\n        <tr ng-if=\\\"$ctrl.output.headers.length != 0\\\">\\n            <th ng-repeat=\\\"column in $ctrl.output.headers track by $index\\\" class=\\\"column-header\\\">{{ column | translate }}</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr ng-repeat=\\\"row in $ctrl.output.rows\\\">\\n            <td ng-repeat=\\\"cell in row\\\" ng-class=\\\"cell.className\\\">\\n                <span ng-if=\\\"!$ctrl.isArray(cell)\\\">\\n                    {{ cell.translate ? (cell.value | translate) : cell.value }}\\n                </span>\\n                <span ng-if=\\\"$ctrl.isArray(cell)\\\" ng-repeat=\\\"cellElem in cell\\\">\\n                    <span ng-class=\\\"cellElem.className\\\">{{ cellElem.translate ? (cellElem.value | translate) : cellElem.value }}{{ $last ? '' : ',&nbsp;' }}</span>\\n                </span>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<p ng-show=\\\"$ctrl.output.encs.length == 0\\\">\\n         <span ng-if=\\\"$ctrl.output.maxAgeInDays != null\\\">\\n             {{ 'coreapps.none.inLastTime' | translate }}  {{$ctrl.output.maxAgeInDays}}  {{ 'coreapps.days' | translate }}\\n         </span>\\n    <span ng-else>\\n             {{ 'coreapps.none' | translate }}\\n         </span>\\n</p>\\n\"\n\n/***/ }),\n\n/***/ 256:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=\\\"$ctrl.data.length > 0\\\" >\\n    <canvas class=\\\"chart chart-line\\\" chart-data=\\\"$ctrl.data\\\" chart-labels=\\\"$ctrl.labels\\\"\\n            chart-series=\\\"$ctrl.series\\\" chart-options=\\\"$ctrl.options\\\"></canvas>\\n</div>\\n<div ng-show=\\\"$ctrl.data.length == 0\\\">\\n    <div style=\\\"padding-bottom: 10px; word-break: break-word;\\\">\\n        <strong>\\n            {{$ctrl.series.join(\\\", \\\")}}\\n        </strong>\\n    </div>\\n    <span>\\n    {{ 'coreapps.none.inLastTime' | translate }}  {{$ctrl.maxAgeInDays}}  {{ 'coreapps.days' | translate }}\\n    </span>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 257:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- NOTE: work-in-progress, consider this not yet an \\\"official\\\" release of this widgets, future changes may not be backwards-compatible and change functionality signficantly -->\\n\\n<!-- TODO move styles to separate file? -->\\n\\n<style>\\n    #cancel-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n\\n    #enroll-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n</style>\\n<ul>\\n    <li ng-show=\\\"$ctrl.patientPrograms.length != 0\\\" ng-repeat=\\\"patientProgram in $ctrl.patientPrograms | orderBy: '-dateEnrolled'\\\">\\n        <!-- href=\\\"#\\\" included so bootstrap will style this as a link -->\\n        <a href=\\\"#\\\" ng-click=\\\"$ctrl.gotoProgramDashboard($event, patientProgram.program.uuid)\\\">\\n            {{ patientProgram.program.display }}\\n        </a>\\n\\n        <div ng-show=\\\"!patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ $ctrl.widgetsCommons.formatDate(patientProgram.dateEnrolled,$ctrl.config.JSDateFormat,$ctrl.config.language) }} - {{'coreapps.dashboardwidgets.programs.current' | translate }}</div>\\n        <div ng-show=\\\"patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ $ctrl.widgetsCommons.formatDate(patientProgram.dateEnrolled,$ctrl.config.JSDateFormat,$ctrl.config.language) }} - {{ $ctrl.widgetsCommons.formatDate(patientProgram.dateCompleted,$ctrl.config.JSDateFormat,$ctrl.config.language) }}</div>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.patientPrograms.length == 0\\\">\\n        {{'coreapps.none' | translate }}\\n    </li>\\n\\n</ul>\\n\\n\\n<div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.showAddProgram && $ctrl.config.enableProgramDashboards && $ctrl.unenrolledPrograms && $ctrl.unenrolledPrograms.length > 0\\\">\\n    <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addProgram()\\\">\\n        <i class=\\\"icon-plus-sign\\\" title=\\\"{{'coreapps.dashboardwidgets.programs.addProgram' | translate }}\\\"/>\\n    </a>\\n</div>\\n\\n<div ng-show=\\\"$ctrl.showAddProgram\\\">\\n    <div>\\n        <select  ng-model=\\\"$ctrl.input.program\\\"\\n                 ng-options=\\\"program.uuid as program.display for program in $ctrl.unenrolledPrograms\\\">\\n            <option value=\\\"\\\">{{'coreapps.dashboardwidgets.programs.selectProgram' | translate }}:</option>\\n        </select>\\n        <br/>\\n    </div>\\n    <div>\\n        <button id=\\\"enroll-button\\\" class=\\\"confirm\\\" ng-click=\\\"$ctrl.gotoProgramDashboard($event)\\\">{{'coreapps.enroll' | translate }}</button>\\n        <button id=\\\"cancel-button\\\" class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelAddProgram()\\\">{{'coreapps.cancel' | translate }}</button>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 258:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.currentlyEnrolled' | translate }}: {{  $ctrl.currentlyEnrolled != null ? $ctrl.currentlyEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.everEnrolled' | translate }}: {{  $ctrl.everEnrolled != null ? $ctrl.everEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n</ul>\"\n\n/***/ }),\n\n/***/ 259:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- TODO: move css to separate file? the the \\\"workflow-header\\\" is a super hack, should be fixed by someone who understands css bettter -->\\n<!-- input-group-addon is to fix alignment of calendar icons on date pickers -->\\n\\n<style>\\n\\n    .input-group-addon {\\n        display: inline-block;;\\n    }\\n\\n    input {\\n        width: 80%\\n    }\\n\\n    .programstatus-fieldset, .programstatus-field {\\n        padding-top: 2px;\\n        padding-bottom: 2px;\\n    }\\n\\n    .workflow-section {\\n        padding-top: 5px;\\n    }\\n\\n    .workflow-table {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n        background: #f9f9f9 !important;\\n    }\\n\\n    .workflow-header  {\\n        width: 100% !important;\\n        text-align: left !important;\\n    }\\n\\n    .workflow-cell {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n    }\\n\\n    .hidden {\\n        visibility: hidden;\\n    }\\n\\n    .center {\\n        margin-left: 0px;\\n        margin-right: 0px;\\n        text-align: center;\\n    }\\n\\n    .bold {\\n        font-weight: bold;\\n    }\\n\\n</style>\\n\\n<div ng-show=\\\"$ctrl.deleted\\\">\\n    {{ 'coreapps.dashboardwidgets.programstatus.programDeleted' | translate }}\\n</div>\\n\\n<div ng-show=\\\"$ctrl.loaded && !$ctrl.deleted\\\">\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && $ctrl.expanded.enrollment\\\">\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentdate' | translate }}</h3>\\n\\t\\t\\t<p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.today\\\"/>\\n            </p>\\n        </fieldset>\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentlocation' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select class=\\\"form-control form-control-sm\\\"\\n                        ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                        ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n        <div ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <fieldset class=\\\"programstatus-fieldset\\\">\\n                <h3>{{ workflow.concept.display }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select class=\\\"form-control form-control-sm\\\" ng-model=\\\"$ctrl.input.initialWorkflowStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isInitialState() | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.enrollInProgram()\\\">{{'coreapps.enroll' | translate }}</button>\\n            <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEnrollment()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && !$ctrl.expanded.enrollment\\\">\\n        <div class=\\\"center\\\">\\n            {{ 'coreapps.dashboardwidgets.programstatus.notCurrentlyEnrolled' | translate }}\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.expanded.enrollment = true\\\">{{'coreapps.enroll' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.patientProgram\\\">\\n\\n        <!-- VIEW sections -->\\n\\n        <fieldset  class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <i ng-show=\\\"$ctrl.canDeleteProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\" class=\\\"icon-remove right\\\"/>\\n            <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.toggleEditEnrollment()\\\" class=\\\"icon-pencil right\\\"/>\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.widgetsCommons.formatDate($ctrl.patientProgram.dateEnrolled,$ctrl.config.JSDateFormat,$ctrl.config.language) }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\"  ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.location.display }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.widgetsCommons.formatDate($ctrl.patientProgram.dateCompleted,$ctrl.config.JSDateFormat,$ctrl.config.language) }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && !$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.outcome.display }}</p>\\n        </fieldset>\\n\\n        <!-- EDIT sections -->\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.input.dateCompleted ? $ctrl.input.dateCompleted : $ctrl.today\\\"\\n                                    language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select class=\\\"form-control form-control-sm\\\" ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                    ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateCompleted\\\"\\n                                format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                start-date=\\\"$ctrl.getMostRecentStateChangeDate() ? $ctrl.getMostRecentStateChangeDate() : $ctrl.input.dateEnrolled\\\"\\n                                end-date=\\\"$ctrl.maxCompletionDate ? $ctrl.maxCompletionDate : $ctrl.today\\\"\\n                                clear-btn=\\\"true\\\"\\n                                language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && $ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select class=\\\"form-control form-control-sm\\\" ng-model=\\\"$ctrl.input.outcome\\\"\\n                    ng-options=\\\"outcome.uuid as outcome.display for outcome in $ctrl.programOutcomes | orderBy: 'display' \\\">\\n                    <option value=\\\"\\\"></option>\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <div ng-show=\\\"$ctrl.edit.enrollment\\\" class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.update()\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEdit()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- DELETE confirmation section -->\\n\\n        <div ng-show=\\\"$ctrl.confirmDelete.enrollment\\\" class=\\\"center\\\">\\n            {{'coreapps.dashboardwidgets.programstatus.confirmDelete' | translate }}\\n            <br/><br/>\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- workflow sections -->\\n\\n        <div class=\\\"workflow-section\\\" ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <!-- TODO review the use of the \\\"isToday\\\" functionality -->\\n            <h3 class=\\\"workflow-header\\\">{{ workflow.concept.display }}\\n                <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete() && !$ctrl.isToday($ctrl.sortedStatesByWorkflow[workflow.uuid].startDate)\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\" class=\\\"icon-pencil\\\"/>\\n            </h3>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.dashboardwidgets.programstatus.transitionTo' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select class=\\\"form-control form-control-sm\\\" ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isNotCurrentState(workflow) | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.on' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <openmrs-datepicker ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].date\\\"\\n                                        format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                        start-date=\\\"$ctrl.sortedStatesByWorkflow[workflow.uuid] ? $ctrl.sortedStatesByWorkflow[workflow.uuid][0].dayAfterStartDate : $ctrl.input.dateEnrolled\\\"\\n                                        end-date=\\\"$ctrl.programIsCompleted() ? $ctrl.patientProgram.dateCompleted : $ctrl.today\\\"\\n                                        language=\\\"{{$ctrl.language}}\\\"/>\\n                </p>\\n            </fieldset>\\n\\n            <div ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.workflowTransitionValid(workflow.uuid)\\\" ng-click=\\\"$ctrl.updatePatientState(workflow.uuid)\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n            <table class=\\\"workflow-table\\\">\\n                <tr ng-repeat=\\\"row in $ctrl.sortedStatesByWorkflow[workflow.uuid]\\\" ng-show=\\\"$first || $ctrl.expanded.workflow[workflow.uuid]\\\">\\n                    <td class=\\\"workflow-cell\\\">\\n                        {{ row.startDate | date:$ctrl.dateFormat }}\\n                        <span ng-show=\\\"!$first\\\">{{'coreapps.to' | translate}} {{ row.endDate | date:$ctrl.dateFormat }} </span>\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\" ng-class=\\\"{bold:$first}\\\">\\n                        {{ row.state.concept.display }}\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\">\\n                        <i ng-show=\\\"$first && $ctrl.canEditProgram  && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" class=\\\"icon-remove right\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"!$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showMore' | translate }}</a>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showLess' | translate }}</a>\\n                    </td>\\n                </tr>\\n            </table>\\n\\n            <!-- DELETE  workflow confirmation section -->\\n\\n            <div ng-show=\\\"$ctrl.confirmDelete.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                {{'coreapps.dashboardwidgets.programstatus.confirmWorkflowStateDelete' | translate }}\\n                <br/><br/>\\n                <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n        </div>\\n\\n\\n\\n    </div>\\n\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li class=\\\"relationship-li\\\" ng-show=\\\"$ctrl.relationships.length != 0\\\" ng-repeat=\\\"relationship in $ctrl.relationships track by $index\\\">\\n        <div class=\\\"relationship-wrapper\\\">\\n            <div class=\\\"fifty-percent relationship-inner\\\">\\n                <span>\\n                    <a ng-show=\\\"relationship.isPatient || relationship.isProvider\\\" ng-click=\\\"$ctrl.goTo(relationship.toPerson.uuid)\\\">\\n                        {{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}\\n                    </a>\\n                    <span ng-show=\\\"!relationship.isPatient && !relationship.isProvider\\\">{{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}</span>\\n                </span>\\n            </div>\\n            <div class=\\\"tag forty-percent relationship-inner\\\">\\n                <span ng-show=\\\"$ctrl.hasEditPrivileges == true && $ctrl.removeFlag == false && $ctrl.edit == false\\\" class=\\\"remove-tag\\\">\\n                    <a ng-show=\\\"relationship.isPatient\\\" class=\\\"remove-link\\\" ng-click=\\\"$ctrl.removeRelationship(relationship.uuid)\\\">\\n                        <i class=\\\"icon-remove\\\" title=\\\"Remove relationship\\\"></i>\\n                    </a>\\n                </span>\\n                {{ relationship.type | translate }}\\n            </div>\\n        </div>\\n    </li>\\n    <p ng-show=\\\"$ctrl.relationships.length == 0\\\">\\n        {{ 'coreapps.none' | translate }}\\n    </p>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.confirmRemove' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.hasEditPrivileges && !$ctrl.edit && !$ctrl.removeFlag\\\">\\n        <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addRelationship()\\\">\\n            <i class=\\\"icon-plus-sign\\\" title=\\\"Add relationship\\\"></i>\\n        </a>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.add' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p class=\\\"left\\\">\\n        <select class=\\\"relationship-input\\\" ng-options=\\\"type.name | translate for type in $ctrl.types\\\"\\n                ng-model=\\\"$ctrl.relationshipType\\\" ng-change=\\\"$ctrl.updateRelationshipType()\\\">\\n            <option value=\\\"\\\">{{ 'coreapps.dashboardwidgets.relationships.whatType' | translate }}</option>\\n        </select>\\n\\n        </p>\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        &nbsp;\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        <p class=\\\"left\\\">\\n            <input type=\\\"text\\\" class=\\\"person-typeahead relationship-input\\\" placeholder=\\\"{{ 'coreapps.relationships.find' | translate }} {{ $ctrl.relationshipType.name | translate}}\\\"\\n                   ng-model=\\\"$ctrl.searchPerson\\\"\\n                   typeahead-no-results=\\\"noResults\\\"\\n                   ng-change=\\\"$ctrl.searchPersons()\\\"\\n                   uib-typeahead=\\\"person as person.display + ' (' + person.gender + ', ' + (person.age ? person.age:'') + ')' for person in $ctrl.relatedPersons\\\"\\n                   typeahead-wait-ms=\\\"250\\\"\\n                   typeahead-select-on-exact=\\\"true\\\"\\n                   typeahead-min-length=\\\"3\\\"\\n                   typeahead-on-select=\\\"$ctrl.onSelect($item, $model, $label)\\\"\\n                   />\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-show=\\\"$ctrl.showSaveButton\\\" ng-click=\\\"$ctrl.save()\\\">{{ 'coreapps.save' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-click=\\\"$ctrl.remove()\\\">{{ 'coreapps.delete' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n</ul>\"\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li ng-if=\\\"$ctrl.visits.length != 0\\\" ng-repeat=\\\"visit in $ctrl.visits track by $index\\\">\\n        <a href=\\\"{{$ctrl.serverUrl}}/coreapps/patientdashboard/patientDashboard.page?patientId={{$ctrl.config.patientUuid}}&visitId={{visit.uuid}}\\\">\\n            {{$ctrl.widgetsCommons.formatDate(visit.startDatetime,$ctrl.config.JSDateFormat,$ctrl.config.language)}}\\n        </a>\\n        <div class=\\\"tag\\\" ng-if=\\\"visit.encounterType !== ''\\\">{{visit.encounterType | translate }}</div>\\n    </li>\\n    <p ng-if=\\\"$ctrl.visits.length == 0\\\">\\n        {{ 'coreapps.none' | translate }}\\n    </p>\\n</ul>\"\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _dashboardwidgetscommons = __webpack_require__(161);\n\nvar _dashboardwidgetscommons2 = _interopRequireDefault(_dashboardwidgetscommons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar services = _angular2.default.module('dashboardwidgets.services', []);\n\nservices.service('widgetsCommons', _dashboardwidgetscommons2.default);\n\nexports.default = services.name;\n\n/***/ })\n\n},[168]);\n});\n\n\n// WEBPACK FOOTER //\n// coreapps.dashboardwidgets.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\n\nimport { BahmniAppointmentsComponent } from './bahmniappointments.component';\n\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.appointments\", [ openmrsApi, commons , openmrsTranslate])\n\t.component(BahmniAppointmentsComponent.selector, BahmniAppointmentsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/bahmniappointments/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport { DatatIntegrityViolationsComponent } from './dataintegrityviolations.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.dataintegrityviolations\", [ openmrsApi ])\n\t.component(DatatIntegrityViolationsComponent.selector, DatatIntegrityViolationsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\nimport { LatestObsForConceptListComponent } from './latestobsforconceptlist.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.latestobsforconceptlist\", [ openmrsApi, commons ])\n\t.component(LatestObsForConceptListComponent.selector, LatestObsForConceptListComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\n\nimport { ObsAcrossEncountersComponent } from './obsacrossencounters.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.obsacrossencounters\", [ openmrsApi, openmrsTranslate, commons ])\n\t.component(ObsAcrossEncountersComponent.selector, ObsAcrossEncountersComponent).name;\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport chartjs from 'angular-chart.js';\nimport commons from './../dashboardwidgets.services';\n\nimport { ObsGraphComponent } from './obsgraph.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.obsgraph\", [openmrsApi, openmrsTranslate, commons, chartjs])\n\t.component(ObsGraphComponent.selector, ObsGraphComponent)\n\t.config(['ChartJsProvider', function (ChartJsProvider) {\n\t\tChartJsProvider.setOptions({\n\t\t\tchartColors: ['#00463f', '#bf4f44', \"#567fad\"],\n          \tspanGaps: true,\n\t\t\telements: {\n\t\t\t\tline: {\n\t\t\t\t\ttension: 0\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}]).name;\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\n\nimport { ProgramsComponent } from './programs.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programs\", [ openmrsApi, openmrsTranslate, commons ])\n\t.component(ProgramsComponent.selector, ProgramsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\n\nimport { ProgramStatisticsComponent } from './programstatistics.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programstatistics\", [ openmrsApi, openmrsTranslate ])\n    .component(ProgramStatisticsComponent.selector, ProgramStatisticsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport datepicker from './../datepicker';\nimport commons from './../dashboardwidgets.services';\n\nimport { ProgramStatusComponent } from './programstatus.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programstatus\", [ openmrsApi, datepicker, openmrsTranslate, commons ])\n\t.component(ProgramStatusComponent.selector, ProgramStatusComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport typeahead from 'angular-ui-bootstrap/src/typeahead';\n\nimport { RelationshipsComponent } from './relationships.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.relationships\", [ openmrsApi, typeahead, openmrsTranslate ])\n\t.component(RelationshipsComponent.selector, RelationshipsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\n\nimport { VisitByEncounterTypeComponent } from './visitbyencountertype.component';\n\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.visitbyencountertype\", [ openmrsApi, commons , openmrsTranslate])\n\t.component(VisitByEncounterTypeComponent.selector, VisitByEncounterTypeComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/index.js","import BahmniAppointmentsController from './bahmniappointments.controller';\nimport template from './bahmniappointments.html';\n\nexport let BahmniAppointmentsComponent = {\n    template,\n    controller: BahmniAppointmentsController,\n    selector: 'bahmniappointments',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.component.js","export default class BahmniAppointmentsController {\n    constructor(openmrsRest, widgetsCommons, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, { openmrsRest, widgetsCommons, openmrsTranslate });\n    }\n\n    $onInit() {\n        //innitialise\n        this.appointments = [];\n        this.serverUrl = \"\";\n        this.startDate = new Date();\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.openmrsRest.getServerUrl().then((result) => {\n            this.serverUrl = result;\n        });\n        //overiding default 'POST method' configurations\n        let methodConfig = {\n            url: '/appointments/search',\n            actions: { save: { method: 'POST', isArray: true } }\n        }\n\n        this.openmrsRest.create(methodConfig, {\n            patientUuid: this.config.patientUuid,\n            startDate: this.startDate,\n            limit: this.config.maxRecords\n        }).then((response) => {\n            this.getAppointments(response);\n        })\n    }\n\n    getAppointments(appointments) {\n        if (appointments.length > 0) {\n            angular.forEach(appointments, (appointment) => {\n                    let appointmentDetails = {\n                        date: appointment.startDateTime,\n                        startTime: appointment.startDateTime,\n                        endTime: appointment.endDateTime,\n                        ServiceType: appointment.service.name\n                    };\n                    this.appointments.push(appointmentDetails);\n            })\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.controller.js","import moment from 'moment';\n\nexport default class WidgetsCommons {\n\n    // Method used to define days since given date and return it as message\n    dateToDaysAgoMessage(date) {\n        let days = this.dateToDaysAgo(date);\n\n        if (days == 0) {\n            return \"today\"\n        }\n        else if (days == 1) {\n            return days + \" day ago\"\n        }\n        else {\n            return days + \" days ago\"\n        }\n    };\n\n    //Number of days since the given date\n    daysSinceDate(date) {\n        let days = 0;\n        if (date !== null) {\n            let givenDate = new Date(date).setHours(0,0,0,0);\n            let today = new Date().setHours(0,0,0,0);\n            let seconds = Math.floor((today - givenDate) / 1000);\n            days = Math.floor(seconds / 86400);\n        }\n\n        return days;\n    };\n\n    // Method used to define days since given date\n    dateToDaysAgo(date) {\n        const time = new Date(date).getTime();\n        const seconds = Math.floor((new Date().getTime() - time) / 1000);\n        const interval = Math.floor(seconds / 86400);\n        let days = 0;\n        if (interval > 0) {\n            days = interval;\n        }\n        return days;\n    };\n\n    // Method used to parse maxAge to day count\n    maxAgeToDays(maxAge) {\n        if (typeof maxAge === 'undefined') {\n            return undefined;\n        } else {\n            let days = 0;\n            const values = maxAge.split(\" \");\n            for (const value of values) {\n                if (value.includes(\"d\")) {\n                    days += parseInt(value.replace(\"d\", \"\"));\n                }\n                if (value.includes(\"w\")) {\n                    days += parseInt(value.replace(\"w\", \"\")) * 7;\n                }\n                if (value.includes(\"m\")) {\n                    days += parseInt(value.replace(\"m\", \"\")) * 30;\n                }\n                if (value.includes(\"y\")) {\n                    days += parseInt(value.replace(\"y\", \"\")) * 365;\n                }\n            }\n            return days;\n        }\n    };\n\n    maxAgeToDate(maxAge) {\n        if(typeof maxAge === 'undefined')\n            return null;\n\n        var today = new Date();\n        if( maxAge.indexOf('d') !== -1 ){\n            maxAge = maxAge.replace('d', '');\n            today.setDate(today.getDate()-parseInt(maxAge));\n        } else if( maxAge.indexOf('w') !== -1 ){\n            maxAge = maxAge.replace('w', '');\n            today.setDate(today.getDate()-(parseInt(maxAge)*7));\n        } else if( maxAge.indexOf('m') !== -1 ){\n            maxAge = maxAge.replace('m', '');\n            today.setMonth(today.getMonth()-parseInt(maxAge));\n        } else if( maxAge.indexOf('y') !== -1 ){\n            maxAge = maxAge.replace('y', '');\n            today.setFullYear(today.getFullYear()-(parseInt(maxAge)));\n        } else {\n            return null;\n        }\n        return today;\n    };\n\n    /**\n     * Returns the most appropriate name given a concept and a name type preference\n     *\n     * @param {object} concept Must have rep including `display,names:(voided,locale,conceptNameType,localePreferred,name)`\n     * @param {string} nameType One of \"FSN\", \"shortName\", \"preferred\"\n     * @param {string} locale The preferred locale\n     */\n    getConceptName(concept, nameType, locale) {\n        const names = concept.names.filter(n => !n.voided && n.locale === locale);\n        const fsn = names.filter(n => n.conceptNameType === \"FULLY_SPECIFIED\")[0];\n        const short = names.filter(n => n.conceptNameType === \"SHORT\")[0];\n        const shortEn = concept.names.filter(n => !n.voided && n.locale === 'en' && n.conceptNameType === \"SHORT\")[0];\n        const preferred = names.filter(n => n.localePreferred)[0];\n        let resultName;\n        if (nameType === \"FSN\") {\n            resultName = fsn || preferred;\n        } else if (nameType === \"shortName\") {\n            resultName = short || shortEn;\n        } else if (nameType === \"preferred\") {\n            resultName = preferred;\n        }\n        return resultName ? resultName.name : concept.display;\n    }\n\n    hasDatatypeDateOrSimilar(concept) {\n        return concept.datatype && ['8d4a505e-c2cc-11de-8d13-0010c6dffd0f',\n            '8d4a591e-c2cc-11de-8d13-0010c6dffd0f',\n            '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].includes(concept.datatype.uuid)\n    }\n\n    hasDatatypeCoded(concept) {\n        return concept.datatype && concept.datatype.uuid === \"8d4a48b6-c2cc-11de-8d13-0010c6dffd0f\";\n    }\n\n    // use as `isDrug(obs.value)`\n    isDrug(obj) {\n        return Boolean(obj.concept);\n    }\n\n    /**\n     * Returns date translated according to preferred locale when Date Format displays the month as an abbreviation (MMM).\n     * Ex: Date: 02-Jan-2021 Format: DD-MMM-YYYY Locale: fr --> Return: 02-janv.-2021\n     *\n     * @param {object} date Input Date\n     * @param {string} format Date Format\n     * @param {string} locale The preferred locale\n     */\n    formatDate(date, format, locale) {\n        try{\n            moment.locale(locale);\n            return moment(date).format(format);\n        } catch(err) {\n            return moment(date).format(\"DD.MMM.YYYY\");\n        }\n    }\n\n    /**\n     * Returns date and time translated according to preferred locale.\n     * Ex: Date: 02-Jan-2021 15:10 Format: DD.MMM.YYYY HH:mm Locale: fr --> Return: 02-janv.-2021 15:10\n     *\n     * @param {object} date Input Datetime\n     * @param {string} format Date Format\n     * @param {string} locale The preferred locale\n     */\n    formatDateTime(date, format, locale) {\n        try{\n            moment.locale(locale);\n            return moment(date).format(format);\n        } catch(err) {\n            return moment(date).format(\"DD.MMM.YYYY HH:mm\");\n        }\n    }\n\n    /**\n     * Return true if the user has the System Developer role\n     *\n     * @param user\n     * @returns {*}\n     */\n    isSystemDeveloper(user){\n        return user.roles.some( (p) => { return p.name === 'System Developer'; });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dashboardwidgetscommons.service.js","import DataIntegrityViolationsController from './dataintegrityviolations.controller';\nimport template from './dataintegrityviolations.html';\n\nexport let DatatIntegrityViolationsComponent = {\n    template,\n    controller: DataIntegrityViolationsController,\n    selector: 'dataintegrityviolations',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.component.js","export default class DataIntegrityViolationsController {\n    constructor (openmrsRest) {\n        'ngInject';\n\n        Object.assign(this, { openmrsRest });\n    }\n\n    $onInit() {\n        this.dataViolations = [];\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.openmrsRest.getServerUrl().then((result) => {\n            this.serverUrl = result;\n        });\n\n        // Set default maxResults if not defined\n        if (angular.isUndefined(this.config.maxResults)) {\n            this.config.maxResults = 6;\n        }\n\n        this.openmrsRest.list('dataintegrity/integrityresults', { patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults }).then((resp) => {\n            for (let index = 0; index < resp.results.length; index++) {\n                this.dataViolations.push(resp.results[index]);\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.controller.js","import controller from './datepicker.controller';\nimport template from './datepicker.html';\n\nexport let DatepickerComponent = {\n    template,\n    controller,\n    selector: 'openmrsDatepicker',\n    bindings: {\n        ngModel: '=',\n        format: '@',\n        language: '@',\n        startDate: '<',\n        endDate: '<',\n        clearBtn: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/datepicker.component.js","import angular from 'angular';\n\nexport default class DatepickerController  {\n    constructor($document, $element, $scope, $filter, $timeout, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, { $document, $element, $scope, $filter, $timeout, openmrsTranslate });\n    }\n\n    $onInit() {\n        this.$document.ready(() => {\n            this.openmrsTranslate.getLanguage().then((language) => {\n                $(this.$element).datepicker({\n                    format: this.convertDateFormat(this.format),\n                    autoclose: true,\n                    container: \"html\",\n                    language:  language,\n                    clearBtn: this.clearBtn\n                }).on(\"changeDate\", (e) => {\n                    if (e.date != null) {\n                        if (this.ngModel == null || this.stripTime(this.ngModel).getTime() !== this.stripTime(e.date).getTime()) {\n                            //apply changes if not triggered by the watch\n                            this.$scope.$apply(() => {\n                                this.ngModel = this.stripTime(e.date);\n                            });\n                        }\n                    }\n                    // clear out if necessary if set to null and model isn't null\n                    else if (this.ngModel != null) {\n                        this.$timeout(() => {\n                            this.ngModel = null;\n                        })\n                    }\n                });\n\n                this.$scope.$watch(() => { return this.ngModel; },\n                    (value) => { this.updateDates(); }\n                );\n\n                this.$scope.$watch(() => { return this.startDate; },\n                    (value) => { this.updateDates(); }\n                );\n                \n                this.$scope.$watch(() => { return this.endDate; },\n                    (value) => { this.updateDates(); }\n                )\n            });\n        });\n    }\n\n    updateDates() {\n        //I need to update all at once due to a bug in the datepicker, which resets the selected date.\n        $(this.$element).datepicker(\"setStartDate\", this.stripTime(this.startDate));\n        $(this.$element).datepicker(\"setEndDate\", this.stripTime(this.endDate));\n        $(this.$element).datepicker(\"setDate\", this.stripTime(this.ngModel));\n    }\n\n    stripTime(date) {\n        if (date == null) {\n            return null;\n        } else {\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        }\n    }\n\n    convertDateFormat(dateFormat) {\n        let mappings = {\n            \"MMMM\": \"MM\",\n            \"MMM\": \"M\",\n            \"MM\": \"mm\",\n            \"M\": \"m\",\n            \"yyyy\": \"yy\",\n            \"yy\": \"y\",\n            'EEEE': 'DD',\n            'EEE': 'D'\n        };\n\n        let regex = \"\";\n        for (let mapping in mappings) {\n            regex = regex + mapping + '|';\n        }\n        regex = regex.substring(0, regex.length - 1);\n\n        dateFormat = dateFormat.replace(new RegExp(regex, \"g\"), (match) => {\n            if (mappings[match]) {\n                return mappings[match];\n            } else {\n                return match;\n            }\n        });\n        return dateFormat;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/datepicker.controller.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport 'bootstrap-datepicker';\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker.standalone.css';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ar.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.az.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bg.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bn.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.br.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bs.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ca.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.cs.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.cy.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.da.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.de.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.el.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.eo.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.es.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.et.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.eu.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fa.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fi.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fo.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.gl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.he.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hi.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hu.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hy.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.id.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.is.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.it.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ja.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ka.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.km.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ko.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.lt.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.lv.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.me.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.mk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.mn.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ms.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.nb.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.nl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.no.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.oc.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.pl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.pt.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ro.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ru.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.si.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sq.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sv.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sw.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ta.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.tg.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.th.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.tr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.uk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.vi.min.js';\nimport './locales/bootstrap-datepicker.ht.js';\n\nimport { DatepickerComponent } from './datepicker.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.datepicker\", [openmrsApi])\n\t.component(DatepickerComponent.selector, DatepickerComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/index.js","/**\n * Creole translation for bootstrap-datetimepicker>\n * (Not provided by standard npm install of bootstrap-datepicker)\n */\n(function($){\n    $.fn.datepicker.dates['ht'] = {\n        days: [\"dimanch\", \"lendi\", \"madi\", \"mèkredi\", \"jedi\", \"vandredi\", \"samdi\"],\n        daysShort: [\"dim\", \"len\", \"mad\", \"mek\", \"jed\", \"van\", \"sam\" ],\n        daysMin: [\"d\", \"l\", \"ma\", \"me\", \"j\", \"v\", \"s\", \"d\"],\n        months: [\"janvye\", \"fevriye\", \"mas\", \"avril\", \"me\", \"jen\", \"jiyè\", \"out\", \"septanm\", \"oktòb\", \"novanm\", \"desanm\"],\n        monthsShort: [\"jan\", \"fev\", \"mas\", \"avr\", \"me\", \"jen\", \"jiy\", \"out\", \"sep\", \"okt\", \"nov\", \"des\"],\n        today: \"Jodi a\",\n        suffix: [],\n        meridiem: [\"am\", \"pm\"],\n        weekStart: 1,\n        format: \"dd/mm/yyyy\"\n    };\n}(jQuery));\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/locales/bootstrap-datepicker.ht.js","import angular from 'angular';\n\nimport DataIntegrityViolations from './dataintegrityviolations';\nimport LatestObsForConceptList from './latestobsforconceptlist';\nimport ObsAcrossEncounters from './obsacrossencounters';\nimport ObsGraph from './obsgraph';\nimport Programs from './programs';\nimport ProgramStatistics from './programstatistics';\nimport ProgramStatus from './programstatus';\nimport Relationships from './relationships';\nimport VisitByEncounterType from './visitbyencountertype';\nimport BahmniAppointments from './bahmniappointments';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets\", [ DataIntegrityViolations, LatestObsForConceptList,\n    ObsAcrossEncounters, ObsGraph, Programs, ProgramStatistics, ProgramStatus, Relationships, VisitByEncounterType ,BahmniAppointments]).name;\n\n\nangular.element(document).ready(function() {\n    for (var dashboardwidget of document.getElementsByClassName('openmrs-contrib-dashboardwidgets')) {\n        angular.bootstrap(dashboardwidget, [ 'openmrs-contrib-dashboardwidgets' ]);\n    }\n});\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/index.js","import LatestObsForConceptListController from './latestobsforconceptlist.controller';\nimport template from './latestobsforconceptlist.html';\n\nexport let LatestObsForConceptListComponent = {\n    template,\n    controller: LatestObsForConceptListController,\n    selector: 'latestobsforconceptlist',\n\tscope: {},\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.component.js","export default class LatestObsForConceptListController {\n    constructor($filter, openmrsRest, widgetsCommons , openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, openmrsTranslate, widgetsCommons });\n    }\n\n    $onInit() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n        // Fetch last obs or obsGroup for the list of concepts\n        return this.openmrsRest.list('latestobs', {\n            patient: this.config.patientUuid,\n            v: 'custom:(' +\n                'obsDatetime,' +\n                'concept:(uuid,display,datatype:(uuid),names:(name,locale,localePreferred,voided,conceptNameType)),' +\n                'value:(uuid,display,names:(name,locale,localePreferred,voided,conceptNameType)),' +\n                'groupMembers:(value,concept:(display,names:(name,locale,localePreferred,voided,conceptNameType))))',\n            concept: this.config.concepts.split(',').map(c => c.trim()).join(','),\n            nLatestObs: this.config.nLatestObs || 1\n        }).then((resp) => {\n            // Process the results from the list of concepts as not all of them may have data\n            this.obs = resp.results.filter(\n                // Don't add obs older than maxAge\n                obs => angular.isUndefined(this.maxAgeInDays) || this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= this.maxAgeInDays\n            ).map(inputObs => {\n                const displayObs = { obsDaysAgo: this.widgetsCommons.dateToDaysAgoMessage(inputObs.obsDatetime) };\n                displayObs.conceptName = this.widgetsCommons.getConceptName(inputObs.concept, this.config.conceptNameType, this.config.locale);\n                if (inputObs.groupMembers) { // If obs is obs group\n                    displayObs.groupMembers = inputObs.groupMembers.map(member => {\n                        const prefix = [\"FSN\", \"shortName\", \"preferred\"].includes(this.config.obsGroupLabels) ?\n                            \"(\" + this.widgetsCommons.getConceptName(member.concept, this.config.obsGroupLabels, this.config.locale) + \") \" : \"\";\n                        const value = this.getObsValue(member);\n                        return { \"prefix\": prefix, \"value\": value };\n                    });\n                } else {\n                    displayObs.value = this.getObsValue(inputObs);\n                }\n                return displayObs;\n            });\n        });\n    }\n\n    getObsValue(obs) {\n        if (this.widgetsCommons.hasDatatypeDateOrSimilar(obs.concept)) {\n            return this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n        } else if (this.widgetsCommons.hasDatatypeCoded(obs.concept)) {\n            return this.widgetsCommons.getConceptName(obs.value, this.config.conceptNameType, this.config.locale);\n        } else {\n            return obs.value.display || obs.value;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.controller.js","import ObsAcrossEncountersController from './obsacrossencounters.controller';\nimport template from './obsacrossencounters.html';\n\nexport let ObsAcrossEncountersComponent = {\n    template,\n    controller: ObsAcrossEncountersController,\n    selector: 'obsacrossencounters',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.component.js","export default class ObsAcrossEncountersController {\n  constructor($q, $filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n    'ngInject';\n\n    Object.assign(this, {$q, $filter, openmrsRest, openmrsTranslate, widgetsCommons});\n  }\n\n  $onInit() {\n    this.sessionLocale = null;\n    this.CONCEPT_CUSTOM_REP = 'custom:(uuid,display,names:(voided,locale,conceptNameType,localePreferred,name)';\n    this.conceptsMap = {};  // a map of conceptUUID --> concept(REST response)\n    this.simpleEncs = [];\n    this.headers = [];\n    this.openmrsRest.setBaseAppPath(\"/coreapps\");\n    this.isArray = angular.isArray;\n\n    this.output = {\n      headers: [],\n      rows: [],\n      maxAgeInDays: this.widgetsCommons.maxAgeToDays(this.config.maxAge)\n    }\n\n    return Promise.all([\n        this.fetchSessionInfo(),\n        this.fetchConcepts(),\n        this.fetchEncounters()\n    ]).then(() => this.formatOutput());\n  }\n\n  fetchSessionInfo() {\n    this.openmrsRest.get(\"session?\", {\n      v: \"ref\"\n    }).then((session) => {\n      this.sessionLocale = session.locale;\n    }, function(error) {\n       console.error(`failed to retrieve session info, error: ${error}`)\n    });\n  }\n\n  fetchConcepts() {\n    let conceptKeys = this.config.concepts.split(\",\").map(c => c.trim());\n    return Promise.all(conceptKeys.map((key) => (\n      this.openmrsRest.get(\"concept/\" + key, {\n        v: this.CONCEPT_CUSTOM_REP\n      }).then((concept) => {\n        // update the concept map with the REST representation of the concept\n        concept.display = this.widgetsCommons.getConceptName(concept, \"shortName\", this.sessionLocale);\n        this.conceptsMap[concept.uuid] = concept;\n      })\n    )));\n  }\n\n  fetchEncounters() {\n    const encounterTypes = this.config.encounterTypes ? this.config.encounterTypes.split(',').map(c => c.trim()) : [];\n    const legacyEncounterTypes = this.config.encounterType ? this.config.encounterType.split(',').map(c => c.trim()) : [];\n    encounterTypes.push(...legacyEncounterTypes);\n\n    const encounterQueryParams = {\n      patient: this.config.patientUuid,\n      v: 'custom:(uuid,encounterDatetime,encounterProviders:(uuid,provider:(uuid,name)),encounterType:(name,description),obs:(id,uuid,value,concept:(id,uuid,name:(display),datatype:(uuid)),groupMembers:(id,uuid,display,value,concept:(id,uuid,name:(display),datatype:(uuid))))',\n      limit: this.config.maxRecords || 4,\n      fromdate: this.widgetsCommons.maxAgeToDate(this.config.maxAge)\n    };\n    const encounterPromises = encounterTypes.length ? encounterTypes.map(e =>\n      this.openmrsRest.get(\"encounter\",\n          Object.assign({ encounterType: e }, encounterQueryParams)).then(response => response.results))\n    : [this.openmrsRest.get(\"encounter\",\n          Object.assign({ encounterType: '' }, encounterQueryParams)  // `encounterType: ''` is required to prevent a 400 error\n      ).then(response => response.results)];\n\n    return Promise.all(encounterPromises).then((encounterSets) => (\n      Promise.all(encounterSets.map(encounterSet => this.addToSimpleEncs(encounterSet)))\n    ));\n  }\n\n  formatOutput() {\n    this.output.headers = this.config.headers ? this.config.headers.split(\",\") : [];\n    if (this.output.headers.length === 0) {\n      if (this.config.showEncounterTypeName) {\n        this.output.headers.push('coreapps.patientDashBoard.encounter');\n      }\n      if (this.config.showEncounterProviderName) {\n        this.output.headers.push('coreapps.patientDashBoard.provider');\n      }\n      this.output.headers.push('coreapps.date');\n      for (const concept of Object.values(this.conceptsMap)) {\n        this.output.headers.push(concept.display);\n      }\n    }\n\n    this.output.rows = [];\n    let encounterDateToDisplay;\n    let providersNameToDisplay;\n    const sortedEncs = this.simpleEncs.sort((a, b) => a.encounterDatetime - b.encounterDatetime);\n    for (let i = 0; i < sortedEncs.length; i++) {\n      encounterDateToDisplay = \"\";\n      providersNameToDisplay = \"\";\n      const encounter = sortedEncs[i]\n      const row = [];\n      this.output.rows.push(row);\n      if (this.config.showEncounterTypeName) {\n        row.push({ value: encounter.encounterType, translate: true });\n      }\n\n      if (this.config.showEncounterProviderName) {\n        encounter.encounterProviders.map((element , index) => {\n          providersNameToDisplay += element.provider.name;\n          if(index != (encounter.encounterProviders.length - 1)){\n            providersNameToDisplay +=  \", \"\n          }\n        });\n        row.push({ value: providersNameToDisplay , translate: false });\n      }\n      if (this.config.showDateWithTime) {\n         encounterDateToDisplay = this.widgetsCommons.formatDateTime(\n            encounter.encounterDatetime,\n            this.config.JSDateTimeFormat,\n            this.config.language);\n      } else {\n        encounterDateToDisplay = this.widgetsCommons.formatDate(\n            encounter.encounterDatetime,\n            this.config.JSDateFormat,\n            this.config.language);\n      }\n        row.push({\n          value: encounterDateToDisplay\n        });\n\n      for (let uuid of Object.keys(this.conceptsMap)) {\n        let obsArray = [];\n        if (encounter.obs[uuid]) {\n          for (let obs of encounter.obs[uuid]) {\n            obsArray.push({\n              value: (obs ? this.getObsValue(obs) : '') || '',\n              className: this.isRetired(obs) ? 'retiredConcept' : ''\n            });\n          }\n        } else {\n          obsArray.push({\n            value: ''\n          });\n        }\n        row.push(obsArray);\n      }\n    }\n  }\n\n  isRetired(obs) {\n    return Boolean(obs && obs.value && obs.value.retired);\n  }\n\n  // `obs` must *not* be an obsGroup\n  getObsValue(obs) {\n    if (this.widgetsCommons.hasDatatypeDateOrSimilar(obs.concept)) {\n        return this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n    } else if (this.widgetsCommons.isDrug(obs.value)) {\n        return this.config.useConceptNameForDrugValues ? obs.value.concept.display : obs.value.display\n    } else {\n        return obs.value.display || obs.value;\n    }\n  }\n\n  addToSimpleEncs(encounters) {\n    const resultPromises = []\n    for (let encounter of encounters) {\n      const conceptKeys = Object.keys(this.conceptsMap);\n      // all normal concepts will go in one row\n      const foundObsByUuid = {};\n      for (let obs of encounter.obs) {\n        // if it's a group, add a row for each member matching one of the concepts\n        if (obs.groupMembers) {\n          const foundMembers = obs.groupMembers.filter(member => conceptKeys.includes(member.concept.uuid));\n          if (foundMembers.length) {\n            const foundMembersByUuid = {};\n            for (let m of foundMembers) {\n              if (!foundMembersByUuid[m.concept.uuid]) {\n                foundMembersByUuid[m.concept.uuid] = [];\n              }\n              foundMembersByUuid[m.concept.uuid].push(m);\n            }\n            this.simpleEncs.push({\n              encounterType: encounter.encounterType.name,\n              encounterDatetime: encounter.encounterDatetime,\n              encounterProviders: encounter.encounterProviders,\n              obs: foundMembersByUuid\n            });\n          }\n        } else // otherwise, add the obs value (if it matches one of our concepts)\n          if (conceptKeys.includes(obs.concept.uuid)) {\n            if (!foundObsByUuid[obs.concept.uuid]) {\n              foundObsByUuid[obs.concept.uuid] = [];\n            }\n            foundObsByUuid[obs.concept.uuid].push(obs);\n        }\n      }\n      if (Object.keys(foundObsByUuid).length > 0) {\n        this.simpleEncs.push({\n          encounterType: encounter.encounterType.name,\n          encounterDatetime: encounter.encounterDatetime,\n          encounterProviders: encounter.encounterProviders,\n          obs: foundObsByUuid\n        });\n      }\n      // if the widget was configured to display the obs concept SHORT name instead of the default obs.value.display value\n      // By default, the widget displays the obs.value.display property\n      if (this.config.useConceptShortName) {\n        resultPromises.push(this.updateWithConceptShortNames(this.simpleEncs));\n      }\n    }\n    return Promise.all(resultPromises);\n  }\n\n  /**\n   * Sets all obs coded concept values and drug value concepts to use the short name\n   * @param encounters\n   */\n  updateWithConceptShortNames(encounters) {\n    const resultPromises = [];\n    for (let encounter of encounters) {\n      for (let obsArray of Object.values(encounter.obs)) {\n        for (let obs of obsArray) {\n          if (this.widgetsCommons.isDrug(obs.value)) {\n            resultPromises.push(this.updateWithShortName(obs.value.concept));\n          } else if (this.widgetsCommons.hasDatatypeCoded(obs.concept)) {\n            resultPromises.push(this.updateWithShortName(obs.value));\n          }\n        }\n      }\n    }\n    return resultPromises;\n  }\n\n  updateWithShortName(concept) {\n    return this.openmrsRest.get(\"concept/\" + concept.uuid, {\n      v: this.CONCEPT_CUSTOM_REP\n    }).then((conceptRes) => {\n      concept.display = this.widgetsCommons.getConceptName(conceptRes, \"shortName\", this.sessionLocale);\n    }).catch(err => console.error(`failed to retrieve concept ${conceptUuid}, ${err}`));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.controller.js","import ObsGraphController from './obsgraph.controller';\nimport template from './obsgraph.html';\n\nexport let ObsGraphComponent = {\n    template,\n    controller: ObsGraphController,\n    selector: 'obsgraph',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.component.js","export default class ObsGraphController {\n    constructor( $q, $filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, { $q, $filter, openmrsRest, openmrsTranslate, widgetsCommons});\n    }\n\n    $onInit() {\n\n        var self = this;\n        self.xAxis = {};\n        // Max age of obs to display\n        this.maxAgeInDays = undefined;\n        this.conceptRep = \"custom:(uuid,display,name:(display),datatype:(uuid,display))\";\n        this.customRep=\"custom:(uuid,display,obsDatetime,value,encounter:(encounterType),concept:(uuid,display,name:(display),datatype:(uuid,display)))\";\n\n        // Chart data\n        this.series = [];\n        this.labels = [];\n        this.data = [];\n        this.legend = [];\n\n        this.dataset = [];\n        /* Here is an example of the structure of this array of objects\n          [\n            {\n              \"uuid\": \"3ce93b62-26fe-102b-80cb-0017a47871b2\",\n              \"display\": \"Weight (kg)\",\n              \"values\": {\n                \"9\": 70, // the key indicates how many days ago this obs value was recorded\n                \"10\": 70.5,\n                \"133\": 75,\n                \"235\": 63,\n                \"324\": 65.9,\n                \"996\": 100\n              }\n            },\n            {\n              \"uuid\": \"3ce93cf2-26fe-102b-80cb-0017a47871b2\",\n              \"display\": \"Height (cm)\",\n              \"values\": {\n                \"9\": 170.2,\n                \"10\": 165.1,\n                \"133\": 165.1,\n                \"235\": 110,\n                \"324\": 153.4\n              }\n            }\n          ]\n\n         */\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n\n\n        this.FunctionManager = {\n          bmi: function( height, weight ){\n            //add height and weight to the list of concepts whose obs should be retrieved\n            if (arguments && arguments.length > 0) {\n              for (let i=0; i < arguments.length; i++) {\n                let foundValue = self.conceptArray.find(element => element.uuid === arguments[i]);\n                if (self.conceptArray && (typeof foundValue === 'undefined')) {\n                  self.conceptArray.push({\n                    uuid: arguments[i],\n                    type: \"obs\",\n                    legend: false\n                  });\n                }\n              }\n              self.conceptArray.push({\n                uuid: null,\n                type: \"function\",\n                legend: true,\n                function: [\"calculateBmi\", height, weight]\n              });\n            }\n            return true;\n          },\n          calculateBmi: function(height, weight) {\n            if (height && weight) {\n              let heightDataset = self.dataset.find(element => element.uuid === height);\n              let weightDataset = self.dataset.find(element => element.uuid === weight);\n              if (heightDataset && weightDataset) {\n                let xAxisKeys = self.getXAxisKeys();\n                if (xAxisKeys !== null && xAxisKeys.length > 0) {\n                  let tempData = [];\n                  for (let k = 0; k < xAxisKeys.length; k++) {\n                    let heightValue = parseInt(heightDataset.values[xAxisKeys[k]]);\n                    let weightValue = parseInt(weightDataset.values[xAxisKeys[k]]);\n                    let yValue = null;\n                    if ((typeof heightValue !== undefined) && (heightValue !== null) && ( typeof weightValue !== undefined ) && (weightValue !== null)) {\n                      yValue = (( weightValue / heightValue / heightValue) * 10000 ).toFixed(1);\n                    }\n                    tempData.push(yValue);\n                  }\n                  self.series.push(\"BMI\");\n                  self.data.push(tempData);\n                }\n              }\n            }\n            return null;\n          },\n          execute: function ( name ) {\n            return self.FunctionManager[name] && self.FunctionManager[name].apply(self.FunctionManager, [].slice.call(arguments, 1));\n          }\n        };\n\n\n        // order the X Axis values from the oldest obs date the the most recent obs date\n        this.orderXAxis = function() {\n          let xAxisKeys = this.getXAxisKeys();\n          if (xAxisKeys !== null && xAxisKeys.length > 0) {\n            for (let k = 0; k < xAxisKeys.length; k++) {\n              this.labels.push(this.xAxis[xAxisKeys[k]]);\n            }\n          }\n\n        };\n\n        this.updateChartData = function() {\n          if (angular.isDefined(this.dataset) && this.dataset.length > 0) {\n            let xAxisKeys = this.getXAxisKeys();\n            if (xAxisKeys !== null && xAxisKeys.length > 0) {\n              for (let j=0; j < this.conceptArray.length; j++) {\n                let concept = this.conceptArray[j];\n                if( this.hideConcepts !== undefined && this.hideConcepts.length && this.hideConcepts.includes(concept.uuid)) {\n                  //if it was indicated that this concept should not be plotted, than skip to the next concept\n                  continue;\n                }\n                if (concept.legend === true) {\n                  if (concept.uuid && concept.type === \"obs\") {\n                    let obj = this.dataset.find(element => element.uuid === concept.uuid);\n                      if (angular.isDefined(obj) && obj !== null && angular.isDefined(obj.values) && obj.values !== null && (Object.keys(obj.values)).length > 0) {\n                        // if this concept has any obs values\n                        let tempData = [];\n                        for (let k = 0; k < xAxisKeys.length; k++) {\n                          let yValue = obj.values[xAxisKeys[k]];\n                          // all Y arrays of data need to have the same number of values\n                          // fill with null the missing values\n                          if (angular.isUndefined(yValue) || yValue == null) {\n                            yValue = null;\n                          }\n                          tempData.push(yValue);\n                        }\n                        this.data.push(tempData);\n                      } else {\n                        //Removing series without corresponding data points\n                        let index = this.series.indexOf(concept.display);\n                        if (index >= 0) {\n                          this.series.splice(index, 1);\n                        }\n                      }\n                  } else if (concept.type === \"function\" && concept.function) {\n                    this.FunctionManager.execute(...concept.function);\n                  }\n                }\n              }\n            }\n          }\n\n        };\n\n        this.getConceptNames = function() {\n          let promises = [];\n          if (this.conceptArray !== null && this.conceptArray.length > 0) {\n            for (let i = 0; i < this.conceptArray.length; i++) {\n              if (this.conceptArray[i].uuid) {\n                let promisedObs = this.openmrsRest.get('concept/' + this.conceptArray[i].uuid, {\n                  v: this.conceptRep\n                }).then(function (concept) {\n                  return concept;\n                });\n                promises.push(promisedObs);\n              }\n            }\n          }\n          return this.$q.all(promises).then(function(concepts) {\n            for (let i=0; i < self.conceptArray.length; i++) {\n              let concept = self.conceptArray[i];\n              if (concept.legend === true) {\n                let serverConcept = concepts.find(element => element.uuid === concept.uuid);\n                if (serverConcept && serverConcept.display) {\n                  self.series.push(serverConcept.display);\n                  self.conceptArray[i].display = serverConcept.display;\n                }\n              }\n            }\n          });\n\n        };\n\n        this.getAllObs = function() {\n          let promises = [];\n          if (this.conceptArray !== null && this.conceptArray.length > 0) {\n            for (let i = 0; i < this.conceptArray.length; i++) {\n              if (this.conceptArray[i].uuid) {\n                let promisedObs = this.openmrsRest.list('obs', {\n                  patient: this.config.patientUuid,\n                  v: this.customRep,\n                  limit: this.config.maxResults,\n                  concept: this.conceptArray[i].uuid\n                }).then(function (response) {\n                  return response.results;\n                });\n                promises.push(promisedObs);\n              }\n            }\n          }\n          return this.$q.all(promises).then(function(data) {\n            let isEncounterTypeNotAllowed = function (encounterType) {\n              return angular.isDefined(self.encounterTypes) &&\n                self.encounterTypes.indexOf(encounterType) < 0;\n            };\n            let getEncounterType = function(observation) {\n              if(angular.isUndefined(observation)){\n                return null;\n              }\n              return observation.encounter.encounterType.uuid;\n            }\n\n            for (let j=0; j< data.length; j++) {\n              let conceptObject = {};\n\n              let obsArray = data[j];\n              if (obsArray.length > 0) {\n                //we have at least one observation\n                conceptObject.uuid = obsArray[0].concept.uuid;\n                conceptObject.display = obsArray[0].concept.display;\n                conceptObject.values = {};\n                for (let k = 0; k < obsArray.length; k++) {\n                  let obs = obsArray[k];\n                  //Skip obs if encounter type does not match (only when encounter type specified in config)\n                  if (isEncounterTypeNotAllowed(getEncounterType(obs))) {\n                    continue;\n                  }\n\n                  if (obs.concept.datatype.display == 'Numeric') {\n                    // Don't add obs older than maxAge\n                    let xValue = self.widgetsCommons.daysSinceDate(obs.obsDatetime);\n                    if (angular.isUndefined(self.maxAgeInDays) || xValue <= self.maxAgeInDays) {\n                      // Add obs data for chart display\n                      var obsDate = self.widgetsCommons.formatDate(obs.obsDatetime, self.config.JSDateFormat, self.config.language);\n                      conceptObject.values[xValue] = obs.value;\n                      self.xAxis[xValue] = obsDate;\n                    }\n                  }\n                }\n              }\n              self.dataset.push(conceptObject);\n            }\n            self.orderXAxis();\n          });\n      };\n\n      this.getConfig();\n\n      const getConceptNamesPromise = this.getConceptNames();\n      const getAllObsPromise = this.getAllObs();\n\n      this.$q.all([getConceptNamesPromise, getAllObsPromise]).then(function(){\n        self.updateChartData();\n      });\n    }\n\n    getConfig() {\n      // Set default maxResults if not defined\n      if (angular.isUndefined(this.config.maxResults)) {\n        this.config.maxResults = 4;\n      }\n      // Parse maxAge to day count\n      this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n      if(angular.isDefined(this.config.encounterTypes)) {\n        this.encounterTypes = this.config.encounterTypes.replace(/ /gi, \"\").split(\",\");\n      }\n\n      // Set default showLegend to true if not defined\n      if (angular.isUndefined(this.config.showLegend)) {\n        this.config.showLegend = true;\n      }\n\n      if(angular.isDefined(this.config.hideConcepts)) {\n        this.hideConcepts = this.config.hideConcepts.replace(/ /gi, \"\").split(\",\");\n      }\n\n      this.options = {\n        legend: {\n          display: this.config.showLegend,\n          position: 'top'\n        },\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              type: 'linear',\n              display: true,\n              position: 'left'\n            }\n          ]\n        }\n      };\n\n      if (this.config.type && this.config.type === 'logarithmic') {\n        this.options.scales.yAxes[0] = {\n          id: 'y-axis-1',\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n          ticks: {\n            callback: function (value, index, values) {\n              if (value.length) {\n                return Number(value).toLocaleString();\n              }\n              return value;\n            },\n            autoSkip: true,\n            maxTicksLimit: 5\n          }\n          };\n      }\n      // Parse the comma delimited concept UUIDs into an array\n      // First, remove all whitespaces from the input string\n      let tempArray = this.config.conceptId.replace(/ /gi, \"\").split(\",\");\n\n      this.conceptArray = tempArray.map(function(concept) {\n        return {\n          uuid: concept,\n          type: \"obs\",\n          legend: true,\n          display: ''\n        };\n      });\n\n      if (this.config.function && this.config.function.length > 0) {\n        this.parseFunctionConfig(this.config.function)\n      }\n    }\n\n    parseFunctionConfig(fns){\n      if (fns) {\n        // remove empty spaces\n        let fnsArray = fns.replace(/ /gi, \"\").split(\";\");\n        if (angular.isDefined(fnsArray) && fnsArray !== null && fnsArray.length > 0 ) {\n          for (let i=0; i < fnsArray.length; i++) {\n            let params = fnsArray[i];\n            if (params && params.length > 0) {\n              let line = params.substring(\n                params.indexOf(\"(\") + 1,\n                params.indexOf(\")\")\n              );\n              if(line && line.length > 0) {\n                let paramsArray = line.split(\",\");\n                if (paramsArray && paramsArray.length > 0) {\n                  this.FunctionManager.execute(...paramsArray);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    getXAxisKeys() {\n      let keys = null;\n      if (angular.isDefined(this.xAxis) && this.xAxis) {\n        keys = Object.keys(this.xAxis);\n        if (keys && keys.length > 0) {\n          keys.sort(function (a, b) {\n            return parseInt(b) - parseInt(a);\n          });\n        }\n      }\n      return keys;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nimport ProgramsController from './programs.controller';\nimport template from './programs.html';\n\nexport let ProgramsComponent = {\n    template,\n    controller: ProgramsController,\n    selector: 'programs',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/programs.component.js","\nimport angular from 'angular';\n\nexport default class ProgramsController {\n\n    constructor($filter, openmrsRest, openmrsTranslate, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, openmrsTranslate, widgetsCommons});\n    }\n\n    $onInit() {\n        // the default patient page is the clinician dashboard\n        this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}&dashboard={{dashboard}}\";\n\n        this.programs = [];\n\n        this.unenrolledPrograms = [];\n\n        this.patientPrograms= [];\n\n        this.showAddProgram = false;\n\n        this.canEnrollInProgram = false;\n\n        this.input = {\n            program: \"\"\n        };\n\n        // TODO did this work?\n        this.dateFormat = (this.config.dateFormat == '' || angular.isUndefined(this.config.dateFormat))\n            ? 'yyyy-MM-dd' : this.config.dateFormat;\n\n        this.supportedPrograms = [];\n\n        if (this.config.supportedPrograms) {\n            this.supportedPrograms = this.config.supportedPrograms.split(',');\n        }\n\n        this.activate();\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        if(this.config.dashboardPage) {\n            this.dashboardPage = this.config.dashboardPage;\n        }\n\n        this.fetchPrivileges();\n\n        this.fetchPrograms()\n            .then(this.fetchPatientPrograms.bind(this))\n            .then(this.determineUnenrolledPrograms.bind(this));\n    }\n\n    fetchPrivileges() {\n        this.openmrsRest.get('session', {\n            v: 'custom:(privileges:(name))'\n        }).then((response) => {\n            if (response && response.user && angular.isArray(response.user.privileges)) {\n                if (this.widgetsCommons.isSystemDeveloper(response.user)) {\n                    this.canEnrollInProgram = true;\n                }else if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.enrollInProgram'; })) {\n                    this.canEnrollInProgram = true;\n                };\n            }\n        }, function(error) {\n          console.log(`failed to retrieve user privileges, error: ${error}`);\n        });\n    }\n\n    fetchPrograms() {\n        return this.openmrsRest.get('program', {\n            v: 'custom:display,uuid'\n        }).then((response) => {\n            this.getPrograms(response.results)\n        });\n    }\n\n    fetchPatientPrograms() {\n        return this.openmrsRest.get('programenrollment', {\n            patient: this.config.patientUuid,\n            voided: false,\n            limit: this.getMaxRecords(),\n            v: 'custom:program:(uuid,display),dateEnrolled,dateCompleted'\n        }).then((response) => {\n            this.getPatientPrograms(response.results);\n        });\n    }\n\n    getPrograms(programs) {\n        angular.forEach(programs, (program) => {\n            // filter out any unsupported programs\n            if (this.supportedPrograms.length == 0 || this.supportedPrograms.indexOf(program.uuid) != -1) {\n                this.programs.push(program)\n            }\n        });\n    }\n\n    getPatientPrograms(patientPrograms) {\n        this.patientPrograms = [];\n        angular.forEach(patientPrograms, (patientProgram) => {\n            // filter out any unsupported programs\n            if (this.supportedPrograms.length == 0 || this.supportedPrograms.indexOf(patientProgram.program.uuid) != -1) {\n                this.patientPrograms.push(patientProgram);\n            }\n        });\n    }\n\n    getMaxRecords() {\n        if (this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)) {\n            return 20;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n\n    determineUnenrolledPrograms() {\n        let activeProgramsUuids = [];\n        angular.forEach(this.patientPrograms, (patientProgram) => {\n            if (!patientProgram.dateCompleted) {\n                activeProgramsUuids.push(patientProgram.program.uuid)\n            }\n        });\n\n        this.unenrolledPrograms = this.$filter('filter')(this.programs, (program) => {\n            return activeProgramsUuids.indexOf(program.uuid) == -1\n        });\n    }\n\n    addProgram() {\n        this.showAddProgram = true;\n    }\n\n    cancelAddProgram() {\n        this.showAddProgram = false;\n        this.input.program = \"\";\n    }\n\n   gotoProgramDashboard(event, programUuid) {\n\n        programUuid = programUuid || this.input.program;\n        if (programUuid && this.config.enableProgramDashboards) {\n            var destinationPage = \"\";\n            destinationPage = Handlebars.compile(this.dashboardPage)({\n                patientUuid: this.config.patientUuid,\n                dashboard: programUuid\n            });\n            this.openmrsRest.getServerUrl().then((url) => {\n                const target = url + destinationPage;\n                console.log(event);\n                if (!event.metaKey && !event.ctrlKey && !event.shiftKey) {\n                    window.location.href = target;\n                } else {\n                    window.open(target, '_blank');\n                }\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/programs.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nimport ProgramStatisticsController from './programstatistics.controller';\nimport template from './programstatistics.html';\n\nexport let ProgramStatisticsComponent = {\n    template,\n    controller: ProgramStatisticsController,\n    selector: 'programstatistics',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.component.js","import angular from 'angular';\n\nexport default class ProgramStatisticsController {\n\n    constructor($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, openmrsTranslate});\n    }\n\n    $onInit() {\n        this.activate();\n        let ctrl = this;\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.getEverEnrolledInProgram();\n        this.getCurrentlyEnrolledInProgram();\n    }\n\n    getEverEnrolledInProgram() {\n        return this.openmrsRest.get('reportingrest/cohort', {\n            v: \"ref\",\n            uuid: 'reporting.library.cohortDefinition.builtIn.patientsWithEnrollment',\n            programs: [this.config.program]\n        }).then((response) => {\n            this.everEnrolled = (response && 'count' in response ? response.count : this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error'));\n        });\n    }\n\n    getCurrentlyEnrolledInProgram() {\n        return this.openmrsRest.get('reportingrest/cohort', {\n            v: \"ref\",\n            uuid: 'reporting.library.cohortDefinition.builtIn.patientsInProgram',\n            programs: [this.config.program],\n            onDate: new Date\n        }).then((response) => {\n            this.currentlyEnrolled = (response && 'count' in response  ? response.count : this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error'));\n    });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when complete\n\n\nimport controller from './programstatus.controller';\nimport template from './programstatus.html';\n\nexport let ProgramStatusComponent = {\n    template,\n    controller,\n    selector: 'programstatus',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/programstatus.component.js","\nimport angular from 'angular';\nimport moment from 'moment';\n\nexport default class ProgramStatusController {\n\n    // TODO add support for special logic around \"initial\" and \"terminal?\"\n\n    constructor($filter, $window, $q, openmrsRest, openmrsTranslate, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, {$filter, $window, $q, openmrsRest, openmrsTranslate, widgetsCommons});\n    }\n\n    $onInit() {\n        this.vPatientProgram = 'custom:uuid,program:(uuid),dateEnrolled,dateCompleted,dateCreated,outcome:(display),location:(display,uuid),dateCompleted,outcome,states:(uuid,startDate,endDate,dateCreated,voided,state:(uuid,concept:(display)))';\n\n        this.dateFormat = (this.config.dateFormat == '' || angular.isUndefined(this.config.dateFormat))\n            ? 'dd-MMM-yyyy' : this.config.dateFormat;\n        this.today = new Date();\n\n        this.loaded = false;\n        this.deleted = false;\n\n        this.program = null;\n        this.patientProgram = null;\n        this.patientPrograms = null;\n        this.programLocations = null;\n        this.programOutcomes = null;\n        this.sessionLocation = null;\n\n        this.expandedWorkflows = typeof this.config.expandedWorkflows === 'boolean' ?  this.config.expandedWorkflows : false;\n\n        // we calculate these two values based on the completion date of the previous program and the enrollment date of any subsequent program\n        // we populate these on initial load\n        this.minEnrollmentDate = null;\n        this.maxCompletionDate = null;\n\n        this.canEnrollInProgram = false;\n        this.canEditProgram = false;\n        this.canDeleteProgram = false;\n\n        this.statesByWorkflow = {};\n        this.statesByUuid = {};\n        this.sortedStatesByWorkflow = {};\n\n        this.markPatientDeadOutcome = null;\n        this.markPatientDeadPage = \"/coreapps/markPatientDead.page?patientId={{patientUuid}}&returnDashboard={{dashboard}}&defaultDeathDate={{date}}&defaultDead=true\";\n        this.canMarkPatientDead = false;\n        this.requestInProgress = false;\n\n        // config parameter that can be passed in so the widget knows what dashboard it is being rendered on,\n        // currently only use is to pass on to Mark Patient Dead page to use as a return url\n        this.dashboard = null;\n\n        // backs the various input fields\n        this.input = {\n            dateEnrolled: null,\n            enrollmentLocation: null,\n            dateCompleted: null,\n            outcome: null,\n            initialWorkflowStateByWorkflow: {},\n            changeToStateByWorkflow: {}\n        }\n\n        this.resetWindowStates();\n\n        let ctrl = this;\n\n        return this.activate();\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        if (this.config.dashboard) {\n          this.dashboard = this.config.dashboard;\n        }\n\n        // if this concept is selected as an outcome, redirect to \"Mark Patient Dead\" page\n        if (this.config.markPatientDeadOutcome) {\n          this.markPatientDeadOutcome = this.config.markPatientDeadOutcome;\n        }\n\n        if (this.config.markPatientDeadPage) {\n          this.markPatientDeadPage = this.config.markPatientDeadPage;\n        }\n\n        this.fetchPrivileges();\n        this.fetchSessionLocation();\n\n        return this.fetchLocations()\n            .then(this.fetchProgram.bind(this))\n            .then(this.fetchOutcomes.bind(this))\n            .then(this.fetchPatientProgram.bind(this));\n    }\n\n    fetchPrivileges() {\n        this.openmrsRest.get('session').then((response) => {\n            if (response && response.user && angular.isArray(response.user.privileges)) {\n                if (this.widgetsCommons.isSystemDeveloper(response.user)) {\n                    this.canEnrollInProgram = true;\n                    this.canEditProgram = true;\n                    this.canDeleteProgram = true;\n                    this.canMarkPatientDead = true;\n                } else {\n                    if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.enrollInProgram'; })) {\n                        this.canEnrollInProgram = true;\n                    };\n                    if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.editPatientProgram'; })) {\n                        this.canEditProgram = true;\n                    };\n                    if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.deletePatientProgram'; })) {\n                        this.canDeleteProgram = true;\n                    };\n                    if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.markPatientDead'; })) {\n                      this.canMarkPatientDead = true;\n                    };\n                }\n            }\n        }, function(error) {\n          console.log(`failed to retrieve user privileges, error: ${error}`);\n        });\n    }\n\n    setInputsToStartingValues() {\n        this.input.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : new Date();\n\n        this.input.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n        this.input.outcome = this.patientProgram && this.patientProgram.outcome ? this.patientProgram.outcome.uuid : null;\n\n        if (this.patientProgram && this.patientProgram.location) {\n            this.input.enrollmentLocation = this.patientProgram.location.uuid;\n        }\n        // if there is only possible location, set it as the default (this is why loading locations (in activate) needs to happen before patient programs)\n        else if (this.programLocations && this.programLocations.length == 1) {\n            this.input.enrollmentLocation = this.programLocations[0].uuid;\n        }\n        // if we have more than one location, set the current session's location as the default\n        else if (this.programLocations) {\n            if (this.sessionLocation) {\n                let defaultLoc = this.$filter('filter')(this.programLocations, (location) => {\n                    return (location.uuid == this.sessionLocation.uuid);\n                })[0];\n                if (defaultLoc) {\n                    this.input.enrollmentLocation = defaultLoc.uuid;\n                }\n            }\n        }\n        this.input.initialWorkflowStateByWorkflow = {};\n        this.input.changeToStateByWorkflow = {};\n    }\n\n    convertDateEnrolledAndDateCompletedStringsToDates() {\n        if (this.patientProgram) {\n            this.patientProgram.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n            // The `dateCompleted` is set based on the `startDate` from patient program state because we\n            // had stored this date as the date without the time that's why now we don't want\n            // to add timezone offset to that value (and use toUTCDate)\n            this.patientProgram.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ?\n                this.toUTCDate(this.patientProgram.dateCompleted) : null;\n        }\n    }\n\n    toggleEditEnrollment() {\n        let currentStatus = this.edit.enrollment;\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n\n        this.edit.enrollment = !currentStatus;\n    }\n\n    toggleEditWorkflow(workflowUuid) {\n        let currentStatus = this.edit.workflow[workflowUuid];\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n\n        // the first time we hit this, we need to initialize the workflow\n        if (!workflowUuid in this.edit.workflow) {\n            this.edit.workflow[workflowUuid] = true\n        }\n        else {\n            this.edit.workflow[workflowUuid] = !currentStatus;\n        }\n    }\n\n    toggleExpandedWorkflow(workflowUuid) {\n        this.expanded.workflow[workflowUuid] = !this.expanded.workflow[workflowUuid];\n    }\n\n    // Initializes workflows' states to expanded display mode based on boolean configuration value - this.config.expandedWorkflows\n    initExpandedWorkflows() {\n        angular.forEach(this.program.workflows, (workflow) => {\n            this.expanded.workflow[workflow.uuid] = this.expandedWorkflows;\n        });\n    }\n\n    fetchProgram() {\n        return this.openmrsRest.get('program', {\n            uuid: this.config.program,\n            v: 'custom:display,uuid,outcomesConcept:(uuid),workflows:(uuid,concept:(display),states:(uuid,initial,terminal,concept:(display))'\n        }).then((response) => {\n            // TODO handle error cases, program doesn't exist\n            this.program = response;\n\n            angular.forEach(this.program.workflows, (workflow) => {\n                this.statesByWorkflow[workflow.uuid] = workflow.states;\n                angular.forEach(workflow.states, (state) => {\n                    this.statesByUuid[state.uuid] = state;\n                });\n            });\n        });\n    }\n\n    fetchPatientProgram() {\n\n        this.loaded = false;\n        this.patientProgram = null;\n        this.resetWindowStates();\n\n        return this.openmrsRest.get('programenrollment', {\n            patient: this.config.patientUuid,\n            v: this.vPatientProgram\n        }).then((response) => {\n            this.patientPrograms = response.results;\n            this.getPatientProgramFromPatientProgramList();\n            this.groupAndSortPatientStates();\n            this.setInputsToStartingValues();\n            this.convertDateEnrolledAndDateCompletedStringsToDates();\n            this.initExpandedWorkflows()\n            this.loaded = true;\n        });\n    }\n\n    fetchLocations() {\n        var locationsPromise = this.$window.sessionContext.locationsPromise\n        if(!locationsPromise) {\n            locationsPromise = this.openmrsRest.get(\"location\", {\n                v: \"custom:display,uuid\",\n                tag: this.config.locationTag\n            })\n            // make the location promise available for other program widgets\n            // sessionContext is defined in appui - https://github.com/openmrs/openmrs-module-appui/blob/master/omod/src/main/webapp/fragments/decorator/standardEmrPage.gsp\n            this.$window.sessionContext.locationsPromise = locationsPromise\n        }\n        return locationsPromise.then(e => {\n            this.programLocations = e.results\n            return e\n        });\n    }\n\n    fetchSessionLocation() {\n        return this.openmrsRest.get('appui/session', {\n            v: 'custom:name,uuid',\n        }).then((response) => {\n            this.sessionLocation = response.sessionLocation;\n        });\n    }\n\n    fetchOutcomes() {\n        if (this.program.outcomesConcept) {\n            return this.openmrsRest.get('concept', {\n                v: 'custom:answers:(display,uuid)',\n                uuid: this.program.outcomesConcept.uuid,\n            }).then((response) => {\n                this.programOutcomes = response.answers;\n            })\n        }\n    }\n\n    // get the patient program that this widget will be displaying/manipulating\n    getPatientProgramFromPatientProgramList() {\n\n        // first, filter to only patient programs of the specified type\n        this.patientPrograms = this.$filter('filter') (this.patientPrograms, (patientProgram) => {\n            return (patientProgram.program.uuid == this.config.program);\n        });\n\n        // if there's more than one enrollment for this patient, we need to figure out which one this widget is meant\n        // to display\n        if (this.patientPrograms.length > 0) {\n\n            // sort programs by date... this widget will only be displaying one of them, but we need them in order\n            // to properly calculate the max completion date and min enrollment date (which is based any programs chronologically\n            // before/after the program we are viewing)\n            this.patientPrograms = this.$filter('orderBy')(this.patientPrograms, null, false, this.patientProgramComparator);\n\n            // if widget has been configured to display a specific patient program (by the config.patientProgram parameter):\n            // find the matching program by uuid, and set the min/max for enroll/complete based on the surrounding programs\n            if (!this.displayActiveProgram()) {\n\n                angular.forEach(this.patientPrograms, (patientProgram, i) => {\n                    if (patientProgram.uuid == this.config.patientProgram) {\n                        this.patientProgram = patientProgram;\n                        if (i > 0) {\n                            this.maxCompletionDate = new Date(this.patientPrograms[i-1].dateEnrolled);\n                        }\n                        if (i + 1 < this.patientPrograms.length) {\n                            this.minEnrollmentDate = new Date(this.patientPrograms[i+1].dateCompleted);\n                        }\n                    }\n                })\n\n                // TODO error case: no match found\n            }\n            // otherwise, this widget defaults to show the active program, or if no active program, will render a widget for enrolling in the program\n            else {\n                // there's an active program (ie the most recent program does not have a completion date)\n                if (!this.patientPrograms[0].dateCompleted) {\n                    this.patientProgram = this.patientPrograms[0];\n                    if (this.patientPrograms.length > 1) {\n                        // enrollment date cannot be shifted to before completion date of previous program\n                        this.minEnrollmentDate = new Date(this.patientPrograms[1].dateCompleted)\n\n                    }\n                }\n                // no active program\n                else {\n                    // enrollment date for a new program can't be set before the completion date of any previous program\n                    this.minEnrollmentDate = new Date(this.patientPrograms[0].dateCompleted)\n                }\n\n            }\n\n        }\n    }\n\n    enrollInProgram() {\n        if (this.input.dateEnrolled && this.input.enrollmentLocation) {\n            this.requestInProgress = true;\n\n            var states = [];\n            angular.forEach(this.input.initialWorkflowStateByWorkflow, (state) => {\n                // program entity lost information about `startDate` time value (date database type) and it\n                // causes an issue when the timezone is different than UTC, that's why we remove information\n                // about a time before sending a request\n                state.startDate = this.dateWithoutTime(this.input.dateEnrolled);\n                states.push(state);\n            });\n\n            this.openmrsRest.create('programenrollment', {\n                patient: this.config.patientUuid,\n                program: this.config.program,\n                dateEnrolled: this.input.dateEnrolled,\n                location: this.input.enrollmentLocation,\n                states: states\n            }).then((response) => {\n                if (this.config.disableReloadPage) {\n                    this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n                    this.requestInProgress = false;\n                }\n                else {\n                    this.reloadPage();  // closing a program affects other widgets, so we need to reload the entire page\n                }\n            });\n\n        }\n    }\n\n    updatePatientProgram() {\n\n        // we need to reload the entire page if date of enrollment or completion has changed, because may affect other program widget on the same page\n        // (reloading can be disabled by using the \"disable reload page\" config parameter\n        var needToReloadPage =\n            !this.config.disableReloadPage &&\n            (this.input.dateEnrolled.getTime() != this.patientProgram.dateEnrolled.getTime()) ||\n            (this.input.dateCompleted && !this.patientProgram.dateCompleted) ||\n            (!this.input.dateCompleted && this.patientProgram.dateCompleted) ||\n            (this.input.dateCompleted && this.patientProgram.dateCompleted && this.input.dateCompleted.getTime() != this.patientProgram.dateCompleted.getTime());\n\n        // (disabling this... keeping most recent state with no end date for consistency with current workflow)\n        // we need to make sure that the most recent state for each workflow has an end date = completion date\n        // (this should really be handled by the api?)\n      /*  let states = [];\n        angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n            if (workflow.length > 0) {\n                states.push({\n                    uuid: workflow[0].uuid,\n                    endDate: this.input.dateCompleted\n                })\n            }\n        })*/\n\n        this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n            dateEnrolled: this.input.dateEnrolled,\n            dateCompleted: this.input.dateCompleted,\n            location: this.input.enrollmentLocation,\n            outcome: this.input.outcome//,\n            //states: states\n        }).then((response) => {\n            // redirect to Mark Patient Dead page if status is being set to \"dead\" or is currently \"dead\"\n            if (this.markPatientDeadOutcome && this.canMarkPatientDead &&\n                ((response.outcome && response.outcome.uuid === this.markPatientDeadOutcome)\n                || (this.patientProgram.outcome && this.patientProgram.outcome.uuid == this.markPatientDeadOutcome))) {\n              var destinationPage = Handlebars.compile(this.markPatientDeadPage)({\n                patientUuid: this.config.patientUuid,\n                dashboard: this.config.dashboard,\n                date: response.dateCompleted\n              });\n              this.openmrsRest.getServerUrl().then((url) => {\n                const target = url + destinationPage;\n                window.location.href = target;\n              });\n            }\n            else if (!needToReloadPage) {\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            }\n            else {\n                this.reloadPage();  // closing a program affects other widgets, so we need to reload the entire page\n            }\n        });\n    }\n\n    deletePatientProgram() {\n        if (!this.confirmDelete.enrollment) {\n            this.confirmDelete.enrollment= true;\n        }\n        else {\n            this.confirmDelete.enrollment = false;\n            this.openmrsRest.remove('programenrollment/', {\n                uuid: this.patientProgram.uuid\n            }).then((response) => {\n                this.patientProgram = null;\n\n                // if this widget was set to display the \"active program\" (ie, no patient program uuid passed in)\n                // then reload, otherwise render a \"patient program deleted\" message and reload entire page\n\n                if (this.displayActiveProgram()) {\n                    this.fetchPatientProgram(); // refresh display\n                }\n                else {\n                    this.deleted = true;\n                    if (!this.config.disableReloadPage) {\n                        this.reloadPage();\n                    }\n                }\n            })\n        }\n    }\n\n    deleteMostRecentPatientState(workflowUuid) {\n        if (!this.confirmDelete.workflow[workflowUuid]) {\n            this.confirmDelete.workflow[workflowUuid] = true;\n        }\n        else {\n            this.confirmDelete.workflow[workflowUuid] = false;\n            if (workflowUuid in this.sortedStatesByWorkflow && this.sortedStatesByWorkflow[workflowUuid].length > 0) {\n                this.voidPatientState(this.sortedStatesByWorkflow[workflowUuid][0].uuid);\n            }\n        }\n    }\n\n    createPatientState(state) {\n        // patient program entity lost information about `startDate` time value (date database type) and it\n        // causes an issue when the timezone is different than UTC, that's why we remove information\n        // about a time before sending a request\n        this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n            states: [\n                {\n                    state: state.state,\n                    startDate: this.dateWithoutTime(state.date)  // TODO is it okay that we set this date on the client-side? need to sync with\n                }\n            ]\n        }).then((response) => {\n            // TODO: handle error cases\n            if (this.statesByUuid[state.state].terminal) {\n                this.reloadPage()\n            }\n            else {\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            }\n        })\n    }\n\n    getWorkflowForState(state) {\n        let result;\n\n        angular.forEach(this.program.workflows, (workflow) => {\n            angular.forEach(workflow.states, (workflowState) => {\n                if (state.uuid == workflowState.uuid) {\n                    result = workflow;\n                }\n            })\n        })\n        return result;\n    }\n\n    voidPatientState(patientStateUuid) {\n\n        return this.openmrsRest.remove('programenrollment/' + this.patientProgram.uuid + \"/state/\" + patientStateUuid, {\n                voided: \"true\",\n                voidReason: \"voided via UI\"\n            })\n            .then((response) => {\n                // TODO: handle error cases\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            });\n\n    }\n\n    updatePatientState(workflowUuid, stateUuid) {\n        this.edit.workflow[workflowUuid] = false;\n        this.createPatientState(this.input.changeToStateByWorkflow[workflowUuid])\n    }\n\n    isNotCurrentState(workflow) {\n        return (state) => {\n            var currentState = (workflow.uuid in this.sortedStatesByWorkflow) ? this.sortedStatesByWorkflow[workflow.uuid][0] : null;\n            return !currentState || currentState.state.uuid != state.uuid;\n        }\n\n    }\n\n    isInitialState() {\n        return (state) => { return state.initial };\n    }\n\n    groupAndSortPatientStates() {\n\n        this.sortedStatesByWorkflow = {};\n\n        if (this.patientProgram && this.patientProgram.states) {\n            // TODO remove this first filter once the bug with the REST request returning voided elements is fixed\n            this.patientProgram.states = this.$filter('filter')(this.patientProgram.states, (state) => {\n                return !state.voided\n            }, true);\n\n            //this custom comparator is detailed in the PR at https://github.com/openmrs/openmrs-module-coreapps/pull/299\n            //the orderBy docs are available at https://docs.angularjs.org/api/ng/filter/orderBy\n            this.patientProgram.states = this.$filter('orderBy')(this.patientProgram.states, null, false, function(state1, state2)\n            {\n                //From the orderBy documentation\n\n                //In order to ensure that the sorting will be deterministic across platforms, if none of the specified predicates can\n                //distinguish between two items, orderBy will automatically introduce a dummy predicate that returns the item's index\n                //as value. (If you are using a custom comparator, make sure it can handle this predicate as well.)\n\n                //i.e. orderBy falls back to index comparison when two states are indicated to be equal (return 0) in a previous comparison\n                if(state1.type === \"number\" && state2.type === \"number\"){\n                    //if index of state1 is 7 and state2 is 8, 7-8 == -1 indicates state1 is first, 8-7 == 1 indicating state2 is first\n                    return state1.value-state2.value;\n                }\n\n                //this sort is done against ALL workflows within a program\n                //in which case it is possible to have two states with null end dates,\n                //and that is the exception to when endDate==null indicates sort order clearly\n                if(!(state1.value.endDate == null && state2.value.endDate == null)) {\n\n                    //ordered so each criteria is evaluated in order (e.g. not all \"prev\" crit. before \"next\" crit. is ever evaluated)\n\n                  // TODO: ** this appears to be doing string comparisons of dates, which is bad **\n                   //null end date prioritized over any other sort criteria\n                    if(state2.value.endDate == null){\n                        return -1;\n                    } else if( state1.value.endDate == null){\n                        return 1;\n                    //sort by start date\n                    } else if( new Date(state1.value.startDate) < new Date(state2.value.startDate)) {\n                        return -1;\n                    } else if ( new Date(state1.value.startDate) > new Date(state2.value.startDate)) {\n                        return 1;\n                    //sort by end date\n                    } else if(new Date(state1.value.endDate) < new Date(state2.value.endDate)){\n                        return -1;\n                    } else if (new Date(state1.value.endDate) > new Date(state2.value.endDate)) {\n                        return 1;\n                    //sort by date created\n                    } else if(new Date(state1.value.dateCreated) < new Date(state2.value.dateCreated)){\n                        return -1;\n                    } else if(new Date(state1.value.dateCreated) > new Date(state2.value.dateCreated)){\n                        return 1;\n                    }\n\n                }\n            \treturn 0;\n            });\n\n            angular.forEach(this.patientProgram.states, (patientState) => {\n                let workflow = this.getWorkflowForState(patientState.state);\n\n                if (workflow != null) {  // TODO: better handle if state can't be matched to workflow, right now we just \"drop\" the state\n                  if (!(workflow.uuid in this.sortedStatesByWorkflow)) {\n                    this.sortedStatesByWorkflow[workflow.uuid] = [];\n                  }\n\n                  // patient program entity lost information about `startDate` time value (date database type) and it\n                  // causes an issue when the timezone is different than UTC\n                  // that's why we had store start date as the date without\n                  // the time and now we don't want to add timezone offset to that value (and use toUTCDate)\n                  var newEntry = {\n                    startDate: this.toUTCDate(patientState.startDate),\n                    dayAfterStartDate: this.getNextDay(patientState.startDate),\n                    endDate: this.toUTCDate(patientState.endDate),\n                    state: patientState.state,\n                    uuid: patientState.uuid\n                  }\n\n                  this.sortedStatesByWorkflow[workflow.uuid].unshift(newEntry);  // add to front\n                }\n            })\n        }\n    }\n\n    getMostRecentStateChangeDate() {\n        let mostRecentStateChangeDate = null\n\n        angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n            if (workflow.length > 0) {\n                if (!mostRecentStateChangeDate || workflow[0].startDate > mostRecentStateChangeDate){\n                    mostRecentStateChangeDate = workflow[0].startDate\n                }\n            }\n        })\n\n        return mostRecentStateChangeDate;\n    }\n\n    update() {\n        this.cancelAllEditModes();\n        this.updatePatientProgram();\n    }\n\n    cancelAllEditModes() {\n        this.edit.enrollment = false;\n        for (let uuid in this.edit.workflow) {\n            this.edit.workflow[uuid] = false\n        }\n    }\n\n    cancelEdit() {\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n    }\n\n    cancelEnrollment() {\n        this.expanded.enrollment = false;\n        this.setInputsToStartingValues();\n    }\n\n    cancelDelete() {\n        this.confirmDelete = {\n            enrollment: false,\n            workflow:{}\n        }\n    }\n\n    inConfirmDelete() {\n        if (this.confirmDelete.enrollment === true) {\n            return true;\n        }\n        var result = false;\n        angular.forEach(this.confirmDelete.workflow, function (value, key) {\n            if (value === true) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    inEditMode() {\n        if (this.edit.enrollment === true) {\n            return true;\n        }\n        var result = false;\n        angular.forEach(this.edit.workflow, function (value, key) {\n            if (value === true) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    getNextDay(date) {\n        return moment(date).add(1, 'days').toDate();\n    }\n\n    getPreviousDay(date) {\n        return moment(date).add(-1, 'days').toDate();\n    }\n\n    isToday(date) {\n        if (!date) {\n            return false;\n        }\n        else {\n           return moment(date).isSame(moment(), 'day');\n        }\n    }\n\n    isMostRecentProgram() {\n        return !this.patientPrograms || this.patientPrograms.length == 0 || !this.patientProgram || this.patientPrograms[0].uuid === this.patientProgram.uuid;\n    }\n\n    // if no program uuid is passed in, this widget will display the active program, or an \"enroll in program\" option if no active program\n    displayActiveProgram() {\n        return this.config.patientProgram ? false : true;\n    }\n\n    programIsCompleted() {\n        return (this.patientProgram && this.patientProgram.dateCompleted ? true : false);\n    }\n\n    enrollmentValid() {\n        return this.input.enrollmentLocation && this.input.dateEnrolled &&  // must have enrollmentLocation and date enrolled\n            (!this.input.dateCompleted || this.input.dateCompleted >= this.input.dateEnrolled) &&  // date completed must be after date enrolled\n            ((!this.input.dateCompleted && !this.input.outcome) || (this.input.dateCompleted && this.input.outcome)) &&  // if there's a completion date, must specific an outcome (and vice versa)\n            (this.isMostRecentProgram() || this.input.dateCompleted) && // must be the most recent program or have a date completed\n            !this.requestInProgress;\n    }\n\n    workflowTransitionValid(workflowUuid) {\n        return this.input.changeToStateByWorkflow[workflowUuid] && this.input.changeToStateByWorkflow[workflowUuid].date && this.input.changeToStateByWorkflow[workflowUuid].state;\n    }\n\n    resetWindowStates() {\n        // controls the state (open/closed) of the elements to edit enrollment & state information\n        this.edit = {\n            enrollment: false,\n            workflow: {}\n        }\n\n        // controls the state (opened/closed) of the expanded view of enrollment & workflows\n        this.expanded = {\n            enrollment: false,\n            workflow: {}\n        }\n\n        // controls whether the \"confirm delete\" message is displayed\n        this.confirmDelete = {\n            enrollment: false,\n            workflow: {}\n        };\n    }\n\n    reloadPage() {\n        this.$window.location.reload();\n    }\n\n    dateWithoutTime(date) {\n        return moment(date).format('YYYY-MM-DD');\n    }\n\n    toUTCDate(dateString) {\n        let utcDate = null;\n        if (dateString) {\n            utcDate = new Date(dateString);\n            utcDate.setTime(utcDate.getTime() + utcDate.getTimezoneOffset() * 60 * 1000);\n        }\n        return utcDate;\n    }\n\n    patientProgramComparator(patientProgram1, patientProgram2) {\n        const dateEnrolled1 = new Date(patientProgram1.value.dateEnrolled);\n        const dateEnrolled2 = new Date(patientProgram2.value.dateEnrolled);\n\n        // first check enrollment dates\n        if (dateEnrolled1 > dateEnrolled2) {\n          return -1\n        }\n        else if (dateEnrolled1 < dateEnrolled2) {\n          return 1\n        }\n\n        // if enrollment dates are equal, check completion dates\n        const dateCompleted1 = patientProgram1.value.dateCompleted ? new Date(patientProgram1.value.dateCompleted) : null;\n        const dateCompleted2 = patientProgram2.value.dateCompleted ? new Date(patientProgram2.value.dateCompleted) : null;\n\n        // \"active\" (no completion date) ranks higher\n        // assumption: never should be two active programs (ie both date completed should not be null)\n        if (dateCompleted1 === null) {\n          return -1;\n        }\n        else if (dateCompleted2 === null) {\n          return 1;\n        }\n        // having two programs with the same start date but different end dates should be illegal, but just in case\n        else if (dateCompleted1 > dateCompleted2) {\n          return -1;\n        }\n        else if (dateCompleted1 < dateCompleted2) {\n          return 1;\n        }\n\n        // if still equal, fall back to date created\n        // if enrollment dates are equal, check completion dates\n        const dateCreated1 = patientProgram1.value.dateCreated;\n        const dateCreated2 = patientProgram2.value.dateCreated;\n\n        if (dateCreated1 > dateCreated2) {\n          return -1;\n        }\n        else if (dateCreated1 < dateCreated2) {\n          return 1;\n        }\n\n        // and finally, just use uuid, because we need to make sure the sort order is deterministic\n        if (patientProgram1.value.uuid < patientProgram2.value.uuid) {\n          return -1;\n        }\n        else {\n          return 1;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/programstatus.controller.js","import RelationshipsController from './relationships.controller';\nimport template from './relationships.html';\n\nexport let RelationshipsComponent = {\n    template,\n    controller: RelationshipsController,\n    selector: 'relationships',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/relationships.component.js","import angular from 'angular';\n\nexport default class RelationshipsController  {\n    constructor($q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, { $q, openmrsRest, openmrsTranslate });\n    }\n\n    $onInit() {\n        this.minSearchLength = 2;\n        // the default patient page is the clinician dashboard\n        this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}\";\n        this.providerPage = null;\n\n        this.relationships = [];\n        this.types = [];\n        this.allowedTypes = [];\n        this.relationshipType = [];\n        this.hasEditPrivileges = false;\n        this.edit = false;\n        this.removeFlag = false;\n        this.showFindOtherPerson = false;\n        this.showSaveButton = false;\n        this.searchPerson = null;\n        this.otherPerson = null;\n        this.relatedPersons = [];\n\n        this.activate();\n\n        let ctrl = this;\n    }\n\n    activate() {\n        if (this.config.baseAppPath) {\n            this.openmrsRest.setBaseAppPath(this.config.baseAppPath);\n        } else {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        }\n\n        if( this.config.dashboardPage ) {\n            this.dashboardPage = this.config.dashboardPage;\n        }\n\n        if( this.config.providerPage ) {\n            this.providerPage = this.config.providerPage;\n        }\n\n        if (this.config.includeRelationshipTypes) {\n            this.allowedTypes = this.config.includeRelationshipTypes.split(',');\n        }\n\n        //fetchPrivileges\n        this.openmrsRest.get('session', {\n            v: 'custom:(privileges:(name))'\n        }).then((response) => {\n            this.getPrivileges(response.user.privileges);\n        }, function(error) {\n                console.log(`failed to retrieve user privileges, error: ${error}`);\n        });\n\n        //fetchRelationships\n        this.openmrsRest.get('relationship', {\n            person: this.config.patientUuid,\n            limit: this.getMaxRecords(),\n            v: 'custom:(uuid,personA:(uuid,display,personName,birthdate,isPatient,personId),personB:(uuid,display,personName,birthdate,isPatient,personId),relationshipType)'\n        }).then((response) => {\n            this.getRelationships(response.results);\n            if (this.providerPage) {\n                // if a provider page has been configured then check if there are any providers listed as relationships\n                this.checkForProviders();\n            }\n        });\n\n        //fetchRelationshipTypes\n        this.openmrsRest.get('relationshiptype', {\n            v: 'default'\n        }).then((response) => {\n            this.getRelationshipTypes(response.results);\n        });\n    }\n\n    getRelationships(relationships) {\n        angular.forEach(relationships, (relationship) => {\n            var rel = {};\n            rel.uuid = relationship.uuid;\n            rel.isProvider = false;\n            if(relationship.personA.uuid !== this.config.patientUuid){\n                rel.toPerson = relationship.personA;\n                rel.isPatient = relationship.personA.isPatient;\n                rel.type = angular.isDefined(relationship.relationshipType.displayAIsToB) ? relationship.relationshipType.displayAIsToB : relationship.relationshipType.aIsToB;\n            } else {\n                rel.toPerson = relationship.personB;\n                rel.isPatient = relationship.personB.isPatient;\n                rel.type = angular.isDefined(relationship.relationshipType.displayBIsToA) ? relationship.relationshipType.displayBIsToA : relationship.relationshipType.bIsToA;\n\n            }\n            this.relationships.push(rel);\n        });\n    }\n\n    relationshipsContain(personUuid) {\n        var result = false;\n        angular.forEach(this.relationships, (relationship) => {\n            if (relationship.toPerson.uuid == personUuid) {\n                result = true;\n            }\n        });\n        return result;\n    }\n\n    getPrivileges(privileges) {\n        var editPrivilege = this.config.editPrivilege;\n        if( angular.isDefined(editPrivilege) ) {\n            if (angular.isArray(privileges)) {\n                if (privileges.some(function(privilege) { return privilege.name === editPrivilege; })) {\n                    this.hasEditPrivileges = true;\n                };\n            }\n        }\n    }\n\n    updateProviderInfo(provider) {\n        if (provider) {\n            angular.forEach(this.relationships, (relationship) => {\n                if (relationship.toPerson.uuid === provider.person.uuid) {\n                    relationship.isProvider = true;\n                }\n            });\n        }\n    }\n\n    isProvider(personUuid, personName) {\n        return this.openmrsRest.get('provider', {\n            q: personName,\n            v: 'custom:(uuid,identifier,display,person:(uuid,personId,display,gender,age,birthdate,birthdateEstimated))'\n        }).then(function (resp) {\n            return resp.results;\n        });\n    }\n\n    checkForProviders() {\n        angular.forEach(this.relationships, (relationship) => {\n            this.isProvider(relationship.toPerson.uuid, relationship.toPerson.display).then( (response) => {\n                angular.forEach(response, (provider) => {\n                    this.updateProviderInfo(provider);\n                });\n            });\n        });\n\n    }\n\n    getPersons(searchString) {\n        this.openmrsRest.get('patient', {\n            q: searchString,\n            v: 'custom:(uuid,display,gender,age)'\n        }).then((response) => {\n            this.relatedPersons = [];\n            this.filterSearchedPersons(response.results);\n        });\n    }\n\n    filterSearchedPersons(searchedPersons) {\n        if (angular.isArray(searchedPersons) && searchedPersons.length > 0) {\n            angular.forEach(searchedPersons, (person) => {\n                if( !this.relationshipsContain( person.uuid ) ) {\n                    // when searching for persons to create new relationships exclude the persons that already have a relationship with this person\n                    this.relatedPersons.push(person);\n                }\n            });\n        }\n    }\n\n    getRelationshipTypes(types) {\n        angular.forEach(types, (type) => {\n            if ((this.allowedTypes.length < 1) ||\n                ((this.allowedTypes.length > 0) && (this.allowedTypes.indexOf(type.uuid) !== -1))) {\n                // if a relationship type filter was not specified then we display all types,\n                // OR if a filter was defined then we only display the types included in the filter\n                if (this.findRelTypeByName(angular.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB) == null) {\n                    var relTypeA = {};\n                    relTypeA.uuid = type.uuid;\n                    relTypeA.name = (angular.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB);\n                    relTypeA.type = \"B\";\n                    this.types.push(relTypeA);\n                }\n                if (this.findRelTypeByName(angular.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA)== null) {\n                    var relTypeB = {};\n                    relTypeB.uuid = type.uuid;\n                    relTypeB.name = (angular.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA);\n                    relTypeB.type = \"A\";\n                    this.types.push(relTypeB);\n                }\n            }\n        });\n    }\n\n    updateRelationshipType() {\n        if (angular.isDefined(this.relationshipType)) {\n            this.showFindOtherPerson = true;\n        }\n    }\n\n    findRelTypeByName(value) {\n        var item = null;\n        if (angular.isDefined(this.types) && this.types.length > 0) {\n            angular.forEach(this.types, (type) => {\n                if (type.name == value) {\n                    item = type;\n                }\n            });\n        }\n        return item;\n    }\n\n    getMaxRecords() {\n        if(this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)){\n            return 6;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n    \n    navigateTo(personUuid) {\n        var destinationPage =\"\";\n\n        angular.forEach(this.relationships, (relationship) => {\n            if (relationship.toPerson.uuid === personUuid ) {\n                if ( relationship.isPatient === true ) {\n                    if (this.dashboardPage) {\n                        destinationPage = Handlebars.compile(this.dashboardPage)({\n                            patientUuid: personUuid\n                        });\n                    }\n                } else if ( relationship.isProvider === true ) {\n                    if (this.providerPage) {\n                        destinationPage = Handlebars.compile(this.providerPage)({\n                            personUuid: personUuid\n                        });\n                    }\n                }\n            }\n        });\n\n\n        this.openmrsRest.getServerUrl().then((url) => {\n            window.location.href = url + destinationPage;\n        });\n\n    }\n\n    addRelationship() {\n        this.edit = true;\n    }\n\n    save() {\n        if (angular.isDefined(this.relationshipType) &&\n            angular.isDefined(this.otherPerson)) {\n\n            var personA = null;\n            var personB = null;\n            if (this.relationshipType.type == \"A\") {\n                personA = this.config.patientUuid;\n                personB = this.otherPerson.uuid;\n            } else if (this.relationshipType.type == \"B\") {\n                personA = this.otherPerson.uuid;\n                personB = this.config.patientUuid;\n            }\n\n            this.openmrsRest.create('relationship', {\n                relationshipType: this.relationshipType.uuid,\n                personA: personA,\n                personB: personB\n            }).then((response) => {\n                this.$onInit();\n            });\n        }\n    }\n\n    removeRelationship(relUuid) {\n        if (angular.isDefined(relUuid)) {\n\n            this.removeFlag = true;\n            var tempRelationships = [];\n            angular.forEach(this.relationships, (relationship) => {\n                if (relationship.uuid == relUuid) {\n                    tempRelationships.push(relationship);\n                }\n            });\n            this.relationships = [];\n            this.relationships = tempRelationships;\n        }\n    }\n    \n    remove() {\n        if (angular.isDefined(this.relationships) && (this.relationships.length == 1) ){\n            //we only allow to delete one relationship at the time\n            this.openmrsRest.remove('relationship', {\n                 uuid: this.relationships[0].uuid\n             }).then((response) => {\n                 this.$onInit();\n            });\n        }\n    }\n\n    goTo(personUuid) {\n        this.navigateTo(personUuid);\n    }\n\n    searchPersons() {\n        if (angular.isDefined(this.searchPerson) &&\n            (this.searchPerson.length > this.minSearchLength) ) {\n            this.getPersons(this.searchPerson);\n        }\n    }\n\n    onSelect($item, $model, $label) {\n        if (angular.isDefined($item) && angular.isDefined(this.relationshipType)) {\n            this.otherPerson = $item;\n            this.showSaveButton = true;\n        }\n    }\n\n    cancel() {\n        this.edit = false;\n        this.$onInit();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/relationships.controller.js","import VisitByEncounterTypeController from './visitbyencountertype.controller';\nimport template from './visitbyencountertype.html';\n\nexport let VisitByEncounterTypeComponent = {\n    template,\n    controller: VisitByEncounterTypeController,\n    selector: 'visitbyencountertype',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.component.js","export default class VisitByEncounterTypeController {\n    constructor(openmrsRest, widgetsCommons , openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {openmrsRest, widgetsCommons , openmrsTranslate});\n    }\n\n    $onInit() {\n        this.visits = [];\n        this.serverUrl = \"\";\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.openmrsRest.getServerUrl().then((result) => {\n            this.serverUrl = result;\n        });\n\n        //fetchVisits\n        this.openmrsRest.get('visit', {\n            patient: this.config.patientUuid,\n            limit: this.getMaxRecords(),\n            fromStartDate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n            v: 'custom:(uuid,startDatetime,stopDatetime,encounters:(uuid,encounterDatetime,encounterType:(uuid,display)))'\n        }).then((response) => {\n            this.getVisits(response.results);\n        })\n    }\n\n    getVisits(visits) {\n        angular.forEach(visits, (visit) => {\n            let encounterTypes = [];\n            if(this.getCombineEncounterTypes()){\n                let vis = {startDatetime: visit.startDatetime, encounterType: '', uuid: visit.uuid};\n                angular.forEach(visit.encounters, (encounter) => {\n                    if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                        if (vis.encounterType === '') {\n                            vis.encounterType = encounter.encounterType.display;\n                        } else {\n                            vis.encounterType += ', ' + encounter.encounterType.display;\n                        }\n                        encounterTypes.push(encounter.encounterType.display);\n                    }\n                });\n                this.visits.push(vis);\n            } else {\n                angular.forEach(visit.encounters, (encounter) => {\n                    if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                        let vis = {startDatetime: this.config.showEncounterDate === 'true' ? encounter.encounterDatetime : visit.startDatetime };\n                        vis.encounterType = encounter.encounterType.display;\n                        encounterTypes.push(encounter.encounterType.display);\n                        this.visits.push(vis);\n                    }\n                })\n            }\n        })\n    }\n\n    getCombineEncounterTypes() {\n        if(this.config.combineEncounterTypes === 'false'){\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getMaxRecords() {\n        if(this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)){\n            return 6;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.controller.js","var map = {\n\t\"./af\": 10,\n\t\"./af.js\": 10,\n\t\"./ar\": 17,\n\t\"./ar-dz\": 11,\n\t\"./ar-dz.js\": 11,\n\t\"./ar-kw\": 12,\n\t\"./ar-kw.js\": 12,\n\t\"./ar-ly\": 13,\n\t\"./ar-ly.js\": 13,\n\t\"./ar-ma\": 14,\n\t\"./ar-ma.js\": 14,\n\t\"./ar-sa\": 15,\n\t\"./ar-sa.js\": 15,\n\t\"./ar-tn\": 16,\n\t\"./ar-tn.js\": 16,\n\t\"./ar.js\": 17,\n\t\"./az\": 18,\n\t\"./az.js\": 18,\n\t\"./be\": 19,\n\t\"./be.js\": 19,\n\t\"./bg\": 20,\n\t\"./bg.js\": 20,\n\t\"./bm\": 21,\n\t\"./bm.js\": 21,\n\t\"./bn\": 22,\n\t\"./bn.js\": 22,\n\t\"./bo\": 23,\n\t\"./bo.js\": 23,\n\t\"./br\": 24,\n\t\"./br.js\": 24,\n\t\"./bs\": 25,\n\t\"./bs.js\": 25,\n\t\"./ca\": 26,\n\t\"./ca.js\": 26,\n\t\"./cs\": 27,\n\t\"./cs.js\": 27,\n\t\"./cv\": 28,\n\t\"./cv.js\": 28,\n\t\"./cy\": 29,\n\t\"./cy.js\": 29,\n\t\"./da\": 30,\n\t\"./da.js\": 30,\n\t\"./de\": 33,\n\t\"./de-at\": 31,\n\t\"./de-at.js\": 31,\n\t\"./de-ch\": 32,\n\t\"./de-ch.js\": 32,\n\t\"./de.js\": 33,\n\t\"./dv\": 34,\n\t\"./dv.js\": 34,\n\t\"./el\": 35,\n\t\"./el.js\": 35,\n\t\"./en-SG\": 36,\n\t\"./en-SG.js\": 36,\n\t\"./en-au\": 37,\n\t\"./en-au.js\": 37,\n\t\"./en-ca\": 38,\n\t\"./en-ca.js\": 38,\n\t\"./en-gb\": 39,\n\t\"./en-gb.js\": 39,\n\t\"./en-ie\": 40,\n\t\"./en-ie.js\": 40,\n\t\"./en-il\": 41,\n\t\"./en-il.js\": 41,\n\t\"./en-nz\": 42,\n\t\"./en-nz.js\": 42,\n\t\"./eo\": 43,\n\t\"./eo.js\": 43,\n\t\"./es\": 46,\n\t\"./es-do\": 44,\n\t\"./es-do.js\": 44,\n\t\"./es-us\": 45,\n\t\"./es-us.js\": 45,\n\t\"./es.js\": 46,\n\t\"./et\": 47,\n\t\"./et.js\": 47,\n\t\"./eu\": 48,\n\t\"./eu.js\": 48,\n\t\"./fa\": 49,\n\t\"./fa.js\": 49,\n\t\"./fi\": 50,\n\t\"./fi.js\": 50,\n\t\"./fo\": 51,\n\t\"./fo.js\": 51,\n\t\"./fr\": 54,\n\t\"./fr-ca\": 52,\n\t\"./fr-ca.js\": 52,\n\t\"./fr-ch\": 53,\n\t\"./fr-ch.js\": 53,\n\t\"./fr.js\": 54,\n\t\"./fy\": 55,\n\t\"./fy.js\": 55,\n\t\"./ga\": 56,\n\t\"./ga.js\": 56,\n\t\"./gd\": 57,\n\t\"./gd.js\": 57,\n\t\"./gl\": 58,\n\t\"./gl.js\": 58,\n\t\"./gom-latn\": 59,\n\t\"./gom-latn.js\": 59,\n\t\"./gu\": 60,\n\t\"./gu.js\": 60,\n\t\"./he\": 61,\n\t\"./he.js\": 61,\n\t\"./hi\": 62,\n\t\"./hi.js\": 62,\n\t\"./hr\": 63,\n\t\"./hr.js\": 63,\n\t\"./hu\": 64,\n\t\"./hu.js\": 64,\n\t\"./hy-am\": 65,\n\t\"./hy-am.js\": 65,\n\t\"./id\": 66,\n\t\"./id.js\": 66,\n\t\"./is\": 67,\n\t\"./is.js\": 67,\n\t\"./it\": 69,\n\t\"./it-ch\": 68,\n\t\"./it-ch.js\": 68,\n\t\"./it.js\": 69,\n\t\"./ja\": 70,\n\t\"./ja.js\": 70,\n\t\"./jv\": 71,\n\t\"./jv.js\": 71,\n\t\"./ka\": 72,\n\t\"./ka.js\": 72,\n\t\"./kk\": 73,\n\t\"./kk.js\": 73,\n\t\"./km\": 74,\n\t\"./km.js\": 74,\n\t\"./kn\": 75,\n\t\"./kn.js\": 75,\n\t\"./ko\": 76,\n\t\"./ko.js\": 76,\n\t\"./ku\": 77,\n\t\"./ku.js\": 77,\n\t\"./ky\": 78,\n\t\"./ky.js\": 78,\n\t\"./lb\": 79,\n\t\"./lb.js\": 79,\n\t\"./lo\": 80,\n\t\"./lo.js\": 80,\n\t\"./lt\": 81,\n\t\"./lt.js\": 81,\n\t\"./lv\": 82,\n\t\"./lv.js\": 82,\n\t\"./me\": 83,\n\t\"./me.js\": 83,\n\t\"./mi\": 84,\n\t\"./mi.js\": 84,\n\t\"./mk\": 85,\n\t\"./mk.js\": 85,\n\t\"./ml\": 86,\n\t\"./ml.js\": 86,\n\t\"./mn\": 87,\n\t\"./mn.js\": 87,\n\t\"./mr\": 88,\n\t\"./mr.js\": 88,\n\t\"./ms\": 90,\n\t\"./ms-my\": 89,\n\t\"./ms-my.js\": 89,\n\t\"./ms.js\": 90,\n\t\"./mt\": 91,\n\t\"./mt.js\": 91,\n\t\"./my\": 92,\n\t\"./my.js\": 92,\n\t\"./nb\": 93,\n\t\"./nb.js\": 93,\n\t\"./ne\": 94,\n\t\"./ne.js\": 94,\n\t\"./nl\": 96,\n\t\"./nl-be\": 95,\n\t\"./nl-be.js\": 95,\n\t\"./nl.js\": 96,\n\t\"./nn\": 97,\n\t\"./nn.js\": 97,\n\t\"./pa-in\": 98,\n\t\"./pa-in.js\": 98,\n\t\"./pl\": 99,\n\t\"./pl.js\": 99,\n\t\"./pt\": 101,\n\t\"./pt-br\": 100,\n\t\"./pt-br.js\": 100,\n\t\"./pt.js\": 101,\n\t\"./ro\": 102,\n\t\"./ro.js\": 102,\n\t\"./ru\": 103,\n\t\"./ru.js\": 103,\n\t\"./sd\": 104,\n\t\"./sd.js\": 104,\n\t\"./se\": 105,\n\t\"./se.js\": 105,\n\t\"./si\": 106,\n\t\"./si.js\": 106,\n\t\"./sk\": 107,\n\t\"./sk.js\": 107,\n\t\"./sl\": 108,\n\t\"./sl.js\": 108,\n\t\"./sq\": 109,\n\t\"./sq.js\": 109,\n\t\"./sr\": 111,\n\t\"./sr-cyrl\": 110,\n\t\"./sr-cyrl.js\": 110,\n\t\"./sr.js\": 111,\n\t\"./ss\": 112,\n\t\"./ss.js\": 112,\n\t\"./sv\": 113,\n\t\"./sv.js\": 113,\n\t\"./sw\": 114,\n\t\"./sw.js\": 114,\n\t\"./ta\": 115,\n\t\"./ta.js\": 115,\n\t\"./te\": 116,\n\t\"./te.js\": 116,\n\t\"./tet\": 117,\n\t\"./tet.js\": 117,\n\t\"./tg\": 118,\n\t\"./tg.js\": 118,\n\t\"./th\": 119,\n\t\"./th.js\": 119,\n\t\"./tl-ph\": 120,\n\t\"./tl-ph.js\": 120,\n\t\"./tlh\": 121,\n\t\"./tlh.js\": 121,\n\t\"./tr\": 122,\n\t\"./tr.js\": 122,\n\t\"./tzl\": 123,\n\t\"./tzl.js\": 123,\n\t\"./tzm\": 125,\n\t\"./tzm-latn\": 124,\n\t\"./tzm-latn.js\": 124,\n\t\"./tzm.js\": 125,\n\t\"./ug-cn\": 126,\n\t\"./ug-cn.js\": 126,\n\t\"./uk\": 127,\n\t\"./uk.js\": 127,\n\t\"./ur\": 128,\n\t\"./ur.js\": 128,\n\t\"./uz\": 130,\n\t\"./uz-latn\": 129,\n\t\"./uz-latn.js\": 129,\n\t\"./uz.js\": 130,\n\t\"./vi\": 131,\n\t\"./vi.js\": 131,\n\t\"./x-pseudo\": 132,\n\t\"./x-pseudo.js\": 132,\n\t\"./yo\": 133,\n\t\"./yo.js\": 133,\n\t\"./zh-cn\": 134,\n\t\"./zh-cn.js\": 134,\n\t\"./zh-hk\": 135,\n\t\"./zh-hk.js\": 135,\n\t\"./zh-tw\": 136,\n\t\"./zh-tw.js\": 136\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 250;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 250\n// module chunks = 0","module.exports = \"<ul>\\n    <li ng-if=\\\"$ctrl.appointments.length != 0\\\" ng-repeat=\\\"appointment in $ctrl.appointments track by $index\\\">\\n      <div >{{$ctrl.widgetsCommons.formatDate(appointment.date,$ctrl.config.JSDateFormat,$ctrl.config.language)}}   {{appointment.startTime | date:'h:mm a'}} - {{appointment.endTime | date:'h:mm a'}} {{appointment.ServiceType  | translate }}</div>\\n    </li>\\n    <p ng-if=\\\"$ctrl.appointments.length == 0\\\">\\n      {{'coreapps.none' | translate }}\\n    </p>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/bahmniappointments/bahmniappointments.html\n// module id = 251\n// module chunks = 0","import angular from 'angular';\nimport WidgetsCommons from './dashboardwidgetscommons.service';\n\nlet services = angular.module('dashboardwidgets.services', []);\n\nservices.service('widgetsCommons', WidgetsCommons);\n \nexport default services.name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dashboardwidgets.services.js"],"sourceRoot":""}